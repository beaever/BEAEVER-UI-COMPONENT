import {
  CONFIG_ERROR,
  CURRENT_STORY_WAS_SET,
  DOCS_RENDERED,
  FORCE_REMOUNT,
  FORCE_RE_RENDER,
  GLOBALS_UPDATED,
  IGNORED_EXCEPTION,
  PRELOAD_STORIES,
  PREVIEW_KEYDOWN,
  RESET_STORY_ARGS,
  SET_CURRENT_STORY,
  SET_GLOBALS,
  SET_STORIES,
  STORY_ARGS_UPDATED,
  STORY_CHANGED,
  STORY_ERRORED,
  STORY_INDEX_INVALIDATED,
  STORY_MISSING,
  STORY_PREPARED,
  STORY_RENDERED,
  STORY_RENDER_PHASE_CHANGED,
  STORY_SPECIFIED,
  STORY_THREW_EXCEPTION,
  STORY_UNCHANGED,
  UPDATE_GLOBALS,
  UPDATE_QUERY_PARAMS,
  UPDATE_STORY_ARGS,
  esm_default as esm_default2,
  esm_default2 as esm_default3,
  esm_exports,
  logger,
  once,
  pretty,
  require_is_regex,
  require_is_symbol
} from "./chunk-BOFEPOWS.js";
import {
  require_ansi_to_html,
  require_dist,
  require_fast_deep_equal,
  require_get,
  require_isPlainObject,
  require_lib,
  require_mapValues,
  require_memoizerific,
  require_pick,
  require_pickBy,
  require_slash,
  require_stable,
  require_synchronous_promise
} from "./chunk-2NFKVEEQ.js";
import {
  esm_default,
  require_array_from,
  require_array_slice_simple,
  require_array_sort,
  require_browser,
  require_create_property,
  require_define_built_ins,
  require_es_array_iterator,
  require_es_regexp_exec,
  require_es_string_iterator,
  require_iterator_create_constructor,
  require_object_assign,
  require_object_create,
  require_string_multibyte,
  require_to_string,
  require_window
} from "./chunk-QTR6WGAC.js";
import {
  require_runtime
} from "./chunk-DALT7HYU.js";
import {
  require_an_instance,
  require_an_object,
  require_classof,
  require_create_property_descriptor,
  require_define_built_in,
  require_descriptors,
  require_export,
  require_fails,
  require_function_bind_context,
  require_function_call,
  require_function_uncurry_this,
  require_get_iterator,
  require_get_iterator_method,
  require_global,
  require_has_own_property,
  require_internal_state,
  require_is_callable,
  require_is_object,
  require_is_pure,
  require_iterate,
  require_make_built_in,
  require_object_define_property,
  require_set_to_string_tag,
  require_validate_arguments_length,
  require_well_known_symbol
} from "./chunk-HS3RR5N4.js";
import {
  require_react_dom
} from "./chunk-CJD7KZS7.js";
import {
  require_react
} from "./chunk-MV2WWUPO.js";
import {
  __commonJS,
  __toESM
} from "./chunk-S5KM4IGW.js";

// .yarn/unplugged/core-js-npm-3.26.1-42575888f8/node_modules/core-js/internals/is-integral-number.js
var require_is_integral_number = __commonJS({
  ".yarn/unplugged/core-js-npm-3.26.1-42575888f8/node_modules/core-js/internals/is-integral-number.js"(exports, module2) {
    var isObject5 = require_is_object();
    var floor = Math.floor;
    module2.exports = Number.isInteger || function isInteger(it) {
      return !isObject5(it) && isFinite(it) && floor(it) === it;
    };
  }
});

// .yarn/unplugged/core-js-npm-3.26.1-42575888f8/node_modules/core-js/internals/url-constructor-detection.js
var require_url_constructor_detection = __commonJS({
  ".yarn/unplugged/core-js-npm-3.26.1-42575888f8/node_modules/core-js/internals/url-constructor-detection.js"(exports, module2) {
    var fails = require_fails();
    var wellKnownSymbol = require_well_known_symbol();
    var IS_PURE = require_is_pure();
    var ITERATOR = wellKnownSymbol("iterator");
    module2.exports = !fails(function() {
      var url = new URL("b?a=1&b=2&c=3", "http://a");
      var searchParams = url.searchParams;
      var result2 = "";
      url.pathname = "c%20d";
      searchParams.forEach(function(value2, key2) {
        searchParams["delete"]("b");
        result2 += key2 + value2;
      });
      return IS_PURE && !url.toJSON || !searchParams.sort || url.href !== "http://a/c%20d?a=1&c=3" || searchParams.get("c") !== "3" || String(new URLSearchParams("?a=1")) !== "a=1" || !searchParams[ITERATOR] || new URL("https://a@b").username !== "a" || new URLSearchParams(new URLSearchParams("a=b")).get("a") !== "b" || new URL("http://\u0442\u0435\u0441\u0442").host !== "xn--e1aybc" || new URL("http://a#\u0431").hash !== "#%D0%B1" || result2 !== "a1c3" || new URL("http://x", void 0).host !== "x";
    });
  }
});

// .yarn/unplugged/core-js-npm-3.26.1-42575888f8/node_modules/core-js/internals/define-built-in-accessor.js
var require_define_built_in_accessor = __commonJS({
  ".yarn/unplugged/core-js-npm-3.26.1-42575888f8/node_modules/core-js/internals/define-built-in-accessor.js"(exports, module2) {
    var makeBuiltIn = require_make_built_in();
    var defineProperty = require_object_define_property();
    module2.exports = function(target, name2, descriptor) {
      if (descriptor.get)
        makeBuiltIn(descriptor.get, name2, { getter: true });
      if (descriptor.set)
        makeBuiltIn(descriptor.set, name2, { setter: true });
      return defineProperty.f(target, name2, descriptor);
    };
  }
});

// .yarn/unplugged/core-js-npm-3.26.1-42575888f8/node_modules/core-js/internals/string-punycode-to-ascii.js
var require_string_punycode_to_ascii = __commonJS({
  ".yarn/unplugged/core-js-npm-3.26.1-42575888f8/node_modules/core-js/internals/string-punycode-to-ascii.js"(exports, module2) {
    "use strict";
    var uncurryThis = require_function_uncurry_this();
    var maxInt = 2147483647;
    var base = 36;
    var tMin = 1;
    var tMax = 26;
    var skew = 38;
    var damp = 700;
    var initialBias = 72;
    var initialN = 128;
    var delimiter = "-";
    var regexNonASCII = /[^\0-\u007E]/;
    var regexSeparators = /[.\u3002\uFF0E\uFF61]/g;
    var OVERFLOW_ERROR = "Overflow: input needs wider integers to process";
    var baseMinusTMin = base - tMin;
    var $RangeError = RangeError;
    var exec = uncurryThis(regexSeparators.exec);
    var floor = Math.floor;
    var fromCharCode = String.fromCharCode;
    var charCodeAt = uncurryThis("".charCodeAt);
    var join = uncurryThis([].join);
    var push = uncurryThis([].push);
    var replace = uncurryThis("".replace);
    var split = uncurryThis("".split);
    var toLowerCase = uncurryThis("".toLowerCase);
    var ucs2decode = function(string) {
      var output = [];
      var counter = 0;
      var length = string.length;
      while (counter < length) {
        var value2 = charCodeAt(string, counter++);
        if (value2 >= 55296 && value2 <= 56319 && counter < length) {
          var extra = charCodeAt(string, counter++);
          if ((extra & 64512) == 56320) {
            push(output, ((value2 & 1023) << 10) + (extra & 1023) + 65536);
          } else {
            push(output, value2);
            counter--;
          }
        } else {
          push(output, value2);
        }
      }
      return output;
    };
    var digitToBasic = function(digit) {
      return digit + 22 + 75 * (digit < 26);
    };
    var adapt = function(delta, numPoints, firstTime) {
      var k = 0;
      delta = firstTime ? floor(delta / damp) : delta >> 1;
      delta += floor(delta / numPoints);
      while (delta > baseMinusTMin * tMax >> 1) {
        delta = floor(delta / baseMinusTMin);
        k += base;
      }
      return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
    };
    var encode = function(input) {
      var output = [];
      input = ucs2decode(input);
      var inputLength = input.length;
      var n = initialN;
      var delta = 0;
      var bias = initialBias;
      var i, currentValue;
      for (i = 0; i < input.length; i++) {
        currentValue = input[i];
        if (currentValue < 128) {
          push(output, fromCharCode(currentValue));
        }
      }
      var basicLength = output.length;
      var handledCPCount = basicLength;
      if (basicLength) {
        push(output, delimiter);
      }
      while (handledCPCount < inputLength) {
        var m = maxInt;
        for (i = 0; i < input.length; i++) {
          currentValue = input[i];
          if (currentValue >= n && currentValue < m) {
            m = currentValue;
          }
        }
        var handledCPCountPlusOne = handledCPCount + 1;
        if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
          throw $RangeError(OVERFLOW_ERROR);
        }
        delta += (m - n) * handledCPCountPlusOne;
        n = m;
        for (i = 0; i < input.length; i++) {
          currentValue = input[i];
          if (currentValue < n && ++delta > maxInt) {
            throw $RangeError(OVERFLOW_ERROR);
          }
          if (currentValue == n) {
            var q = delta;
            var k = base;
            while (true) {
              var t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;
              if (q < t)
                break;
              var qMinusT = q - t;
              var baseMinusT = base - t;
              push(output, fromCharCode(digitToBasic(t + qMinusT % baseMinusT)));
              q = floor(qMinusT / baseMinusT);
              k += base;
            }
            push(output, fromCharCode(digitToBasic(q)));
            bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
            delta = 0;
            handledCPCount++;
          }
        }
        delta++;
        n++;
      }
      return join(output, "");
    };
    module2.exports = function(input) {
      var encoded = [];
      var labels = split(replace(toLowerCase(input), regexSeparators, "."), ".");
      var i, label;
      for (i = 0; i < labels.length; i++) {
        label = labels[i];
        push(encoded, exec(regexNonASCII, label) ? "xn--" + encode(label) : label);
      }
      return join(encoded, ".");
    };
  }
});

// .yarn/unplugged/core-js-npm-3.26.1-42575888f8/node_modules/core-js/modules/web.url-search-params.constructor.js
var require_web_url_search_params_constructor = __commonJS({
  ".yarn/unplugged/core-js-npm-3.26.1-42575888f8/node_modules/core-js/modules/web.url-search-params.constructor.js"(exports, module2) {
    "use strict";
    require_es_array_iterator();
    var $3 = require_export();
    var global19 = require_global();
    var call = require_function_call();
    var uncurryThis = require_function_uncurry_this();
    var DESCRIPTORS = require_descriptors();
    var USE_NATIVE_URL = require_url_constructor_detection();
    var defineBuiltIn = require_define_built_in();
    var defineBuiltIns = require_define_built_ins();
    var setToStringTag = require_set_to_string_tag();
    var createIteratorConstructor = require_iterator_create_constructor();
    var InternalStateModule = require_internal_state();
    var anInstance = require_an_instance();
    var isCallable = require_is_callable();
    var hasOwn = require_has_own_property();
    var bind = require_function_bind_context();
    var classof = require_classof();
    var anObject = require_an_object();
    var isObject5 = require_is_object();
    var $toString = require_to_string();
    var create = require_object_create();
    var createPropertyDescriptor = require_create_property_descriptor();
    var getIterator = require_get_iterator();
    var getIteratorMethod = require_get_iterator_method();
    var validateArgumentsLength = require_validate_arguments_length();
    var wellKnownSymbol = require_well_known_symbol();
    var arraySort = require_array_sort();
    var ITERATOR = wellKnownSymbol("iterator");
    var URL_SEARCH_PARAMS = "URLSearchParams";
    var URL_SEARCH_PARAMS_ITERATOR = URL_SEARCH_PARAMS + "Iterator";
    var setInternalState = InternalStateModule.set;
    var getInternalParamsState = InternalStateModule.getterFor(URL_SEARCH_PARAMS);
    var getInternalIteratorState = InternalStateModule.getterFor(URL_SEARCH_PARAMS_ITERATOR);
    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
    var safeGetBuiltIn = function(name2) {
      if (!DESCRIPTORS)
        return global19[name2];
      var descriptor = getOwnPropertyDescriptor(global19, name2);
      return descriptor && descriptor.value;
    };
    var nativeFetch = safeGetBuiltIn("fetch");
    var NativeRequest = safeGetBuiltIn("Request");
    var Headers = safeGetBuiltIn("Headers");
    var RequestPrototype = NativeRequest && NativeRequest.prototype;
    var HeadersPrototype = Headers && Headers.prototype;
    var RegExp2 = global19.RegExp;
    var TypeError2 = global19.TypeError;
    var decodeURIComponent = global19.decodeURIComponent;
    var encodeURIComponent2 = global19.encodeURIComponent;
    var charAt = uncurryThis("".charAt);
    var join = uncurryThis([].join);
    var push = uncurryThis([].push);
    var replace = uncurryThis("".replace);
    var shift = uncurryThis([].shift);
    var splice = uncurryThis([].splice);
    var split = uncurryThis("".split);
    var stringSlice = uncurryThis("".slice);
    var plus = /\+/g;
    var sequences = Array(4);
    var percentSequence = function(bytes) {
      return sequences[bytes - 1] || (sequences[bytes - 1] = RegExp2("((?:%[\\da-f]{2}){" + bytes + "})", "gi"));
    };
    var percentDecode = function(sequence) {
      try {
        return decodeURIComponent(sequence);
      } catch (error) {
        return sequence;
      }
    };
    var deserialize = function(it) {
      var result2 = replace(it, plus, " ");
      var bytes = 4;
      try {
        return decodeURIComponent(result2);
      } catch (error) {
        while (bytes) {
          result2 = replace(result2, percentSequence(bytes--), percentDecode);
        }
        return result2;
      }
    };
    var find = /[!'()~]|%20/g;
    var replacements = {
      "!": "%21",
      "'": "%27",
      "(": "%28",
      ")": "%29",
      "~": "%7E",
      "%20": "+"
    };
    var replacer3 = function(match) {
      return replacements[match];
    };
    var serialize = function(it) {
      return replace(encodeURIComponent2(it), find, replacer3);
    };
    var URLSearchParamsIterator = createIteratorConstructor(function Iterator(params, kind) {
      setInternalState(this, {
        type: URL_SEARCH_PARAMS_ITERATOR,
        iterator: getIterator(getInternalParamsState(params).entries),
        kind
      });
    }, "Iterator", function next() {
      var state = getInternalIteratorState(this);
      var kind = state.kind;
      var step = state.iterator.next();
      var entry = step.value;
      if (!step.done) {
        step.value = kind === "keys" ? entry.key : kind === "values" ? entry.value : [entry.key, entry.value];
      }
      return step;
    }, true);
    var URLSearchParamsState = function(init) {
      this.entries = [];
      this.url = null;
      if (init !== void 0) {
        if (isObject5(init))
          this.parseObject(init);
        else
          this.parseQuery(typeof init == "string" ? charAt(init, 0) === "?" ? stringSlice(init, 1) : init : $toString(init));
      }
    };
    URLSearchParamsState.prototype = {
      type: URL_SEARCH_PARAMS,
      bindURL: function(url) {
        this.url = url;
        this.update();
      },
      parseObject: function(object) {
        var iteratorMethod = getIteratorMethod(object);
        var iterator, next, step, entryIterator, entryNext, first, second;
        if (iteratorMethod) {
          iterator = getIterator(object, iteratorMethod);
          next = iterator.next;
          while (!(step = call(next, iterator)).done) {
            entryIterator = getIterator(anObject(step.value));
            entryNext = entryIterator.next;
            if ((first = call(entryNext, entryIterator)).done || (second = call(entryNext, entryIterator)).done || !call(entryNext, entryIterator).done)
              throw TypeError2("Expected sequence with length 2");
            push(this.entries, { key: $toString(first.value), value: $toString(second.value) });
          }
        } else
          for (var key2 in object)
            if (hasOwn(object, key2)) {
              push(this.entries, { key: key2, value: $toString(object[key2]) });
            }
      },
      parseQuery: function(query) {
        if (query) {
          var attributes = split(query, "&");
          var index = 0;
          var attribute, entry;
          while (index < attributes.length) {
            attribute = attributes[index++];
            if (attribute.length) {
              entry = split(attribute, "=");
              push(this.entries, {
                key: deserialize(shift(entry)),
                value: deserialize(join(entry, "="))
              });
            }
          }
        }
      },
      serialize: function() {
        var entries = this.entries;
        var result2 = [];
        var index = 0;
        var entry;
        while (index < entries.length) {
          entry = entries[index++];
          push(result2, serialize(entry.key) + "=" + serialize(entry.value));
        }
        return join(result2, "&");
      },
      update: function() {
        this.entries.length = 0;
        this.parseQuery(this.url.query);
      },
      updateURL: function() {
        if (this.url)
          this.url.update();
      }
    };
    var URLSearchParamsConstructor = function URLSearchParams2() {
      anInstance(this, URLSearchParamsPrototype);
      var init = arguments.length > 0 ? arguments[0] : void 0;
      setInternalState(this, new URLSearchParamsState(init));
    };
    var URLSearchParamsPrototype = URLSearchParamsConstructor.prototype;
    defineBuiltIns(URLSearchParamsPrototype, {
      append: function append(name2, value2) {
        validateArgumentsLength(arguments.length, 2);
        var state = getInternalParamsState(this);
        push(state.entries, { key: $toString(name2), value: $toString(value2) });
        state.updateURL();
      },
      "delete": function(name2) {
        validateArgumentsLength(arguments.length, 1);
        var state = getInternalParamsState(this);
        var entries = state.entries;
        var key2 = $toString(name2);
        var index = 0;
        while (index < entries.length) {
          if (entries[index].key === key2)
            splice(entries, index, 1);
          else
            index++;
        }
        state.updateURL();
      },
      get: function get2(name2) {
        validateArgumentsLength(arguments.length, 1);
        var entries = getInternalParamsState(this).entries;
        var key2 = $toString(name2);
        var index = 0;
        for (; index < entries.length; index++) {
          if (entries[index].key === key2)
            return entries[index].value;
        }
        return null;
      },
      getAll: function getAll(name2) {
        validateArgumentsLength(arguments.length, 1);
        var entries = getInternalParamsState(this).entries;
        var key2 = $toString(name2);
        var result2 = [];
        var index = 0;
        for (; index < entries.length; index++) {
          if (entries[index].key === key2)
            push(result2, entries[index].value);
        }
        return result2;
      },
      has: function has(name2) {
        validateArgumentsLength(arguments.length, 1);
        var entries = getInternalParamsState(this).entries;
        var key2 = $toString(name2);
        var index = 0;
        while (index < entries.length) {
          if (entries[index++].key === key2)
            return true;
        }
        return false;
      },
      set: function set(name2, value2) {
        validateArgumentsLength(arguments.length, 1);
        var state = getInternalParamsState(this);
        var entries = state.entries;
        var found = false;
        var key2 = $toString(name2);
        var val = $toString(value2);
        var index = 0;
        var entry;
        for (; index < entries.length; index++) {
          entry = entries[index];
          if (entry.key === key2) {
            if (found)
              splice(entries, index--, 1);
            else {
              found = true;
              entry.value = val;
            }
          }
        }
        if (!found)
          push(entries, { key: key2, value: val });
        state.updateURL();
      },
      sort: function sort() {
        var state = getInternalParamsState(this);
        arraySort(state.entries, function(a, b) {
          return a.key > b.key ? 1 : -1;
        });
        state.updateURL();
      },
      forEach: function forEach(callback) {
        var entries = getInternalParamsState(this).entries;
        var boundFunction = bind(callback, arguments.length > 1 ? arguments[1] : void 0);
        var index = 0;
        var entry;
        while (index < entries.length) {
          entry = entries[index++];
          boundFunction(entry.value, entry.key, this);
        }
      },
      keys: function keys() {
        return new URLSearchParamsIterator(this, "keys");
      },
      values: function values() {
        return new URLSearchParamsIterator(this, "values");
      },
      entries: function entries() {
        return new URLSearchParamsIterator(this, "entries");
      }
    }, { enumerable: true });
    defineBuiltIn(URLSearchParamsPrototype, ITERATOR, URLSearchParamsPrototype.entries, { name: "entries" });
    defineBuiltIn(URLSearchParamsPrototype, "toString", function toString() {
      return getInternalParamsState(this).serialize();
    }, { enumerable: true });
    setToStringTag(URLSearchParamsConstructor, URL_SEARCH_PARAMS);
    $3({ global: true, constructor: true, forced: !USE_NATIVE_URL }, {
      URLSearchParams: URLSearchParamsConstructor
    });
    if (!USE_NATIVE_URL && isCallable(Headers)) {
      headersHas = uncurryThis(HeadersPrototype.has);
      headersSet = uncurryThis(HeadersPrototype.set);
      wrapRequestOptions = function(init) {
        if (isObject5(init)) {
          var body = init.body;
          var headers;
          if (classof(body) === URL_SEARCH_PARAMS) {
            headers = init.headers ? new Headers(init.headers) : new Headers();
            if (!headersHas(headers, "content-type")) {
              headersSet(headers, "content-type", "application/x-www-form-urlencoded;charset=UTF-8");
            }
            return create(init, {
              body: createPropertyDescriptor(0, $toString(body)),
              headers: createPropertyDescriptor(0, headers)
            });
          }
        }
        return init;
      };
      if (isCallable(nativeFetch)) {
        $3({ global: true, enumerable: true, dontCallGetSet: true, forced: true }, {
          fetch: function fetch2(input) {
            return nativeFetch(input, arguments.length > 1 ? wrapRequestOptions(arguments[1]) : {});
          }
        });
      }
      if (isCallable(NativeRequest)) {
        RequestConstructor = function Request(input) {
          anInstance(this, RequestPrototype);
          return new NativeRequest(input, arguments.length > 1 ? wrapRequestOptions(arguments[1]) : {});
        };
        RequestPrototype.constructor = RequestConstructor;
        RequestConstructor.prototype = RequestPrototype;
        $3({ global: true, constructor: true, dontCallGetSet: true, forced: true }, {
          Request: RequestConstructor
        });
      }
    }
    var headersHas;
    var headersSet;
    var wrapRequestOptions;
    var RequestConstructor;
    module2.exports = {
      URLSearchParams: URLSearchParamsConstructor,
      getState: getInternalParamsState
    };
  }
});

// .yarn/unplugged/core-js-npm-3.26.1-42575888f8/node_modules/core-js/modules/web.url.constructor.js
var require_web_url_constructor = __commonJS({
  ".yarn/unplugged/core-js-npm-3.26.1-42575888f8/node_modules/core-js/modules/web.url.constructor.js"() {
    "use strict";
    require_es_string_iterator();
    var $3 = require_export();
    var DESCRIPTORS = require_descriptors();
    var USE_NATIVE_URL = require_url_constructor_detection();
    var global19 = require_global();
    var bind = require_function_bind_context();
    var uncurryThis = require_function_uncurry_this();
    var defineBuiltIn = require_define_built_in();
    var defineBuiltInAccessor = require_define_built_in_accessor();
    var anInstance = require_an_instance();
    var hasOwn = require_has_own_property();
    var assign = require_object_assign();
    var arrayFrom = require_array_from();
    var arraySlice = require_array_slice_simple();
    var codeAt = require_string_multibyte().codeAt;
    var toASCII = require_string_punycode_to_ascii();
    var $toString = require_to_string();
    var setToStringTag = require_set_to_string_tag();
    var validateArgumentsLength = require_validate_arguments_length();
    var URLSearchParamsModule = require_web_url_search_params_constructor();
    var InternalStateModule = require_internal_state();
    var setInternalState = InternalStateModule.set;
    var getInternalURLState = InternalStateModule.getterFor("URL");
    var URLSearchParams2 = URLSearchParamsModule.URLSearchParams;
    var getInternalSearchParamsState = URLSearchParamsModule.getState;
    var NativeURL = global19.URL;
    var TypeError2 = global19.TypeError;
    var parseInt = global19.parseInt;
    var floor = Math.floor;
    var pow = Math.pow;
    var charAt = uncurryThis("".charAt);
    var exec = uncurryThis(/./.exec);
    var join = uncurryThis([].join);
    var numberToString = uncurryThis(1 .toString);
    var pop = uncurryThis([].pop);
    var push = uncurryThis([].push);
    var replace = uncurryThis("".replace);
    var shift = uncurryThis([].shift);
    var split = uncurryThis("".split);
    var stringSlice = uncurryThis("".slice);
    var toLowerCase = uncurryThis("".toLowerCase);
    var unshift = uncurryThis([].unshift);
    var INVALID_AUTHORITY = "Invalid authority";
    var INVALID_SCHEME = "Invalid scheme";
    var INVALID_HOST = "Invalid host";
    var INVALID_PORT = "Invalid port";
    var ALPHA = /[a-z]/i;
    var ALPHANUMERIC = /[\d+-.a-z]/i;
    var DIGIT = /\d/;
    var HEX_START = /^0x/i;
    var OCT = /^[0-7]+$/;
    var DEC = /^\d+$/;
    var HEX = /^[\da-f]+$/i;
    var FORBIDDEN_HOST_CODE_POINT = /[\0\t\n\r #%/:<>?@[\\\]^|]/;
    var FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\0\t\n\r #/:<>?@[\\\]^|]/;
    var LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\u0000-\u0020]+|[\u0000-\u0020]+$/g;
    var TAB_AND_NEW_LINE = /[\t\n\r]/g;
    var EOF;
    var parseIPv4 = function(input) {
      var parts = split(input, ".");
      var partsLength, numbers, index, part, radix, number, ipv4;
      if (parts.length && parts[parts.length - 1] == "") {
        parts.length--;
      }
      partsLength = parts.length;
      if (partsLength > 4)
        return input;
      numbers = [];
      for (index = 0; index < partsLength; index++) {
        part = parts[index];
        if (part == "")
          return input;
        radix = 10;
        if (part.length > 1 && charAt(part, 0) == "0") {
          radix = exec(HEX_START, part) ? 16 : 8;
          part = stringSlice(part, radix == 8 ? 1 : 2);
        }
        if (part === "") {
          number = 0;
        } else {
          if (!exec(radix == 10 ? DEC : radix == 8 ? OCT : HEX, part))
            return input;
          number = parseInt(part, radix);
        }
        push(numbers, number);
      }
      for (index = 0; index < partsLength; index++) {
        number = numbers[index];
        if (index == partsLength - 1) {
          if (number >= pow(256, 5 - partsLength))
            return null;
        } else if (number > 255)
          return null;
      }
      ipv4 = pop(numbers);
      for (index = 0; index < numbers.length; index++) {
        ipv4 += numbers[index] * pow(256, 3 - index);
      }
      return ipv4;
    };
    var parseIPv6 = function(input) {
      var address = [0, 0, 0, 0, 0, 0, 0, 0];
      var pieceIndex = 0;
      var compress = null;
      var pointer = 0;
      var value2, length, numbersSeen, ipv4Piece, number, swaps, swap;
      var chr = function() {
        return charAt(input, pointer);
      };
      if (chr() == ":") {
        if (charAt(input, 1) != ":")
          return;
        pointer += 2;
        pieceIndex++;
        compress = pieceIndex;
      }
      while (chr()) {
        if (pieceIndex == 8)
          return;
        if (chr() == ":") {
          if (compress !== null)
            return;
          pointer++;
          pieceIndex++;
          compress = pieceIndex;
          continue;
        }
        value2 = length = 0;
        while (length < 4 && exec(HEX, chr())) {
          value2 = value2 * 16 + parseInt(chr(), 16);
          pointer++;
          length++;
        }
        if (chr() == ".") {
          if (length == 0)
            return;
          pointer -= length;
          if (pieceIndex > 6)
            return;
          numbersSeen = 0;
          while (chr()) {
            ipv4Piece = null;
            if (numbersSeen > 0) {
              if (chr() == "." && numbersSeen < 4)
                pointer++;
              else
                return;
            }
            if (!exec(DIGIT, chr()))
              return;
            while (exec(DIGIT, chr())) {
              number = parseInt(chr(), 10);
              if (ipv4Piece === null)
                ipv4Piece = number;
              else if (ipv4Piece == 0)
                return;
              else
                ipv4Piece = ipv4Piece * 10 + number;
              if (ipv4Piece > 255)
                return;
              pointer++;
            }
            address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;
            numbersSeen++;
            if (numbersSeen == 2 || numbersSeen == 4)
              pieceIndex++;
          }
          if (numbersSeen != 4)
            return;
          break;
        } else if (chr() == ":") {
          pointer++;
          if (!chr())
            return;
        } else if (chr())
          return;
        address[pieceIndex++] = value2;
      }
      if (compress !== null) {
        swaps = pieceIndex - compress;
        pieceIndex = 7;
        while (pieceIndex != 0 && swaps > 0) {
          swap = address[pieceIndex];
          address[pieceIndex--] = address[compress + swaps - 1];
          address[compress + --swaps] = swap;
        }
      } else if (pieceIndex != 8)
        return;
      return address;
    };
    var findLongestZeroSequence = function(ipv6) {
      var maxIndex = null;
      var maxLength = 1;
      var currStart = null;
      var currLength = 0;
      var index = 0;
      for (; index < 8; index++) {
        if (ipv6[index] !== 0) {
          if (currLength > maxLength) {
            maxIndex = currStart;
            maxLength = currLength;
          }
          currStart = null;
          currLength = 0;
        } else {
          if (currStart === null)
            currStart = index;
          ++currLength;
        }
      }
      if (currLength > maxLength) {
        maxIndex = currStart;
        maxLength = currLength;
      }
      return maxIndex;
    };
    var serializeHost = function(host) {
      var result2, index, compress, ignore0;
      if (typeof host == "number") {
        result2 = [];
        for (index = 0; index < 4; index++) {
          unshift(result2, host % 256);
          host = floor(host / 256);
        }
        return join(result2, ".");
      } else if (typeof host == "object") {
        result2 = "";
        compress = findLongestZeroSequence(host);
        for (index = 0; index < 8; index++) {
          if (ignore0 && host[index] === 0)
            continue;
          if (ignore0)
            ignore0 = false;
          if (compress === index) {
            result2 += index ? ":" : "::";
            ignore0 = true;
          } else {
            result2 += numberToString(host[index], 16);
            if (index < 7)
              result2 += ":";
          }
        }
        return "[" + result2 + "]";
      }
      return host;
    };
    var C0ControlPercentEncodeSet = {};
    var fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {
      " ": 1,
      '"': 1,
      "<": 1,
      ">": 1,
      "`": 1
    });
    var pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {
      "#": 1,
      "?": 1,
      "{": 1,
      "}": 1
    });
    var userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {
      "/": 1,
      ":": 1,
      ";": 1,
      "=": 1,
      "@": 1,
      "[": 1,
      "\\": 1,
      "]": 1,
      "^": 1,
      "|": 1
    });
    var percentEncode = function(chr, set) {
      var code = codeAt(chr, 0);
      return code > 32 && code < 127 && !hasOwn(set, chr) ? chr : encodeURIComponent(chr);
    };
    var specialSchemes = {
      ftp: 21,
      file: null,
      http: 80,
      https: 443,
      ws: 80,
      wss: 443
    };
    var isWindowsDriveLetter = function(string, normalized) {
      var second;
      return string.length == 2 && exec(ALPHA, charAt(string, 0)) && ((second = charAt(string, 1)) == ":" || !normalized && second == "|");
    };
    var startsWithWindowsDriveLetter = function(string) {
      var third;
      return string.length > 1 && isWindowsDriveLetter(stringSlice(string, 0, 2)) && (string.length == 2 || ((third = charAt(string, 2)) === "/" || third === "\\" || third === "?" || third === "#"));
    };
    var isSingleDot = function(segment) {
      return segment === "." || toLowerCase(segment) === "%2e";
    };
    var isDoubleDot = function(segment) {
      segment = toLowerCase(segment);
      return segment === ".." || segment === "%2e." || segment === ".%2e" || segment === "%2e%2e";
    };
    var SCHEME_START = {};
    var SCHEME = {};
    var NO_SCHEME = {};
    var SPECIAL_RELATIVE_OR_AUTHORITY = {};
    var PATH_OR_AUTHORITY = {};
    var RELATIVE = {};
    var RELATIVE_SLASH = {};
    var SPECIAL_AUTHORITY_SLASHES = {};
    var SPECIAL_AUTHORITY_IGNORE_SLASHES = {};
    var AUTHORITY = {};
    var HOST = {};
    var HOSTNAME = {};
    var PORT = {};
    var FILE = {};
    var FILE_SLASH = {};
    var FILE_HOST = {};
    var PATH_START = {};
    var PATH = {};
    var CANNOT_BE_A_BASE_URL_PATH = {};
    var QUERY = {};
    var FRAGMENT = {};
    var URLState = function(url, isBase, base) {
      var urlString = $toString(url);
      var baseState, failure, searchParams;
      if (isBase) {
        failure = this.parse(urlString);
        if (failure)
          throw TypeError2(failure);
        this.searchParams = null;
      } else {
        if (base !== void 0)
          baseState = new URLState(base, true);
        failure = this.parse(urlString, null, baseState);
        if (failure)
          throw TypeError2(failure);
        searchParams = getInternalSearchParamsState(new URLSearchParams2());
        searchParams.bindURL(this);
        this.searchParams = searchParams;
      }
    };
    URLState.prototype = {
      type: "URL",
      parse: function(input, stateOverride, base) {
        var url = this;
        var state = stateOverride || SCHEME_START;
        var pointer = 0;
        var buffer = "";
        var seenAt = false;
        var seenBracket = false;
        var seenPasswordToken = false;
        var codePoints, chr, bufferCodePoints, failure;
        input = $toString(input);
        if (!stateOverride) {
          url.scheme = "";
          url.username = "";
          url.password = "";
          url.host = null;
          url.port = null;
          url.path = [];
          url.query = null;
          url.fragment = null;
          url.cannotBeABaseURL = false;
          input = replace(input, LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, "");
        }
        input = replace(input, TAB_AND_NEW_LINE, "");
        codePoints = arrayFrom(input);
        while (pointer <= codePoints.length) {
          chr = codePoints[pointer];
          switch (state) {
            case SCHEME_START:
              if (chr && exec(ALPHA, chr)) {
                buffer += toLowerCase(chr);
                state = SCHEME;
              } else if (!stateOverride) {
                state = NO_SCHEME;
                continue;
              } else
                return INVALID_SCHEME;
              break;
            case SCHEME:
              if (chr && (exec(ALPHANUMERIC, chr) || chr == "+" || chr == "-" || chr == ".")) {
                buffer += toLowerCase(chr);
              } else if (chr == ":") {
                if (stateOverride && (url.isSpecial() != hasOwn(specialSchemes, buffer) || buffer == "file" && (url.includesCredentials() || url.port !== null) || url.scheme == "file" && !url.host))
                  return;
                url.scheme = buffer;
                if (stateOverride) {
                  if (url.isSpecial() && specialSchemes[url.scheme] == url.port)
                    url.port = null;
                  return;
                }
                buffer = "";
                if (url.scheme == "file") {
                  state = FILE;
                } else if (url.isSpecial() && base && base.scheme == url.scheme) {
                  state = SPECIAL_RELATIVE_OR_AUTHORITY;
                } else if (url.isSpecial()) {
                  state = SPECIAL_AUTHORITY_SLASHES;
                } else if (codePoints[pointer + 1] == "/") {
                  state = PATH_OR_AUTHORITY;
                  pointer++;
                } else {
                  url.cannotBeABaseURL = true;
                  push(url.path, "");
                  state = CANNOT_BE_A_BASE_URL_PATH;
                }
              } else if (!stateOverride) {
                buffer = "";
                state = NO_SCHEME;
                pointer = 0;
                continue;
              } else
                return INVALID_SCHEME;
              break;
            case NO_SCHEME:
              if (!base || base.cannotBeABaseURL && chr != "#")
                return INVALID_SCHEME;
              if (base.cannotBeABaseURL && chr == "#") {
                url.scheme = base.scheme;
                url.path = arraySlice(base.path);
                url.query = base.query;
                url.fragment = "";
                url.cannotBeABaseURL = true;
                state = FRAGMENT;
                break;
              }
              state = base.scheme == "file" ? FILE : RELATIVE;
              continue;
            case SPECIAL_RELATIVE_OR_AUTHORITY:
              if (chr == "/" && codePoints[pointer + 1] == "/") {
                state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
                pointer++;
              } else {
                state = RELATIVE;
                continue;
              }
              break;
            case PATH_OR_AUTHORITY:
              if (chr == "/") {
                state = AUTHORITY;
                break;
              } else {
                state = PATH;
                continue;
              }
            case RELATIVE:
              url.scheme = base.scheme;
              if (chr == EOF) {
                url.username = base.username;
                url.password = base.password;
                url.host = base.host;
                url.port = base.port;
                url.path = arraySlice(base.path);
                url.query = base.query;
              } else if (chr == "/" || chr == "\\" && url.isSpecial()) {
                state = RELATIVE_SLASH;
              } else if (chr == "?") {
                url.username = base.username;
                url.password = base.password;
                url.host = base.host;
                url.port = base.port;
                url.path = arraySlice(base.path);
                url.query = "";
                state = QUERY;
              } else if (chr == "#") {
                url.username = base.username;
                url.password = base.password;
                url.host = base.host;
                url.port = base.port;
                url.path = arraySlice(base.path);
                url.query = base.query;
                url.fragment = "";
                state = FRAGMENT;
              } else {
                url.username = base.username;
                url.password = base.password;
                url.host = base.host;
                url.port = base.port;
                url.path = arraySlice(base.path);
                url.path.length--;
                state = PATH;
                continue;
              }
              break;
            case RELATIVE_SLASH:
              if (url.isSpecial() && (chr == "/" || chr == "\\")) {
                state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
              } else if (chr == "/") {
                state = AUTHORITY;
              } else {
                url.username = base.username;
                url.password = base.password;
                url.host = base.host;
                url.port = base.port;
                state = PATH;
                continue;
              }
              break;
            case SPECIAL_AUTHORITY_SLASHES:
              state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
              if (chr != "/" || charAt(buffer, pointer + 1) != "/")
                continue;
              pointer++;
              break;
            case SPECIAL_AUTHORITY_IGNORE_SLASHES:
              if (chr != "/" && chr != "\\") {
                state = AUTHORITY;
                continue;
              }
              break;
            case AUTHORITY:
              if (chr == "@") {
                if (seenAt)
                  buffer = "%40" + buffer;
                seenAt = true;
                bufferCodePoints = arrayFrom(buffer);
                for (var i = 0; i < bufferCodePoints.length; i++) {
                  var codePoint = bufferCodePoints[i];
                  if (codePoint == ":" && !seenPasswordToken) {
                    seenPasswordToken = true;
                    continue;
                  }
                  var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);
                  if (seenPasswordToken)
                    url.password += encodedCodePoints;
                  else
                    url.username += encodedCodePoints;
                }
                buffer = "";
              } else if (chr == EOF || chr == "/" || chr == "?" || chr == "#" || chr == "\\" && url.isSpecial()) {
                if (seenAt && buffer == "")
                  return INVALID_AUTHORITY;
                pointer -= arrayFrom(buffer).length + 1;
                buffer = "";
                state = HOST;
              } else
                buffer += chr;
              break;
            case HOST:
            case HOSTNAME:
              if (stateOverride && url.scheme == "file") {
                state = FILE_HOST;
                continue;
              } else if (chr == ":" && !seenBracket) {
                if (buffer == "")
                  return INVALID_HOST;
                failure = url.parseHost(buffer);
                if (failure)
                  return failure;
                buffer = "";
                state = PORT;
                if (stateOverride == HOSTNAME)
                  return;
              } else if (chr == EOF || chr == "/" || chr == "?" || chr == "#" || chr == "\\" && url.isSpecial()) {
                if (url.isSpecial() && buffer == "")
                  return INVALID_HOST;
                if (stateOverride && buffer == "" && (url.includesCredentials() || url.port !== null))
                  return;
                failure = url.parseHost(buffer);
                if (failure)
                  return failure;
                buffer = "";
                state = PATH_START;
                if (stateOverride)
                  return;
                continue;
              } else {
                if (chr == "[")
                  seenBracket = true;
                else if (chr == "]")
                  seenBracket = false;
                buffer += chr;
              }
              break;
            case PORT:
              if (exec(DIGIT, chr)) {
                buffer += chr;
              } else if (chr == EOF || chr == "/" || chr == "?" || chr == "#" || chr == "\\" && url.isSpecial() || stateOverride) {
                if (buffer != "") {
                  var port = parseInt(buffer, 10);
                  if (port > 65535)
                    return INVALID_PORT;
                  url.port = url.isSpecial() && port === specialSchemes[url.scheme] ? null : port;
                  buffer = "";
                }
                if (stateOverride)
                  return;
                state = PATH_START;
                continue;
              } else
                return INVALID_PORT;
              break;
            case FILE:
              url.scheme = "file";
              if (chr == "/" || chr == "\\")
                state = FILE_SLASH;
              else if (base && base.scheme == "file") {
                if (chr == EOF) {
                  url.host = base.host;
                  url.path = arraySlice(base.path);
                  url.query = base.query;
                } else if (chr == "?") {
                  url.host = base.host;
                  url.path = arraySlice(base.path);
                  url.query = "";
                  state = QUERY;
                } else if (chr == "#") {
                  url.host = base.host;
                  url.path = arraySlice(base.path);
                  url.query = base.query;
                  url.fragment = "";
                  state = FRAGMENT;
                } else {
                  if (!startsWithWindowsDriveLetter(join(arraySlice(codePoints, pointer), ""))) {
                    url.host = base.host;
                    url.path = arraySlice(base.path);
                    url.shortenPath();
                  }
                  state = PATH;
                  continue;
                }
              } else {
                state = PATH;
                continue;
              }
              break;
            case FILE_SLASH:
              if (chr == "/" || chr == "\\") {
                state = FILE_HOST;
                break;
              }
              if (base && base.scheme == "file" && !startsWithWindowsDriveLetter(join(arraySlice(codePoints, pointer), ""))) {
                if (isWindowsDriveLetter(base.path[0], true))
                  push(url.path, base.path[0]);
                else
                  url.host = base.host;
              }
              state = PATH;
              continue;
            case FILE_HOST:
              if (chr == EOF || chr == "/" || chr == "\\" || chr == "?" || chr == "#") {
                if (!stateOverride && isWindowsDriveLetter(buffer)) {
                  state = PATH;
                } else if (buffer == "") {
                  url.host = "";
                  if (stateOverride)
                    return;
                  state = PATH_START;
                } else {
                  failure = url.parseHost(buffer);
                  if (failure)
                    return failure;
                  if (url.host == "localhost")
                    url.host = "";
                  if (stateOverride)
                    return;
                  buffer = "";
                  state = PATH_START;
                }
                continue;
              } else
                buffer += chr;
              break;
            case PATH_START:
              if (url.isSpecial()) {
                state = PATH;
                if (chr != "/" && chr != "\\")
                  continue;
              } else if (!stateOverride && chr == "?") {
                url.query = "";
                state = QUERY;
              } else if (!stateOverride && chr == "#") {
                url.fragment = "";
                state = FRAGMENT;
              } else if (chr != EOF) {
                state = PATH;
                if (chr != "/")
                  continue;
              }
              break;
            case PATH:
              if (chr == EOF || chr == "/" || chr == "\\" && url.isSpecial() || !stateOverride && (chr == "?" || chr == "#")) {
                if (isDoubleDot(buffer)) {
                  url.shortenPath();
                  if (chr != "/" && !(chr == "\\" && url.isSpecial())) {
                    push(url.path, "");
                  }
                } else if (isSingleDot(buffer)) {
                  if (chr != "/" && !(chr == "\\" && url.isSpecial())) {
                    push(url.path, "");
                  }
                } else {
                  if (url.scheme == "file" && !url.path.length && isWindowsDriveLetter(buffer)) {
                    if (url.host)
                      url.host = "";
                    buffer = charAt(buffer, 0) + ":";
                  }
                  push(url.path, buffer);
                }
                buffer = "";
                if (url.scheme == "file" && (chr == EOF || chr == "?" || chr == "#")) {
                  while (url.path.length > 1 && url.path[0] === "") {
                    shift(url.path);
                  }
                }
                if (chr == "?") {
                  url.query = "";
                  state = QUERY;
                } else if (chr == "#") {
                  url.fragment = "";
                  state = FRAGMENT;
                }
              } else {
                buffer += percentEncode(chr, pathPercentEncodeSet);
              }
              break;
            case CANNOT_BE_A_BASE_URL_PATH:
              if (chr == "?") {
                url.query = "";
                state = QUERY;
              } else if (chr == "#") {
                url.fragment = "";
                state = FRAGMENT;
              } else if (chr != EOF) {
                url.path[0] += percentEncode(chr, C0ControlPercentEncodeSet);
              }
              break;
            case QUERY:
              if (!stateOverride && chr == "#") {
                url.fragment = "";
                state = FRAGMENT;
              } else if (chr != EOF) {
                if (chr == "'" && url.isSpecial())
                  url.query += "%27";
                else if (chr == "#")
                  url.query += "%23";
                else
                  url.query += percentEncode(chr, C0ControlPercentEncodeSet);
              }
              break;
            case FRAGMENT:
              if (chr != EOF)
                url.fragment += percentEncode(chr, fragmentPercentEncodeSet);
              break;
          }
          pointer++;
        }
      },
      parseHost: function(input) {
        var result2, codePoints, index;
        if (charAt(input, 0) == "[") {
          if (charAt(input, input.length - 1) != "]")
            return INVALID_HOST;
          result2 = parseIPv6(stringSlice(input, 1, -1));
          if (!result2)
            return INVALID_HOST;
          this.host = result2;
        } else if (!this.isSpecial()) {
          if (exec(FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT, input))
            return INVALID_HOST;
          result2 = "";
          codePoints = arrayFrom(input);
          for (index = 0; index < codePoints.length; index++) {
            result2 += percentEncode(codePoints[index], C0ControlPercentEncodeSet);
          }
          this.host = result2;
        } else {
          input = toASCII(input);
          if (exec(FORBIDDEN_HOST_CODE_POINT, input))
            return INVALID_HOST;
          result2 = parseIPv4(input);
          if (result2 === null)
            return INVALID_HOST;
          this.host = result2;
        }
      },
      cannotHaveUsernamePasswordPort: function() {
        return !this.host || this.cannotBeABaseURL || this.scheme == "file";
      },
      includesCredentials: function() {
        return this.username != "" || this.password != "";
      },
      isSpecial: function() {
        return hasOwn(specialSchemes, this.scheme);
      },
      shortenPath: function() {
        var path = this.path;
        var pathSize = path.length;
        if (pathSize && (this.scheme != "file" || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {
          path.length--;
        }
      },
      serialize: function() {
        var url = this;
        var scheme = url.scheme;
        var username = url.username;
        var password = url.password;
        var host = url.host;
        var port = url.port;
        var path = url.path;
        var query = url.query;
        var fragment = url.fragment;
        var output = scheme + ":";
        if (host !== null) {
          output += "//";
          if (url.includesCredentials()) {
            output += username + (password ? ":" + password : "") + "@";
          }
          output += serializeHost(host);
          if (port !== null)
            output += ":" + port;
        } else if (scheme == "file")
          output += "//";
        output += url.cannotBeABaseURL ? path[0] : path.length ? "/" + join(path, "/") : "";
        if (query !== null)
          output += "?" + query;
        if (fragment !== null)
          output += "#" + fragment;
        return output;
      },
      setHref: function(href) {
        var failure = this.parse(href);
        if (failure)
          throw TypeError2(failure);
        this.searchParams.update();
      },
      getOrigin: function() {
        var scheme = this.scheme;
        var port = this.port;
        if (scheme == "blob")
          try {
            return new URLConstructor(scheme.path[0]).origin;
          } catch (error) {
            return "null";
          }
        if (scheme == "file" || !this.isSpecial())
          return "null";
        return scheme + "://" + serializeHost(this.host) + (port !== null ? ":" + port : "");
      },
      getProtocol: function() {
        return this.scheme + ":";
      },
      setProtocol: function(protocol) {
        this.parse($toString(protocol) + ":", SCHEME_START);
      },
      getUsername: function() {
        return this.username;
      },
      setUsername: function(username) {
        var codePoints = arrayFrom($toString(username));
        if (this.cannotHaveUsernamePasswordPort())
          return;
        this.username = "";
        for (var i = 0; i < codePoints.length; i++) {
          this.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);
        }
      },
      getPassword: function() {
        return this.password;
      },
      setPassword: function(password) {
        var codePoints = arrayFrom($toString(password));
        if (this.cannotHaveUsernamePasswordPort())
          return;
        this.password = "";
        for (var i = 0; i < codePoints.length; i++) {
          this.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);
        }
      },
      getHost: function() {
        var host = this.host;
        var port = this.port;
        return host === null ? "" : port === null ? serializeHost(host) : serializeHost(host) + ":" + port;
      },
      setHost: function(host) {
        if (this.cannotBeABaseURL)
          return;
        this.parse(host, HOST);
      },
      getHostname: function() {
        var host = this.host;
        return host === null ? "" : serializeHost(host);
      },
      setHostname: function(hostname) {
        if (this.cannotBeABaseURL)
          return;
        this.parse(hostname, HOSTNAME);
      },
      getPort: function() {
        var port = this.port;
        return port === null ? "" : $toString(port);
      },
      setPort: function(port) {
        if (this.cannotHaveUsernamePasswordPort())
          return;
        port = $toString(port);
        if (port == "")
          this.port = null;
        else
          this.parse(port, PORT);
      },
      getPathname: function() {
        var path = this.path;
        return this.cannotBeABaseURL ? path[0] : path.length ? "/" + join(path, "/") : "";
      },
      setPathname: function(pathname) {
        if (this.cannotBeABaseURL)
          return;
        this.path = [];
        this.parse(pathname, PATH_START);
      },
      getSearch: function() {
        var query = this.query;
        return query ? "?" + query : "";
      },
      setSearch: function(search) {
        search = $toString(search);
        if (search == "") {
          this.query = null;
        } else {
          if ("?" == charAt(search, 0))
            search = stringSlice(search, 1);
          this.query = "";
          this.parse(search, QUERY);
        }
        this.searchParams.update();
      },
      getSearchParams: function() {
        return this.searchParams.facade;
      },
      getHash: function() {
        var fragment = this.fragment;
        return fragment ? "#" + fragment : "";
      },
      setHash: function(hash) {
        hash = $toString(hash);
        if (hash == "") {
          this.fragment = null;
          return;
        }
        if ("#" == charAt(hash, 0))
          hash = stringSlice(hash, 1);
        this.fragment = "";
        this.parse(hash, FRAGMENT);
      },
      update: function() {
        this.query = this.searchParams.serialize() || null;
      }
    };
    var URLConstructor = function URL2(url) {
      var that = anInstance(this, URLPrototype);
      var base = validateArgumentsLength(arguments.length, 1) > 1 ? arguments[1] : void 0;
      var state = setInternalState(that, new URLState(url, false, base));
      if (!DESCRIPTORS) {
        that.href = state.serialize();
        that.origin = state.getOrigin();
        that.protocol = state.getProtocol();
        that.username = state.getUsername();
        that.password = state.getPassword();
        that.host = state.getHost();
        that.hostname = state.getHostname();
        that.port = state.getPort();
        that.pathname = state.getPathname();
        that.search = state.getSearch();
        that.searchParams = state.getSearchParams();
        that.hash = state.getHash();
      }
    };
    var URLPrototype = URLConstructor.prototype;
    var accessorDescriptor = function(getter, setter) {
      return {
        get: function() {
          return getInternalURLState(this)[getter]();
        },
        set: setter && function(value2) {
          return getInternalURLState(this)[setter](value2);
        },
        configurable: true,
        enumerable: true
      };
    };
    if (DESCRIPTORS) {
      defineBuiltInAccessor(URLPrototype, "href", accessorDescriptor("serialize", "setHref"));
      defineBuiltInAccessor(URLPrototype, "origin", accessorDescriptor("getOrigin"));
      defineBuiltInAccessor(URLPrototype, "protocol", accessorDescriptor("getProtocol", "setProtocol"));
      defineBuiltInAccessor(URLPrototype, "username", accessorDescriptor("getUsername", "setUsername"));
      defineBuiltInAccessor(URLPrototype, "password", accessorDescriptor("getPassword", "setPassword"));
      defineBuiltInAccessor(URLPrototype, "host", accessorDescriptor("getHost", "setHost"));
      defineBuiltInAccessor(URLPrototype, "hostname", accessorDescriptor("getHostname", "setHostname"));
      defineBuiltInAccessor(URLPrototype, "port", accessorDescriptor("getPort", "setPort"));
      defineBuiltInAccessor(URLPrototype, "pathname", accessorDescriptor("getPathname", "setPathname"));
      defineBuiltInAccessor(URLPrototype, "search", accessorDescriptor("getSearch", "setSearch"));
      defineBuiltInAccessor(URLPrototype, "searchParams", accessorDescriptor("getSearchParams"));
      defineBuiltInAccessor(URLPrototype, "hash", accessorDescriptor("getHash", "setHash"));
    }
    defineBuiltIn(URLPrototype, "toJSON", function toJSON() {
      return getInternalURLState(this).serialize();
    }, { enumerable: true });
    defineBuiltIn(URLPrototype, "toString", function toString() {
      return getInternalURLState(this).serialize();
    }, { enumerable: true });
    if (NativeURL) {
      nativeCreateObjectURL = NativeURL.createObjectURL;
      nativeRevokeObjectURL = NativeURL.revokeObjectURL;
      if (nativeCreateObjectURL)
        defineBuiltIn(URLConstructor, "createObjectURL", bind(nativeCreateObjectURL, NativeURL));
      if (nativeRevokeObjectURL)
        defineBuiltIn(URLConstructor, "revokeObjectURL", bind(nativeRevokeObjectURL, NativeURL));
    }
    var nativeCreateObjectURL;
    var nativeRevokeObjectURL;
    setToStringTag(URLConstructor, "URL");
    $3({ global: true, constructor: true, forced: !USE_NATIVE_URL, sham: !DESCRIPTORS }, {
      URL: URLConstructor
    });
  }
});

// .yarn/cache/is-function-npm-1.0.2-90ac01927b-7d564562e0.zip/node_modules/is-function/index.js
var require_is_function = __commonJS({
  ".yarn/cache/is-function-npm-1.0.2-90ac01927b-7d564562e0.zip/node_modules/is-function/index.js"(exports, module2) {
    module2.exports = isFunction2;
    var toString = Object.prototype.toString;
    function isFunction2(fn) {
      if (!fn) {
        return false;
      }
      var string = toString.call(fn);
      return string === "[object Function]" || typeof fn === "function" && string !== "[object RegExp]" || typeof window !== "undefined" && (fn === window.setTimeout || fn === window.alert || fn === window.confirm || fn === window.prompt);
    }
  }
});

// .yarn/__virtual__/@storybook-client-api-virtual-11b070aabf/0/cache/@storybook-client-api-npm-6.5.13-9e2abd4d1f-b0af25786b.zip/node_modules/@storybook/client-api/dist/esm/ClientApi.js
var import_es_regexp_exec19 = __toESM(require_es_regexp_exec());
var import_es_array_iterator17 = __toESM(require_es_array_iterator());
var import_es_string_iterator17 = __toESM(require_es_string_iterator());
var import_util_deprecate4 = __toESM(require_browser());
var import_global6 = __toESM(require_window());
var import_csf8 = __toESM(require_dist());

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/StoryStore.js
var import_runtime2 = __toESM(require_runtime());
var import_es_array_iterator14 = __toESM(require_es_array_iterator());
var import_es_string_iterator14 = __toESM(require_es_string_iterator());
var import_es_regexp_exec15 = __toESM(require_es_regexp_exec());
var import_memoizerific = __toESM(require_memoizerific());
var import_mapValues4 = __toESM(require_mapValues());
var import_pick = __toESM(require_pick());
var import_global4 = __toESM(require_window());
var import_synchronous_promise = __toESM(require_synchronous_promise());

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/StoryIndexStore.js
var import_es_array_iterator = __toESM(require_es_array_iterator());
var import_es_string_iterator = __toESM(require_es_string_iterator());
var import_es_regexp_exec = __toESM(require_es_regexp_exec());
var _templateObject;
function _taggedTemplateLiteral(strings, raw2) {
  if (!raw2) {
    raw2 = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw2) } }));
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
var StoryIndexStore = function() {
  function StoryIndexStore2() {
    var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {
      v: 3,
      stories: {}
    }, stories = _ref.stories;
    _classCallCheck(this, StoryIndexStore2);
    this.channel = void 0;
    this.stories = void 0;
    this.stories = stories;
  }
  _createClass(StoryIndexStore2, [{
    key: "storyIdFromSpecifier",
    value: function storyIdFromSpecifier(specifier) {
      var storyIds = Object.keys(this.stories);
      if (specifier === "*") {
        return storyIds[0];
      }
      if (typeof specifier === "string") {
        if (storyIds.indexOf(specifier) >= 0) {
          return specifier;
        }
        return storyIds.find(function(storyId) {
          return storyId.startsWith(specifier);
        });
      }
      var name2 = specifier.name, title = specifier.title;
      var match = Object.entries(this.stories).find(function(_ref22) {
        var _ref32 = _slicedToArray(_ref22, 2), id = _ref32[0], story = _ref32[1];
        return story.name === name2 && story.title === title;
      });
      return match && match[0];
    }
  }, {
    key: "storyIdToEntry",
    value: function storyIdToEntry(storyId) {
      var storyEntry = this.stories[storyId];
      if (!storyEntry) {
        throw new Error(esm_default(_templateObject || (_templateObject = _taggedTemplateLiteral(["Couldn't find story matching '", "' after HMR.\n      - Did you remove it from your CSF file?\n      - Are you sure a story with that id exists?\n      - Please check your stories field of your main.js config.\n      - Also check the browser console and terminal for error messages."])), storyId));
      }
      return storyEntry;
    }
  }]);
  return StoryIndexStore2;
}();

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/args.js
var import_es_array_iterator2 = __toESM(require_es_array_iterator());
var import_es_string_iterator2 = __toESM(require_es_string_iterator());
var import_es_regexp_exec2 = __toESM(require_es_regexp_exec());
var import_fast_deep_equal = __toESM(require_fast_deep_equal());
var import_isPlainObject = __toESM(require_isPlainObject());
var _templateObject2;
var _templateObject22;
function _taggedTemplateLiteral2(strings, raw2) {
  if (!raw2) {
    raw2 = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw2) } }));
}
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray2(arr);
}
function _defineProperty(obj, key2, value2) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value2, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value2;
  }
  return obj;
}
function _slicedToArray2(arr, i) {
  return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i) || _unsupportedIterableToArray2(arr, i) || _nonIterableRest2();
}
function _nonIterableRest2() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray2(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray2(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray2(o, minLen);
}
function _arrayLikeToArray2(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit2(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles2(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _typeof(obj) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof(obj);
}
var INCOMPATIBLE = Symbol("incompatible");
var map = function map2(arg, argType) {
  var type = argType.type;
  if (arg === void 0 || arg === null || !type)
    return arg;
  if (argType.mapping) {
    return arg;
  }
  switch (type.name) {
    case "string":
      return String(arg);
    case "enum":
      return arg;
    case "number":
      return Number(arg);
    case "boolean":
      return arg === "true";
    case "array":
      if (!type.value || !Array.isArray(arg))
        return INCOMPATIBLE;
      return arg.reduce(function(acc, item, index) {
        var mapped = map2(item, {
          type: type.value
        });
        if (mapped !== INCOMPATIBLE)
          acc[index] = mapped;
        return acc;
      }, new Array(arg.length));
    case "object":
      if (typeof arg === "string" || typeof arg === "number")
        return arg;
      if (!type.value || _typeof(arg) !== "object")
        return INCOMPATIBLE;
      return Object.entries(arg).reduce(function(acc, _ref) {
        var _ref22 = _slicedToArray2(_ref, 2), key2 = _ref22[0], val = _ref22[1];
        var mapped = map2(val, {
          type: type.value[key2]
        });
        return mapped === INCOMPATIBLE ? acc : Object.assign(acc, _defineProperty({}, key2, mapped));
      }, {});
    default:
      return INCOMPATIBLE;
  }
};
var mapArgsToTypes = function mapArgsToTypes2(args, argTypes) {
  return Object.entries(args).reduce(function(acc, _ref32) {
    var _ref42 = _slicedToArray2(_ref32, 2), key2 = _ref42[0], value2 = _ref42[1];
    if (!argTypes[key2])
      return acc;
    var mapped = map(value2, argTypes[key2]);
    return mapped === INCOMPATIBLE ? acc : Object.assign(acc, _defineProperty({}, key2, mapped));
  }, {});
};
var combineArgs = function combineArgs2(value2, update) {
  if (Array.isArray(value2) && Array.isArray(update)) {
    return update.reduce(function(acc, upd, index) {
      acc[index] = combineArgs2(value2[index], update[index]);
      return acc;
    }, _toConsumableArray(value2)).filter(function(v) {
      return v !== void 0;
    });
  }
  if (!(0, import_isPlainObject.default)(value2) || !(0, import_isPlainObject.default)(update))
    return update;
  return Object.keys(Object.assign({}, value2, update)).reduce(function(acc, key2) {
    if (key2 in update) {
      var combined = combineArgs2(value2[key2], update[key2]);
      if (combined !== void 0)
        acc[key2] = combined;
    } else {
      acc[key2] = value2[key2];
    }
    return acc;
  }, {});
};
var validateOptions = function validateOptions2(args, argTypes) {
  return Object.entries(argTypes).reduce(function(acc, _ref52) {
    var _ref6 = _slicedToArray2(_ref52, 2), key2 = _ref6[0], options2 = _ref6[1].options;
    function allowArg() {
      if (key2 in args) {
        acc[key2] = args[key2];
      }
      return acc;
    }
    if (!options2)
      return allowArg();
    if (!Array.isArray(options2)) {
      once.error(esm_default(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral2(["\n        Invalid argType: '", ".options' should be an array.\n\n        More info: https://storybook.js.org/docs/react/api/argtypes\n      "])), key2));
      return allowArg();
    }
    if (options2.some(function(opt) {
      return opt && ["object", "function"].includes(_typeof(opt));
    })) {
      once.error(esm_default(_templateObject22 || (_templateObject22 = _taggedTemplateLiteral2(["\n        Invalid argType: '", ".options' should only contain primitives. Use a 'mapping' for complex values.\n\n        More info: https://storybook.js.org/docs/react/writing-stories/args#mapping-to-complex-arg-values\n      "])), key2));
      return allowArg();
    }
    var isArray = Array.isArray(args[key2]);
    var invalidIndex = isArray && args[key2].findIndex(function(val) {
      return !options2.includes(val);
    });
    var isValidArray = isArray && invalidIndex === -1;
    if (args[key2] === void 0 || options2.includes(args[key2]) || isValidArray) {
      return allowArg();
    }
    var field = isArray ? "".concat(key2, "[").concat(invalidIndex, "]") : key2;
    var supportedOptions = options2.map(function(opt) {
      return typeof opt === "string" ? "'".concat(opt, "'") : String(opt);
    }).join(", ");
    once.warn("Received illegal value for '".concat(field, "'. Supported options: ").concat(supportedOptions));
    return acc;
  }, {});
};
var DEEPLY_EQUAL = Symbol("Deeply equal");
var deepDiff = function deepDiff2(value2, update) {
  if (_typeof(value2) !== _typeof(update))
    return update;
  if ((0, import_fast_deep_equal.default)(value2, update))
    return DEEPLY_EQUAL;
  if (Array.isArray(value2) && Array.isArray(update)) {
    var res = update.reduce(function(acc, upd, index) {
      var diff = deepDiff2(value2[index], upd);
      if (diff !== DEEPLY_EQUAL)
        acc[index] = diff;
      return acc;
    }, new Array(update.length));
    if (update.length >= value2.length)
      return res;
    return res.concat(new Array(value2.length - update.length).fill(void 0));
  }
  if ((0, import_isPlainObject.default)(value2) && (0, import_isPlainObject.default)(update)) {
    return Object.keys(Object.assign({}, value2, update)).reduce(function(acc, key2) {
      var diff = deepDiff2(value2 === null || value2 === void 0 ? void 0 : value2[key2], update === null || update === void 0 ? void 0 : update[key2]);
      return diff === DEEPLY_EQUAL ? acc : Object.assign(acc, _defineProperty({}, key2, diff));
    }, {});
  }
  return update;
};
var NO_TARGET_NAME = "";
function groupArgsByTarget(_ref7) {
  var args = _ref7.args, argTypes = _ref7.argTypes;
  var groupedArgs = {};
  Object.entries(args).forEach(function(_ref8) {
    var _ref9 = _slicedToArray2(_ref8, 2), name2 = _ref9[0], value2 = _ref9[1];
    var _ref10 = argTypes[name2] || {}, _ref10$target = _ref10.target, target = _ref10$target === void 0 ? NO_TARGET_NAME : _ref10$target;
    groupedArgs[target] = groupedArgs[target] || {};
    groupedArgs[target][name2] = value2;
  });
  return groupedArgs;
}

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/ArgsStore.js
function _classCallCheck2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties2(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass2(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties2(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties2(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function deleteUndefined(obj) {
  Object.keys(obj).forEach(function(key2) {
    return obj[key2] === void 0 && delete obj[key2];
  });
  return obj;
}
var ArgsStore = function() {
  function ArgsStore2() {
    _classCallCheck2(this, ArgsStore2);
    this.initialArgsByStoryId = {};
    this.argsByStoryId = {};
  }
  _createClass2(ArgsStore2, [{
    key: "get",
    value: function get2(storyId) {
      if (!(storyId in this.argsByStoryId)) {
        throw new Error("No args known for ".concat(storyId, " -- has it been rendered yet?"));
      }
      return this.argsByStoryId[storyId];
    }
  }, {
    key: "setInitial",
    value: function setInitial(story) {
      if (!this.initialArgsByStoryId[story.id]) {
        this.initialArgsByStoryId[story.id] = story.initialArgs;
        this.argsByStoryId[story.id] = story.initialArgs;
      } else if (this.initialArgsByStoryId[story.id] !== story.initialArgs) {
        var delta = deepDiff(this.initialArgsByStoryId[story.id], this.argsByStoryId[story.id]);
        this.initialArgsByStoryId[story.id] = story.initialArgs;
        this.argsByStoryId[story.id] = story.initialArgs;
        if (delta !== DEEPLY_EQUAL) {
          this.updateFromDelta(story, delta);
        }
      }
    }
  }, {
    key: "updateFromDelta",
    value: function updateFromDelta(story, delta) {
      var validatedDelta = validateOptions(delta, story.argTypes);
      this.argsByStoryId[story.id] = combineArgs(this.argsByStoryId[story.id], validatedDelta);
    }
  }, {
    key: "updateFromPersisted",
    value: function updateFromPersisted(story, persisted) {
      var mappedPersisted = mapArgsToTypes(persisted, story.argTypes);
      return this.updateFromDelta(story, mappedPersisted);
    }
  }, {
    key: "update",
    value: function update(storyId, argsUpdate) {
      if (!(storyId in this.argsByStoryId)) {
        throw new Error("No args known for ".concat(storyId, " -- has it been rendered yet?"));
      }
      this.argsByStoryId[storyId] = deleteUndefined(Object.assign({}, this.argsByStoryId[storyId], argsUpdate));
    }
  }]);
  return ArgsStore2;
}();

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/GlobalsStore.js
var import_es_regexp_exec4 = __toESM(require_es_regexp_exec());
var import_es_array_iterator4 = __toESM(require_es_array_iterator());
var import_es_string_iterator4 = __toESM(require_es_string_iterator());
var import_util_deprecate = __toESM(require_browser());

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/csf/getValuesFromArgTypes.js
var import_es_array_iterator3 = __toESM(require_es_array_iterator());
var import_es_string_iterator3 = __toESM(require_es_string_iterator());
var import_es_regexp_exec3 = __toESM(require_es_regexp_exec());
function _slicedToArray3(arr, i) {
  return _arrayWithHoles3(arr) || _iterableToArrayLimit3(arr, i) || _unsupportedIterableToArray3(arr, i) || _nonIterableRest3();
}
function _nonIterableRest3() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray3(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray3(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray3(o, minLen);
}
function _arrayLikeToArray3(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit3(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles3(arr) {
  if (Array.isArray(arr))
    return arr;
}
var getValuesFromArgTypes = function getValuesFromArgTypes2() {
  var argTypes = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  return Object.entries(argTypes).reduce(function(acc, _ref) {
    var _ref22 = _slicedToArray3(_ref, 2), arg = _ref22[0], defaultValue = _ref22[1].defaultValue;
    if (typeof defaultValue !== "undefined") {
      acc[arg] = defaultValue;
    }
    return acc;
  }, {});
};

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/GlobalsStore.js
var _templateObject3;
function _slicedToArray4(arr, i) {
  return _arrayWithHoles4(arr) || _iterableToArrayLimit4(arr, i) || _unsupportedIterableToArray4(arr, i) || _nonIterableRest4();
}
function _nonIterableRest4() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit4(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles4(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _toConsumableArray2(arr) {
  return _arrayWithoutHoles2(arr) || _iterableToArray2(arr) || _unsupportedIterableToArray4(arr) || _nonIterableSpread2();
}
function _nonIterableSpread2() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray4(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray4(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray4(o, minLen);
}
function _iterableToArray2(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles2(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray4(arr);
}
function _arrayLikeToArray4(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _classCallCheck3(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties3(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass3(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties3(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties3(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _taggedTemplateLiteral3(strings, raw2) {
  if (!raw2) {
    raw2 = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw2) } }));
}
var setUndeclaredWarning = (0, import_util_deprecate.default)(function() {
}, esm_default(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral3(["\n    Setting a global value that is undeclared (i.e. not in the user's initial set of globals\n    or globalTypes) is deprecated and will have no effect in 7.0.\n  "]))));
var GlobalsStore = function() {
  function GlobalsStore2() {
    _classCallCheck3(this, GlobalsStore2);
    this.allowedGlobalNames = void 0;
    this.initialGlobals = void 0;
    this.globals = {};
  }
  _createClass3(GlobalsStore2, [{
    key: "set",
    value: function set(_ref) {
      var _ref$globals = _ref.globals, globals = _ref$globals === void 0 ? {} : _ref$globals, _ref$globalTypes = _ref.globalTypes, globalTypes = _ref$globalTypes === void 0 ? {} : _ref$globalTypes;
      var delta = this.initialGlobals && deepDiff(this.initialGlobals, this.globals);
      this.allowedGlobalNames = new Set([].concat(_toConsumableArray2(Object.keys(globals)), _toConsumableArray2(Object.keys(globalTypes))));
      var defaultGlobals = getValuesFromArgTypes(globalTypes);
      this.initialGlobals = Object.assign({}, defaultGlobals, globals);
      this.globals = this.initialGlobals;
      if (delta && delta !== DEEPLY_EQUAL) {
        this.updateFromPersisted(delta);
      }
    }
  }, {
    key: "filterAllowedGlobals",
    value: function filterAllowedGlobals(globals) {
      var _this = this;
      return Object.entries(globals).reduce(function(acc, _ref22) {
        var _ref32 = _slicedToArray4(_ref22, 2), key2 = _ref32[0], value2 = _ref32[1];
        if (_this.allowedGlobalNames.has(key2))
          acc[key2] = value2;
        return acc;
      }, {});
    }
  }, {
    key: "updateFromPersisted",
    value: function updateFromPersisted(persisted) {
      var allowedUrlGlobals = this.filterAllowedGlobals(persisted);
      this.globals = Object.assign({}, this.globals, allowedUrlGlobals);
    }
  }, {
    key: "get",
    value: function get2() {
      return this.globals;
    }
  }, {
    key: "update",
    value: function update(newGlobals) {
      var _this2 = this;
      Object.keys(newGlobals).forEach(function(key2) {
        if (!_this2.allowedGlobalNames.has(key2)) {
          setUndeclaredWarning();
        }
      });
      this.globals = Object.assign({}, this.globals, newGlobals);
    }
  }]);
  return GlobalsStore2;
}();

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/csf/normalizeInputTypes.js
var import_mapValues = __toESM(require_mapValues());
var _excluded = ["type", "control"];
function _objectWithoutProperties(source2, excluded) {
  if (source2 == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source2, excluded);
  var key2, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source2);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key2 = sourceSymbolKeys[i];
      if (excluded.indexOf(key2) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source2, key2))
        continue;
      target[key2] = source2[key2];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose(source2, excluded) {
  if (source2 == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source2);
  var key2, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key2 = sourceKeys[i];
    if (excluded.indexOf(key2) >= 0)
      continue;
    target[key2] = source2[key2];
  }
  return target;
}
var normalizeType = function normalizeType2(type) {
  return typeof type === "string" ? {
    name: type
  } : type;
};
var normalizeControl = function normalizeControl2(control) {
  return typeof control === "string" ? {
    type: control
  } : control;
};
var normalizeInputType = function normalizeInputType2(inputType, key2) {
  var type = inputType.type, control = inputType.control, rest = _objectWithoutProperties(inputType, _excluded);
  var normalized = Object.assign({
    name: key2
  }, rest);
  if (type)
    normalized.type = normalizeType(type);
  if (control) {
    normalized.control = normalizeControl(control);
  } else if (control === false) {
    normalized.control = {
      disable: true
    };
  }
  return normalized;
};
var normalizeInputTypes = function normalizeInputTypes2(inputTypes) {
  return (0, import_mapValues.default)(inputTypes, normalizeInputType);
};

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/csf/normalizeStory.js
var import_es_array_iterator5 = __toESM(require_es_array_iterator());
var import_es_string_iterator5 = __toESM(require_es_string_iterator());
var import_es_regexp_exec5 = __toESM(require_es_regexp_exec());
var import_csf = __toESM(require_dist());
var import_util_deprecate2 = __toESM(require_browser());
var _templateObject4;
function _toConsumableArray3(arr) {
  return _arrayWithoutHoles3(arr) || _iterableToArray3(arr) || _unsupportedIterableToArray5(arr) || _nonIterableSpread3();
}
function _nonIterableSpread3() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray5(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray5(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray5(o, minLen);
}
function _iterableToArray3(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles3(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray5(arr);
}
function _arrayLikeToArray5(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _taggedTemplateLiteral4(strings, raw2) {
  if (!raw2) {
    raw2 = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw2) } }));
}
var deprecatedStoryAnnotation = esm_default(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral4(["\nCSF .story annotations deprecated; annotate story functions directly:\n- StoryFn.story.name => StoryFn.storyName\n- StoryFn.story.(parameters|decorators) => StoryFn.(parameters|decorators)\nSee https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#hoisted-csf-annotations for details and codemod.\n"])));
var deprecatedStoryAnnotationWarning = (0, import_util_deprecate2.default)(function() {
}, deprecatedStoryAnnotation);
function normalizeStory(key2, storyAnnotations, meta) {
  var userStoryFn;
  var storyObject;
  if (typeof storyAnnotations === "function") {
    userStoryFn = storyAnnotations;
    storyObject = storyAnnotations;
  } else {
    storyObject = storyAnnotations;
  }
  var _storyObject = storyObject, story = _storyObject.story;
  if (story) {
    logger.debug("deprecated story", story);
    deprecatedStoryAnnotationWarning();
  }
  var exportName = (0, import_csf.storyNameFromExport)(key2);
  var name2 = typeof storyObject !== "function" && storyObject.name || storyObject.storyName || (story === null || story === void 0 ? void 0 : story.name) || exportName;
  var decorators = [].concat(_toConsumableArray3(storyObject.decorators || []), _toConsumableArray3((story === null || story === void 0 ? void 0 : story.decorators) || []));
  var parameters = Object.assign({}, story === null || story === void 0 ? void 0 : story.parameters, storyObject.parameters);
  var args = Object.assign({}, story === null || story === void 0 ? void 0 : story.args, storyObject.args);
  var argTypes = Object.assign({}, story === null || story === void 0 ? void 0 : story.argTypes, storyObject.argTypes);
  var loaders = [].concat(_toConsumableArray3(storyObject.loaders || []), _toConsumableArray3((story === null || story === void 0 ? void 0 : story.loaders) || []));
  var _storyObject2 = storyObject, render3 = _storyObject2.render, play = _storyObject2.play;
  var id = parameters.__id || (0, import_csf.toId)(meta.id || meta.title, exportName);
  return Object.assign({
    id,
    name: name2,
    decorators,
    parameters,
    args,
    argTypes: normalizeInputTypes(argTypes),
    loaders
  }, render3 && {
    render: render3
  }, userStoryFn && {
    userStoryFn
  }, play && {
    play
  });
}

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/csf/processCSFFile.js
var import_csf3 = __toESM(require_dist());

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/csf/normalizeComponentAnnotations.js
var import_csf2 = __toESM(require_dist());
function normalizeComponentAnnotations(defaultExport) {
  var title = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultExport.title;
  var importPath = arguments.length > 2 ? arguments[2] : void 0;
  var id = defaultExport.id, argTypes = defaultExport.argTypes;
  return Object.assign({
    id: (0, import_csf2.sanitize)(id || title)
  }, defaultExport, {
    title
  }, argTypes && {
    argTypes: normalizeInputTypes(argTypes)
  }, {
    parameters: Object.assign({
      fileName: importPath
    }, defaultExport.parameters)
  });
}

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/csf/processCSFFile.js
var _excluded2 = ["default", "__namedExportsOrder"];
function _objectWithoutProperties2(source2, excluded) {
  if (source2 == null)
    return {};
  var target = _objectWithoutPropertiesLoose2(source2, excluded);
  var key2, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source2);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key2 = sourceSymbolKeys[i];
      if (excluded.indexOf(key2) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source2, key2))
        continue;
      target[key2] = source2[key2];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose2(source2, excluded) {
  if (source2 == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source2);
  var key2, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key2 = sourceKeys[i];
    if (excluded.indexOf(key2) >= 0)
      continue;
    target[key2] = source2[key2];
  }
  return target;
}
var checkGlobals = function checkGlobals2(parameters) {
  var globals = parameters.globals, globalTypes = parameters.globalTypes;
  if (globals || globalTypes) {
    logger.error("Global args/argTypes can only be set globally", JSON.stringify({
      globals,
      globalTypes
    }));
  }
};
var checkStorySort = function checkStorySort2(parameters) {
  var options2 = parameters.options;
  if (options2 !== null && options2 !== void 0 && options2.storySort)
    logger.error("The storySort option parameter can only be set globally");
};
var checkDisallowedParameters = function checkDisallowedParameters2(parameters) {
  if (!parameters) {
    return;
  }
  checkGlobals(parameters);
  checkStorySort(parameters);
};
function processCSFFile(moduleExports, importPath, title) {
  var defaultExport = moduleExports.default, __namedExportsOrder = moduleExports.__namedExportsOrder, namedExports = _objectWithoutProperties2(moduleExports, _excluded2);
  var meta = normalizeComponentAnnotations(defaultExport, title, importPath);
  checkDisallowedParameters(meta.parameters);
  var csfFile = {
    meta,
    stories: {}
  };
  Object.keys(namedExports).forEach(function(key2) {
    if ((0, import_csf3.isExportStory)(key2, meta)) {
      var storyMeta = normalizeStory(key2, namedExports[key2], meta);
      checkDisallowedParameters(storyMeta.parameters);
      csfFile.stories[storyMeta.id] = storyMeta;
    }
  });
  return csfFile;
}

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/csf/prepareStory.js
var import_es_regexp_exec9 = __toESM(require_es_regexp_exec());
var import_runtime = __toESM(require_runtime());
var import_es_array_iterator9 = __toESM(require_es_array_iterator());
var import_es_string_iterator9 = __toESM(require_es_string_iterator());
var import_util_deprecate3 = __toESM(require_browser());
var import_global3 = __toESM(require_window());
var import_csf4 = __toESM(require_dist());

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/parameters.js
var import_es_array_iterator6 = __toESM(require_es_array_iterator());
var import_es_string_iterator6 = __toESM(require_es_string_iterator());
var import_es_regexp_exec6 = __toESM(require_es_regexp_exec());
var import_isPlainObject2 = __toESM(require_isPlainObject());
function _toConsumableArray4(arr) {
  return _arrayWithoutHoles4(arr) || _iterableToArray4(arr) || _unsupportedIterableToArray6(arr) || _nonIterableSpread4();
}
function _nonIterableSpread4() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray4(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles4(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray6(arr);
}
function _slicedToArray5(arr, i) {
  return _arrayWithHoles5(arr) || _iterableToArrayLimit5(arr, i) || _unsupportedIterableToArray6(arr, i) || _nonIterableRest5();
}
function _nonIterableRest5() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray6(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray6(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray6(o, minLen);
}
function _arrayLikeToArray6(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit5(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles5(arr) {
  if (Array.isArray(arr))
    return arr;
}
var combineParameters = function combineParameters2() {
  for (var _len = arguments.length, parameterSets = new Array(_len), _key = 0; _key < _len; _key++) {
    parameterSets[_key] = arguments[_key];
  }
  var mergeKeys = {};
  var combined = parameterSets.filter(Boolean).reduce(function(acc, p) {
    Object.entries(p).forEach(function(_ref) {
      var _ref22 = _slicedToArray5(_ref, 2), key2 = _ref22[0], value2 = _ref22[1];
      var existing = acc[key2];
      if (Array.isArray(value2) || typeof existing === "undefined") {
        acc[key2] = value2;
      } else if ((0, import_isPlainObject2.default)(value2) && (0, import_isPlainObject2.default)(existing)) {
        mergeKeys[key2] = true;
      } else if (typeof value2 !== "undefined") {
        acc[key2] = value2;
      }
    });
    return acc;
  }, {});
  Object.keys(mergeKeys).forEach(function(key2) {
    var mergeValues = parameterSets.filter(Boolean).map(function(p) {
      return p[key2];
    }).filter(function(value2) {
      return typeof value2 !== "undefined";
    });
    if (mergeValues.every(function(value2) {
      return (0, import_isPlainObject2.default)(value2);
    })) {
      combined[key2] = combineParameters2.apply(void 0, _toConsumableArray4(mergeValues));
    } else {
      combined[key2] = mergeValues[mergeValues.length - 1];
    }
  });
  return combined;
};

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/hooks.js
var import_es_array_iterator8 = __toESM(require_es_array_iterator());
var import_es_string_iterator8 = __toESM(require_es_string_iterator());
var import_es_regexp_exec8 = __toESM(require_es_regexp_exec());

// .yarn/__virtual__/@storybook-addons-virtual-5d6a5fa3da/0/cache/@storybook-addons-npm-6.5.13-ad7908c255-28589da00e.zip/node_modules/@storybook/addons/dist/esm/index.js
var import_global = __toESM(require_window());

// .yarn/__virtual__/@storybook-addons-virtual-5d6a5fa3da/0/cache/@storybook-addons-npm-6.5.13-ad7908c255-28589da00e.zip/node_modules/@storybook/addons/dist/esm/storybook-channel-mock.js
function mockChannel() {
  var transport = {
    setHandler: function setHandler() {
    },
    send: function send() {
    }
  };
  return new esm_default3({
    transport
  });
}

// .yarn/__virtual__/@storybook-addons-virtual-5d6a5fa3da/0/cache/@storybook-addons-npm-6.5.13-ad7908c255-28589da00e.zip/node_modules/@storybook/addons/dist/esm/types.js
var types;
(function(types2) {
  types2["TAB"] = "tab";
  types2["PANEL"] = "panel";
  types2["TOOL"] = "tool";
  types2["TOOLEXTRA"] = "toolextra";
  types2["PREVIEW"] = "preview";
  types2["NOTES_ELEMENT"] = "notes-element";
})(types || (types = {}));

// .yarn/__virtual__/@storybook-addons-virtual-5d6a5fa3da/0/cache/@storybook-addons-npm-6.5.13-ad7908c255-28589da00e.zip/node_modules/@storybook/addons/dist/esm/index.js
function _defineProperties4(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass4(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties4(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties4(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _classCallCheck4(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
var AddonStore = _createClass4(function AddonStore2() {
  var _this = this;
  _classCallCheck4(this, AddonStore2);
  this.loaders = {};
  this.elements = {};
  this.config = {};
  this.channel = void 0;
  this.serverChannel = void 0;
  this.promise = void 0;
  this.resolve = void 0;
  this.getChannel = function() {
    if (!_this.channel) {
      _this.setChannel(mockChannel());
    }
    return _this.channel;
  };
  this.getServerChannel = function() {
    if (!_this.serverChannel) {
      throw new Error("Accessing non-existent serverChannel");
    }
    return _this.serverChannel;
  };
  this.ready = function() {
    return _this.promise;
  };
  this.hasChannel = function() {
    return !!_this.channel;
  };
  this.hasServerChannel = function() {
    return !!_this.serverChannel;
  };
  this.setChannel = function(channel) {
    _this.channel = channel;
    _this.resolve();
  };
  this.setServerChannel = function(channel) {
    _this.serverChannel = channel;
  };
  this.getElements = function(type) {
    if (!_this.elements[type]) {
      _this.elements[type] = {};
    }
    return _this.elements[type];
  };
  this.addPanel = function(name2, options2) {
    _this.add(name2, Object.assign({
      type: types.PANEL
    }, options2));
  };
  this.add = function(name2, addon) {
    var type = addon.type;
    var collection = _this.getElements(type);
    collection[name2] = Object.assign({
      id: name2
    }, addon);
  };
  this.setConfig = function(value2) {
    Object.assign(_this.config, value2);
  };
  this.getConfig = function() {
    return _this.config;
  };
  this.register = function(name2, registerCallback) {
    if (_this.loaders[name2]) {
      logger.warn("".concat(name2, " was loaded twice, this could have bad side-effects"));
    }
    _this.loaders[name2] = registerCallback;
  };
  this.loadAddons = function(api2) {
    Object.values(_this.loaders).forEach(function(value2) {
      return value2(api2);
    });
  };
  this.promise = new Promise(function(res) {
    _this.resolve = function() {
      return res(_this.getChannel());
    };
  });
});
var KEY = "__STORYBOOK_ADDONS";
function getAddonsStore() {
  if (!import_global.default[KEY]) {
    import_global.default[KEY] = new AddonStore();
  }
  return import_global.default[KEY];
}
var addons = getAddonsStore();

// .yarn/__virtual__/@storybook-addons-virtual-5d6a5fa3da/0/cache/@storybook-addons-npm-6.5.13-ad7908c255-28589da00e.zip/node_modules/@storybook/addons/dist/esm/hooks.js
var import_es_array_iterator7 = __toESM(require_es_array_iterator());
var import_es_string_iterator7 = __toESM(require_es_string_iterator());
var import_es_regexp_exec7 = __toESM(require_es_regexp_exec());
var import_global2 = __toESM(require_window());
function _toConsumableArray5(arr) {
  return _arrayWithoutHoles5(arr) || _iterableToArray5(arr) || _unsupportedIterableToArray7(arr) || _nonIterableSpread5();
}
function _nonIterableSpread5() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray7(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray7(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray7(o, minLen);
}
function _iterableToArray5(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles5(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray7(arr);
}
function _arrayLikeToArray7(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _classCallCheck5(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties5(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass5(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties5(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties5(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
var globalWindow = import_global2.default.window;
var HooksContext = function() {
  function HooksContext2() {
    var _this = this;
    _classCallCheck5(this, HooksContext2);
    this.hookListsMap = void 0;
    this.mountedDecorators = void 0;
    this.prevMountedDecorators = void 0;
    this.currentHooks = void 0;
    this.nextHookIndex = void 0;
    this.currentPhase = void 0;
    this.currentEffects = void 0;
    this.prevEffects = void 0;
    this.currentDecoratorName = void 0;
    this.hasUpdates = void 0;
    this.currentContext = void 0;
    this.renderListener = function(storyId) {
      if (storyId !== _this.currentContext.id)
        return;
      _this.triggerEffects();
      _this.currentContext = null;
      _this.removeRenderListeners();
    };
    this.init();
  }
  _createClass5(HooksContext2, [{
    key: "init",
    value: function init() {
      this.hookListsMap = /* @__PURE__ */ new WeakMap();
      this.mountedDecorators = /* @__PURE__ */ new Set();
      this.prevMountedDecorators = this.mountedDecorators;
      this.currentHooks = [];
      this.nextHookIndex = 0;
      this.currentPhase = "NONE";
      this.currentEffects = [];
      this.prevEffects = [];
      this.currentDecoratorName = null;
      this.hasUpdates = false;
      this.currentContext = null;
    }
  }, {
    key: "clean",
    value: function clean() {
      this.prevEffects.forEach(function(effect) {
        if (effect.destroy) {
          effect.destroy();
        }
      });
      this.init();
      this.removeRenderListeners();
    }
  }, {
    key: "getNextHook",
    value: function getNextHook() {
      var hook = this.currentHooks[this.nextHookIndex];
      this.nextHookIndex += 1;
      return hook;
    }
  }, {
    key: "triggerEffects",
    value: function triggerEffects() {
      var _this2 = this;
      this.prevEffects.forEach(function(effect) {
        if (!_this2.currentEffects.includes(effect) && effect.destroy) {
          effect.destroy();
        }
      });
      this.currentEffects.forEach(function(effect) {
        if (!_this2.prevEffects.includes(effect)) {
          effect.destroy = effect.create();
        }
      });
      this.prevEffects = this.currentEffects;
      this.currentEffects = [];
    }
  }, {
    key: "addRenderListeners",
    value: function addRenderListeners() {
      this.removeRenderListeners();
      var channel = addons.getChannel();
      channel.on(STORY_RENDERED, this.renderListener);
    }
  }, {
    key: "removeRenderListeners",
    value: function removeRenderListeners() {
      var channel = addons.getChannel();
      channel.removeListener(STORY_RENDERED, this.renderListener);
    }
  }]);
  return HooksContext2;
}();
function hookify(fn) {
  return function() {
    var _ref = typeof (arguments.length <= 0 ? void 0 : arguments[0]) === "function" ? arguments.length <= 1 ? void 0 : arguments[1] : arguments.length <= 0 ? void 0 : arguments[0], hooks = _ref.hooks;
    var prevPhase = hooks.currentPhase;
    var prevHooks = hooks.currentHooks;
    var prevNextHookIndex = hooks.nextHookIndex;
    var prevDecoratorName = hooks.currentDecoratorName;
    hooks.currentDecoratorName = fn.name;
    if (hooks.prevMountedDecorators.has(fn)) {
      hooks.currentPhase = "UPDATE";
      hooks.currentHooks = hooks.hookListsMap.get(fn) || [];
    } else {
      hooks.currentPhase = "MOUNT";
      hooks.currentHooks = [];
      hooks.hookListsMap.set(fn, hooks.currentHooks);
      hooks.prevMountedDecorators.add(fn);
    }
    hooks.nextHookIndex = 0;
    var prevContext = globalWindow.STORYBOOK_HOOKS_CONTEXT;
    globalWindow.STORYBOOK_HOOKS_CONTEXT = hooks;
    var result2 = fn.apply(void 0, arguments);
    globalWindow.STORYBOOK_HOOKS_CONTEXT = prevContext;
    if (hooks.currentPhase === "UPDATE" && hooks.getNextHook() != null) {
      throw new Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
    }
    hooks.currentPhase = prevPhase;
    hooks.currentHooks = prevHooks;
    hooks.nextHookIndex = prevNextHookIndex;
    hooks.currentDecoratorName = prevDecoratorName;
    return result2;
  };
}
var numberOfRenders = 0;
var RENDER_LIMIT = 25;
var applyHooks = function applyHooks2(applyDecorators) {
  return function(storyFn, decorators) {
    var decorated = applyDecorators(hookify(storyFn), decorators.map(function(decorator) {
      return hookify(decorator);
    }));
    return function(context) {
      var _ref22 = context, hooks = _ref22.hooks;
      hooks.prevMountedDecorators = hooks.mountedDecorators;
      hooks.mountedDecorators = new Set([storyFn].concat(_toConsumableArray5(decorators)));
      hooks.currentContext = context;
      hooks.hasUpdates = false;
      var result2 = decorated(context);
      numberOfRenders = 1;
      while (hooks.hasUpdates) {
        hooks.hasUpdates = false;
        hooks.currentEffects = [];
        result2 = decorated(context);
        numberOfRenders += 1;
        if (numberOfRenders > RENDER_LIMIT) {
          throw new Error("Too many re-renders. Storybook limits the number of renders to prevent an infinite loop.");
        }
      }
      hooks.addRenderListeners();
      return result2;
    };
  };
};

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/decorators.js
var _excluded3 = ["componentId", "title", "kind", "id", "name", "story", "parameters", "initialArgs", "argTypes"];
function _objectWithoutProperties3(source2, excluded) {
  if (source2 == null)
    return {};
  var target = _objectWithoutPropertiesLoose3(source2, excluded);
  var key2, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source2);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key2 = sourceSymbolKeys[i];
      if (excluded.indexOf(key2) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source2, key2))
        continue;
      target[key2] = source2[key2];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose3(source2, excluded) {
  if (source2 == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source2);
  var key2, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key2 = sourceKeys[i];
    if (excluded.indexOf(key2) >= 0)
      continue;
    target[key2] = source2[key2];
  }
  return target;
}
function decorateStory(storyFn, decorator, bindWithContext) {
  var boundStoryFunction = bindWithContext(storyFn);
  return function(context) {
    return decorator(boundStoryFunction, context);
  };
}
function sanitizeStoryContextUpdate() {
  var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var componentId = _ref.componentId, title = _ref.title, kind = _ref.kind, id = _ref.id, name2 = _ref.name, story = _ref.story, parameters = _ref.parameters, initialArgs = _ref.initialArgs, argTypes = _ref.argTypes, update = _objectWithoutProperties3(_ref, _excluded3);
  return update;
}
function defaultDecorateStory(storyFn, decorators) {
  var contextStore = {};
  var bindWithContext = function bindWithContext2(decoratedStoryFn) {
    return function(update) {
      contextStore.value = Object.assign({}, contextStore.value, sanitizeStoryContextUpdate(update));
      return decoratedStoryFn(contextStore.value);
    };
  };
  var decoratedWithContextStore = decorators.reduce(function(story, decorator) {
    return decorateStory(story, decorator, bindWithContext);
  }, storyFn);
  return function(context) {
    contextStore.value = context;
    return decoratedWithContextStore(context);
  };
}

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/csf/prepareStory.js
var _templateObject5;
function _slicedToArray6(arr, i) {
  return _arrayWithHoles6(arr) || _iterableToArrayLimit6(arr, i) || _unsupportedIterableToArray8(arr, i) || _nonIterableRest6();
}
function _nonIterableRest6() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit6(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles6(arr) {
  if (Array.isArray(arr))
    return arr;
}
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key2, arg) {
  try {
    var info = gen[key2](arg);
    var value2 = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value2);
  } else {
    Promise.resolve(value2).then(_next, _throw);
  }
}
function _asyncToGenerator(fn) {
  return function() {
    var self = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value2) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value2);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}
function _toConsumableArray6(arr) {
  return _arrayWithoutHoles6(arr) || _iterableToArray6(arr) || _unsupportedIterableToArray8(arr) || _nonIterableSpread6();
}
function _nonIterableSpread6() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray8(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray8(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray8(o, minLen);
}
function _iterableToArray6(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles6(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray8(arr);
}
function _arrayLikeToArray8(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _taggedTemplateLiteral5(strings, raw2) {
  if (!raw2) {
    raw2 = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw2) } }));
}
var argTypeDefaultValueWarning = (0, import_util_deprecate3.default)(function() {
}, esm_default(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral5(["\n  `argType.defaultValue` is deprecated and will be removed in Storybook 7.0.\n\n  https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#no-longer-inferring-default-values-of-args"], ["\n  \\`argType.defaultValue\\` is deprecated and will be removed in Storybook 7.0.\n\n  https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#no-longer-inferring-default-values-of-args"]))));
function prepareStory(storyAnnotations, componentAnnotations, projectAnnotations) {
  var _global$FEATURES;
  var id = storyAnnotations.id, name2 = storyAnnotations.name;
  var title = componentAnnotations.title;
  var parameters = combineParameters(projectAnnotations.parameters, componentAnnotations.parameters, storyAnnotations.parameters);
  var decorators = [].concat(_toConsumableArray6(storyAnnotations.decorators || []), _toConsumableArray6(componentAnnotations.decorators || []), _toConsumableArray6(projectAnnotations.decorators || []));
  var _projectAnnotations$a = projectAnnotations.applyDecorators, applyDecorators = _projectAnnotations$a === void 0 ? defaultDecorateStory : _projectAnnotations$a, _projectAnnotations$a2 = projectAnnotations.argTypesEnhancers, argTypesEnhancers = _projectAnnotations$a2 === void 0 ? [] : _projectAnnotations$a2, _projectAnnotations$a3 = projectAnnotations.argsEnhancers, argsEnhancers = _projectAnnotations$a3 === void 0 ? [] : _projectAnnotations$a3;
  var loaders = [].concat(_toConsumableArray6(projectAnnotations.loaders || []), _toConsumableArray6(componentAnnotations.loaders || []), _toConsumableArray6(storyAnnotations.loaders || []));
  var render3 = storyAnnotations.userStoryFn || storyAnnotations.render || componentAnnotations.render || projectAnnotations.render;
  var passedArgTypes = combineParameters(projectAnnotations.argTypes, componentAnnotations.argTypes, storyAnnotations.argTypes);
  var _parameters$passArgsF = parameters.passArgsFirst, passArgsFirst = _parameters$passArgsF === void 0 ? true : _parameters$passArgsF;
  parameters.__isArgsStory = passArgsFirst && render3.length > 0;
  var passedArgs = Object.assign({}, projectAnnotations.args, componentAnnotations.args, storyAnnotations.args);
  var contextForEnhancers = {
    componentId: componentAnnotations.id,
    title,
    kind: title,
    id,
    name: name2,
    story: name2,
    component: componentAnnotations.component,
    subcomponents: componentAnnotations.subcomponents,
    parameters,
    initialArgs: passedArgs,
    argTypes: passedArgTypes
  };
  contextForEnhancers.argTypes = argTypesEnhancers.reduce(function(accumulatedArgTypes, enhancer) {
    return enhancer(Object.assign({}, contextForEnhancers, {
      argTypes: accumulatedArgTypes
    }));
  }, contextForEnhancers.argTypes);
  var defaultArgs = getValuesFromArgTypes(contextForEnhancers.argTypes);
  if (Object.keys(defaultArgs).length > 0) {
    argTypeDefaultValueWarning();
  }
  var initialArgsBeforeEnhancers = Object.assign({}, defaultArgs, passedArgs);
  contextForEnhancers.initialArgs = argsEnhancers.reduce(function(accumulatedArgs, enhancer) {
    return Object.assign({}, accumulatedArgs, enhancer(Object.assign({}, contextForEnhancers, {
      initialArgs: accumulatedArgs
    })));
  }, initialArgsBeforeEnhancers);
  if (!((_global$FEATURES = import_global3.default.FEATURES) !== null && _global$FEATURES !== void 0 && _global$FEATURES.breakingChangesV7)) {
    contextForEnhancers.parameters = Object.assign({}, contextForEnhancers.parameters, {
      __id: id,
      globals: projectAnnotations.globals,
      globalTypes: projectAnnotations.globalTypes,
      args: contextForEnhancers.initialArgs,
      argTypes: contextForEnhancers.argTypes
    });
  }
  var applyLoaders = function() {
    var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(context) {
      var loadResults, loaded;
      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return Promise.all(loaders.map(function(loader) {
                return loader(context);
              }));
            case 2:
              loadResults = _context.sent;
              loaded = Object.assign.apply(Object, [{}].concat(_toConsumableArray6(loadResults)));
              return _context.abrupt("return", Object.assign({}, context, {
                loaded
              }));
            case 5:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));
    return function applyLoaders2(_x) {
      return _ref.apply(this, arguments);
    };
  }();
  var undecoratedStoryFn = function undecoratedStoryFn2(context) {
    var mappedArgs = Object.entries(context.args).reduce(function(acc, _ref22) {
      var _context$argTypes$key;
      var _ref32 = _slicedToArray6(_ref22, 2), key2 = _ref32[0], val = _ref32[1];
      var mapping = (_context$argTypes$key = context.argTypes[key2]) === null || _context$argTypes$key === void 0 ? void 0 : _context$argTypes$key.mapping;
      acc[key2] = mapping && val in mapping ? mapping[val] : val;
      return acc;
    }, {});
    var includedArgs = Object.entries(mappedArgs).reduce(function(acc, _ref42) {
      var _ref52 = _slicedToArray6(_ref42, 2), key2 = _ref52[0], val = _ref52[1];
      var argType = context.argTypes[key2] || {};
      if ((0, import_csf4.includeConditionalArg)(argType, mappedArgs, context.globals))
        acc[key2] = val;
      return acc;
    }, {});
    var includedContext = Object.assign({}, context, {
      args: includedArgs
    });
    var _context$parameters$p = context.parameters.passArgsFirst, renderTimePassArgsFirst = _context$parameters$p === void 0 ? true : _context$parameters$p;
    return renderTimePassArgsFirst ? render3(includedContext.args, includedContext) : render3(includedContext);
  };
  var decoratedStoryFn = applyHooks(applyDecorators)(undecoratedStoryFn, decorators);
  var unboundStoryFn = function unboundStoryFn2(context) {
    var _global$FEATURES2;
    var finalContext = context;
    if ((_global$FEATURES2 = import_global3.default.FEATURES) !== null && _global$FEATURES2 !== void 0 && _global$FEATURES2.argTypeTargetsV7) {
      var argsByTarget = groupArgsByTarget(Object.assign({
        args: context.args
      }, context));
      finalContext = Object.assign({}, context, {
        allArgs: context.args,
        argsByTarget,
        args: argsByTarget[NO_TARGET_NAME] || {}
      });
    }
    return decoratedStoryFn(finalContext);
  };
  var playFunction = storyAnnotations.play;
  return Object.freeze(Object.assign({}, contextForEnhancers, {
    originalStoryFn: render3,
    undecoratedStoryFn,
    unboundStoryFn,
    applyLoaders,
    playFunction
  }));
}

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/csf/normalizeProjectAnnotations.js
var import_es_array_iterator11 = __toESM(require_es_array_iterator());
var import_es_string_iterator11 = __toESM(require_es_string_iterator());
var import_es_regexp_exec12 = __toESM(require_es_regexp_exec());

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/inferArgTypes.js
var import_es_array_iterator10 = __toESM(require_es_array_iterator());
var import_es_string_iterator10 = __toESM(require_es_string_iterator());
var import_mapValues2 = __toESM(require_mapValues());
var _templateObject6;
function _taggedTemplateLiteral6(strings, raw2) {
  if (!raw2) {
    raw2 = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw2) } }));
}
function _typeof2(obj) {
  "@babel/helpers - typeof";
  return _typeof2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof2(obj);
}
var inferType = function inferType2(value2, name2, visited) {
  var type = _typeof2(value2);
  switch (type) {
    case "boolean":
    case "string":
    case "number":
    case "function":
    case "symbol":
      return {
        name: type
      };
    default:
      break;
  }
  if (value2) {
    if (visited.has(value2)) {
      logger.warn(esm_default(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral6(["\n        We've detected a cycle in arg '", "'. Args should be JSON-serializable.\n\n        Consider using the mapping feature or fully custom args:\n        - Mapping: https://storybook.js.org/docs/react/writing-stories/args#mapping-to-complex-arg-values\n        - Custom args: https://storybook.js.org/docs/react/essentials/controls#fully-custom-args\n      "])), name2));
      return {
        name: "other",
        value: "cyclic object"
      };
    }
    visited.add(value2);
    if (Array.isArray(value2)) {
      var childType = value2.length > 0 ? inferType2(value2[0], name2, new Set(visited)) : {
        name: "other",
        value: "unknown"
      };
      return {
        name: "array",
        value: childType
      };
    }
    var fieldTypes = (0, import_mapValues2.default)(value2, function(field) {
      return inferType2(field, name2, new Set(visited));
    });
    return {
      name: "object",
      value: fieldTypes
    };
  }
  return {
    name: "object",
    value: {}
  };
};
var inferArgTypes = function inferArgTypes2(context) {
  var id = context.id, _context$argTypes = context.argTypes, userArgTypes = _context$argTypes === void 0 ? {} : _context$argTypes, _context$initialArgs = context.initialArgs, initialArgs = _context$initialArgs === void 0 ? {} : _context$initialArgs;
  var argTypes = (0, import_mapValues2.default)(initialArgs, function(arg, key2) {
    return {
      name: key2,
      type: inferType(arg, "".concat(id, ".").concat(key2), /* @__PURE__ */ new Set())
    };
  });
  var userArgTypesNames = (0, import_mapValues2.default)(userArgTypes, function(argType, key2) {
    return {
      name: key2
    };
  });
  return combineParameters(argTypes, userArgTypesNames, userArgTypes);
};
inferArgTypes.secondPass = true;

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/inferControls.js
var import_es_regexp_exec11 = __toESM(require_es_regexp_exec());
var import_mapValues3 = __toESM(require_mapValues());

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/filterArgTypes.js
var import_es_regexp_exec10 = __toESM(require_es_regexp_exec());
var import_pickBy = __toESM(require_pickBy());
var matches = function matches2(name2, descriptor) {
  return Array.isArray(descriptor) ? descriptor.includes(name2) : name2.match(descriptor);
};
var filterArgTypes = function filterArgTypes2(argTypes, include, exclude) {
  if (!include && !exclude) {
    return argTypes;
  }
  return argTypes && (0, import_pickBy.default)(argTypes, function(argType, key2) {
    var name2 = argType.name || key2;
    return (!include || matches(name2, include)) && (!exclude || !matches(name2, exclude));
  });
};

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/inferControls.js
var inferControl = function inferControl2(argType, name2, matchers) {
  var type = argType.type, options2 = argType.options;
  if (!type && !options2) {
    return void 0;
  }
  if (matchers.color && matchers.color.test(name2)) {
    var controlType = argType.type.name;
    if (controlType === "string") {
      return {
        control: {
          type: "color"
        }
      };
    }
    logger.warn('Addon controls: Control of type color only supports string, received "'.concat(controlType, '" instead'));
  }
  if (matchers.date && matchers.date.test(name2)) {
    return {
      control: {
        type: "date"
      }
    };
  }
  switch (type.name) {
    case "array":
      return {
        control: {
          type: "object"
        }
      };
    case "boolean":
      return {
        control: {
          type: "boolean"
        }
      };
    case "string":
      return {
        control: {
          type: "text"
        }
      };
    case "number":
      return {
        control: {
          type: "number"
        }
      };
    case "enum": {
      var _ref = type, value2 = _ref.value;
      return {
        control: {
          type: (value2 === null || value2 === void 0 ? void 0 : value2.length) <= 5 ? "radio" : "select"
        },
        options: value2
      };
    }
    case "function":
    case "symbol":
      return null;
    default:
      return {
        control: {
          type: options2 ? "select" : "object"
        }
      };
  }
};
var inferControls = function inferControls2(context) {
  var argTypes = context.argTypes, _context$parameters = context.parameters, __isArgsStory = _context$parameters.__isArgsStory, _context$parameters$c = _context$parameters.controls;
  _context$parameters$c = _context$parameters$c === void 0 ? {} : _context$parameters$c;
  var _context$parameters$c2 = _context$parameters$c.include, include = _context$parameters$c2 === void 0 ? null : _context$parameters$c2, _context$parameters$c3 = _context$parameters$c.exclude, exclude = _context$parameters$c3 === void 0 ? null : _context$parameters$c3, _context$parameters$c4 = _context$parameters$c.matchers, matchers = _context$parameters$c4 === void 0 ? {} : _context$parameters$c4;
  if (!__isArgsStory)
    return argTypes;
  var filteredArgTypes = filterArgTypes(argTypes, include, exclude);
  var withControls = (0, import_mapValues3.default)(filteredArgTypes, function(argType, name2) {
    return (argType === null || argType === void 0 ? void 0 : argType.type) && inferControl(argType, name2, matchers);
  });
  return combineParameters(withControls, filteredArgTypes);
};
inferControls.secondPass = true;

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/csf/normalizeProjectAnnotations.js
var _excluded4 = ["argTypes", "globalTypes", "argTypesEnhancers"];
function _toConsumableArray7(arr) {
  return _arrayWithoutHoles7(arr) || _iterableToArray7(arr) || _unsupportedIterableToArray9(arr) || _nonIterableSpread7();
}
function _nonIterableSpread7() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray9(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray9(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray9(o, minLen);
}
function _iterableToArray7(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles7(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray9(arr);
}
function _arrayLikeToArray9(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _objectWithoutProperties4(source2, excluded) {
  if (source2 == null)
    return {};
  var target = _objectWithoutPropertiesLoose4(source2, excluded);
  var key2, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source2);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key2 = sourceSymbolKeys[i];
      if (excluded.indexOf(key2) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source2, key2))
        continue;
      target[key2] = source2[key2];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose4(source2, excluded) {
  if (source2 == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source2);
  var key2, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key2 = sourceKeys[i];
    if (excluded.indexOf(key2) >= 0)
      continue;
    target[key2] = source2[key2];
  }
  return target;
}
function normalizeProjectAnnotations(_ref) {
  var argTypes = _ref.argTypes, globalTypes = _ref.globalTypes, argTypesEnhancers = _ref.argTypesEnhancers, annotations = _objectWithoutProperties4(_ref, _excluded4);
  return Object.assign({}, argTypes && {
    argTypes: normalizeInputTypes(argTypes)
  }, globalTypes && {
    globalTypes: normalizeInputTypes(globalTypes)
  }, {
    argTypesEnhancers: [].concat(_toConsumableArray7(argTypesEnhancers || []), [
      inferArgTypes,
      inferControls
    ])
  }, annotations);
}

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/csf/composeConfigs.js
var import_es_array_iterator12 = __toESM(require_es_array_iterator());
var import_es_string_iterator12 = __toESM(require_es_string_iterator());
var import_es_regexp_exec13 = __toESM(require_es_regexp_exec());
function _toConsumableArray8(arr) {
  return _arrayWithoutHoles8(arr) || _iterableToArray8(arr) || _unsupportedIterableToArray10(arr) || _nonIterableSpread8();
}
function _nonIterableSpread8() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray10(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray10(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray10(o, minLen);
}
function _iterableToArray8(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles8(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray10(arr);
}
function _arrayLikeToArray10(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function getField(moduleExportList, field) {
  return moduleExportList.map(function(xs) {
    return xs[field];
  }).filter(Boolean);
}
function getArrayField(moduleExportList, field) {
  return getField(moduleExportList, field).reduce(function(a, b) {
    return [].concat(_toConsumableArray8(a), _toConsumableArray8(b));
  }, []);
}
function getObjectField(moduleExportList, field) {
  return Object.assign.apply(Object, [{}].concat(_toConsumableArray8(getField(moduleExportList, field))));
}
function getSingletonField(moduleExportList, field) {
  return getField(moduleExportList, field).pop();
}
function composeConfigs(moduleExportList) {
  var allArgTypeEnhancers = getArrayField(moduleExportList, "argTypesEnhancers");
  return {
    parameters: combineParameters.apply(void 0, _toConsumableArray8(getField(moduleExportList, "parameters"))),
    decorators: getArrayField(moduleExportList, "decorators"),
    args: getObjectField(moduleExportList, "args"),
    argsEnhancers: getArrayField(moduleExportList, "argsEnhancers"),
    argTypes: getObjectField(moduleExportList, "argTypes"),
    argTypesEnhancers: [].concat(_toConsumableArray8(allArgTypeEnhancers.filter(function(e) {
      return !e.secondPass;
    })), _toConsumableArray8(allArgTypeEnhancers.filter(function(e) {
      return e.secondPass;
    }))),
    globals: getObjectField(moduleExportList, "globals"),
    globalTypes: getObjectField(moduleExportList, "globalTypes"),
    loaders: getArrayField(moduleExportList, "loaders"),
    render: getSingletonField(moduleExportList, "render"),
    renderToDOM: getSingletonField(moduleExportList, "renderToDOM"),
    applyDecorators: getSingletonField(moduleExportList, "applyDecorators")
  };
}

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/csf/testing-utils/index.js
var import_es_array_iterator13 = __toESM(require_es_array_iterator());
var import_es_string_iterator13 = __toESM(require_es_string_iterator());
var import_es_regexp_exec14 = __toESM(require_es_regexp_exec());
var import_csf5 = __toESM(require_dist());
var _excluded5 = ["default", "__esModule", "__namedExportsOrder"];
function _defineProperty2(obj, key2, value2) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value2, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value2;
  }
  return obj;
}
function _slicedToArray7(arr, i) {
  return _arrayWithHoles7(arr) || _iterableToArrayLimit7(arr, i) || _unsupportedIterableToArray11(arr, i) || _nonIterableRest7();
}
function _nonIterableRest7() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray11(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray11(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray11(o, minLen);
}
function _arrayLikeToArray11(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit7(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles7(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _objectWithoutProperties5(source2, excluded) {
  if (source2 == null)
    return {};
  var target = _objectWithoutPropertiesLoose5(source2, excluded);
  var key2, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source2);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key2 = sourceSymbolKeys[i];
      if (excluded.indexOf(key2) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source2, key2))
        continue;
      target[key2] = source2[key2];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose5(source2, excluded) {
  if (source2 == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source2);
  var key2, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key2 = sourceKeys[i];
    if (excluded.indexOf(key2) >= 0)
      continue;
    target[key2] = source2[key2];
  }
  return target;
}
var GLOBAL_STORYBOOK_PROJECT_ANNOTATIONS = {};
function setProjectAnnotations(projectAnnotations) {
  var annotations = Array.isArray(projectAnnotations) ? projectAnnotations : [projectAnnotations];
  GLOBAL_STORYBOOK_PROJECT_ANNOTATIONS = composeConfigs(annotations);
}
function composeStory(storyAnnotations, componentAnnotations) {
  var _componentAnnotations, _storyAnnotations$sto;
  var projectAnnotations = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : GLOBAL_STORYBOOK_PROJECT_ANNOTATIONS;
  var defaultConfig = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
  var exportsName = arguments.length > 4 ? arguments[4] : void 0;
  if (storyAnnotations === void 0) {
    throw new Error("Expected a story but received undefined.");
  }
  componentAnnotations.title = (_componentAnnotations = componentAnnotations.title) !== null && _componentAnnotations !== void 0 ? _componentAnnotations : "ComposedStory";
  var normalizedComponentAnnotations = normalizeComponentAnnotations(componentAnnotations);
  var storyName = exportsName || storyAnnotations.storyName || ((_storyAnnotations$sto = storyAnnotations.story) === null || _storyAnnotations$sto === void 0 ? void 0 : _storyAnnotations$sto.name) || storyAnnotations.name;
  var normalizedStory = normalizeStory(storyName, storyAnnotations, normalizedComponentAnnotations);
  var normalizedProjectAnnotations = normalizeProjectAnnotations(Object.assign({}, projectAnnotations, defaultConfig));
  var story = prepareStory(normalizedStory, normalizedComponentAnnotations, normalizedProjectAnnotations);
  var defaultGlobals = getValuesFromArgTypes(projectAnnotations.globalTypes);
  var composedStory = function composedStory2(extraArgs) {
    var context = Object.assign({}, story, {
      hooks: new HooksContext(),
      globals: defaultGlobals,
      args: Object.assign({}, story.initialArgs, extraArgs)
    });
    return story.unboundStoryFn(context);
  };
  composedStory.storyName = storyName;
  composedStory.args = story.initialArgs;
  composedStory.play = story.playFunction;
  composedStory.parameters = story.parameters;
  return composedStory;
}
function composeStories(storiesImport, globalConfig, composeStoryFn) {
  var meta = storiesImport.default, __esModule = storiesImport.__esModule, __namedExportsOrder = storiesImport.__namedExportsOrder, stories = _objectWithoutProperties5(storiesImport, _excluded5);
  var composedStories = Object.entries(stories).reduce(function(storiesMap, _ref) {
    var _ref22 = _slicedToArray7(_ref, 2), exportsName = _ref22[0], story = _ref22[1];
    if (!(0, import_csf5.isExportStory)(exportsName, meta)) {
      return storiesMap;
    }
    var result2 = Object.assign(storiesMap, _defineProperty2({}, exportsName, composeStoryFn(story, meta, globalConfig, exportsName)));
    return result2;
  }, {});
  return composedStories;
}

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/StoryStore.js
function _defineProperty3(obj, key2, value2) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value2, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value2;
  }
  return obj;
}
function _slicedToArray8(arr, i) {
  return _arrayWithHoles8(arr) || _iterableToArrayLimit8(arr, i) || _unsupportedIterableToArray12(arr, i) || _nonIterableRest8();
}
function _nonIterableRest8() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray12(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray12(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray12(o, minLen);
}
function _arrayLikeToArray12(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit8(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles8(arr) {
  if (Array.isArray(arr))
    return arr;
}
function asyncGeneratorStep2(gen, resolve, reject, _next, _throw, key2, arg) {
  try {
    var info = gen[key2](arg);
    var value2 = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value2);
  } else {
    Promise.resolve(value2).then(_next, _throw);
  }
}
function _asyncToGenerator2(fn) {
  return function() {
    var self = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value2) {
        asyncGeneratorStep2(gen, resolve, reject, _next, _throw, "next", value2);
      }
      function _throw(err) {
        asyncGeneratorStep2(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}
function _classCallCheck6(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties6(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass6(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties6(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties6(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
var CSF_CACHE_SIZE = 1e3;
var STORY_CACHE_SIZE = 1e4;
var StoryStore = function() {
  function StoryStore2() {
    var _this = this;
    _classCallCheck6(this, StoryStore2);
    this.storyIndex = void 0;
    this.importFn = void 0;
    this.projectAnnotations = void 0;
    this.globals = void 0;
    this.args = void 0;
    this.hooks = void 0;
    this.cachedCSFFiles = void 0;
    this.processCSFFileWithCache = void 0;
    this.prepareStoryWithCache = void 0;
    this.initializationPromise = void 0;
    this.resolveInitializationPromise = void 0;
    this.getStoriesJsonData = function() {
      var value2 = _this.getSetStoriesPayload();
      var allowedParameters = ["fileName", "docsOnly", "framework", "__id", "__isArgsStory"];
      var stories = (0, import_mapValues4.default)(value2.stories, function(story) {
        var _global$FEATURES;
        return Object.assign({}, (0, import_pick.default)(story, ["id", "name", "title"]), {
          importPath: _this.storyIndex.stories[story.id].importPath
        }, !((_global$FEATURES = import_global4.default.FEATURES) !== null && _global$FEATURES !== void 0 && _global$FEATURES.breakingChangesV7) && {
          kind: story.title,
          story: story.name,
          parameters: Object.assign({}, (0, import_pick.default)(story.parameters, allowedParameters), {
            fileName: _this.storyIndex.stories[story.id].importPath
          })
        });
      });
      return {
        v: 3,
        stories
      };
    };
    this.globals = new GlobalsStore();
    this.args = new ArgsStore();
    this.hooks = {};
    this.processCSFFileWithCache = (0, import_memoizerific.default)(CSF_CACHE_SIZE)(processCSFFile);
    this.prepareStoryWithCache = (0, import_memoizerific.default)(STORY_CACHE_SIZE)(prepareStory);
    this.initializationPromise = new import_synchronous_promise.SynchronousPromise(function(resolve) {
      _this.resolveInitializationPromise = resolve;
    });
  }
  _createClass6(StoryStore2, [{
    key: "setProjectAnnotations",
    value: function setProjectAnnotations3(projectAnnotations) {
      this.projectAnnotations = normalizeProjectAnnotations(projectAnnotations);
      var globals = projectAnnotations.globals, globalTypes = projectAnnotations.globalTypes;
      this.globals.set({
        globals,
        globalTypes
      });
    }
  }, {
    key: "initialize",
    value: function initialize(_ref) {
      var storyIndex = _ref.storyIndex, importFn = _ref.importFn, _ref$cache = _ref.cache, cache = _ref$cache === void 0 ? false : _ref$cache;
      this.storyIndex = new StoryIndexStore(storyIndex);
      this.importFn = importFn;
      this.resolveInitializationPromise();
      return cache ? this.cacheAllCSFFiles() : import_synchronous_promise.SynchronousPromise.resolve();
    }
  }, {
    key: "onStoriesChanged",
    value: function() {
      var _onStoriesChanged = _asyncToGenerator2(regeneratorRuntime.mark(function _callee(_ref22) {
        var importFn, storyIndex;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                importFn = _ref22.importFn, storyIndex = _ref22.storyIndex;
                if (importFn)
                  this.importFn = importFn;
                if (storyIndex)
                  this.storyIndex.stories = storyIndex.stories;
                if (!this.cachedCSFFiles) {
                  _context.next = 6;
                  break;
                }
                _context.next = 6;
                return this.cacheAllCSFFiles();
              case 6:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
      function onStoriesChanged(_x) {
        return _onStoriesChanged.apply(this, arguments);
      }
      return onStoriesChanged;
    }()
  }, {
    key: "loadCSFFileByStoryId",
    value: function loadCSFFileByStoryId(storyId) {
      var _this2 = this;
      var _this$storyIndex$stor = this.storyIndex.storyIdToEntry(storyId), importPath = _this$storyIndex$stor.importPath, title = _this$storyIndex$stor.title;
      return this.importFn(importPath).then(function(moduleExports) {
        return _this2.processCSFFileWithCache(moduleExports, importPath, title);
      });
    }
  }, {
    key: "loadAllCSFFiles",
    value: function loadAllCSFFiles() {
      var _this3 = this;
      var importPaths = {};
      Object.entries(this.storyIndex.stories).forEach(function(_ref32) {
        var _ref42 = _slicedToArray8(_ref32, 2), storyId = _ref42[0], importPath = _ref42[1].importPath;
        importPaths[importPath] = storyId;
      });
      var csfFilePromiseList = Object.entries(importPaths).map(function(_ref52) {
        var _ref6 = _slicedToArray8(_ref52, 2), importPath = _ref6[0], storyId = _ref6[1];
        return _this3.loadCSFFileByStoryId(storyId).then(function(csfFile) {
          return {
            importPath,
            csfFile
          };
        });
      });
      return import_synchronous_promise.SynchronousPromise.all(csfFilePromiseList).then(function(list) {
        return list.reduce(function(acc, _ref7) {
          var importPath = _ref7.importPath, csfFile = _ref7.csfFile;
          acc[importPath] = csfFile;
          return acc;
        }, {});
      });
    }
  }, {
    key: "cacheAllCSFFiles",
    value: function cacheAllCSFFiles() {
      var _this4 = this;
      return this.initializationPromise.then(function() {
        return _this4.loadAllCSFFiles().then(function(csfFiles) {
          _this4.cachedCSFFiles = csfFiles;
        });
      });
    }
  }, {
    key: "loadStory",
    value: function() {
      var _loadStory = _asyncToGenerator2(regeneratorRuntime.mark(function _callee2(_ref8) {
        var storyId, csfFile;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                storyId = _ref8.storyId;
                _context2.next = 3;
                return this.initializationPromise;
              case 3:
                _context2.next = 5;
                return this.loadCSFFileByStoryId(storyId);
              case 5:
                csfFile = _context2.sent;
                return _context2.abrupt("return", this.storyFromCSFFile({
                  storyId,
                  csfFile
                }));
              case 7:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));
      function loadStory(_x2) {
        return _loadStory.apply(this, arguments);
      }
      return loadStory;
    }()
  }, {
    key: "storyFromCSFFile",
    value: function storyFromCSFFile(_ref9) {
      var storyId = _ref9.storyId, csfFile = _ref9.csfFile;
      var storyAnnotations = csfFile.stories[storyId];
      if (!storyAnnotations) {
        throw new Error("Didn't find '".concat(storyId, "' in CSF file, this is unexpected"));
      }
      var componentAnnotations = csfFile.meta;
      var story = this.prepareStoryWithCache(storyAnnotations, componentAnnotations, this.projectAnnotations);
      this.args.setInitial(story);
      this.hooks[story.id] = this.hooks[story.id] || new HooksContext();
      return story;
    }
  }, {
    key: "componentStoriesFromCSFFile",
    value: function componentStoriesFromCSFFile(_ref10) {
      var _this5 = this;
      var csfFile = _ref10.csfFile;
      return Object.keys(this.storyIndex.stories).filter(function(storyId) {
        return !!csfFile.stories[storyId];
      }).map(function(storyId) {
        return _this5.storyFromCSFFile({
          storyId,
          csfFile
        });
      });
    }
  }, {
    key: "getStoryContext",
    value: function getStoryContext(story) {
      return Object.assign({}, story, {
        args: this.args.get(story.id),
        globals: this.globals.get(),
        hooks: this.hooks[story.id]
      });
    }
  }, {
    key: "cleanupStory",
    value: function cleanupStory(story) {
      this.hooks[story.id].clean();
    }
  }, {
    key: "extract",
    value: function extract() {
      var _this6 = this;
      var options2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {
        includeDocsOnly: false
      };
      if (!this.cachedCSFFiles) {
        throw new Error("Cannot call extract() unless you call cacheAllCSFFiles() first.");
      }
      return Object.entries(this.storyIndex.stories).reduce(function(acc, _ref11) {
        var _ref12 = _slicedToArray8(_ref11, 2), storyId = _ref12[0], importPath = _ref12[1].importPath;
        var csfFile = _this6.cachedCSFFiles[importPath];
        var story = _this6.storyFromCSFFile({
          storyId,
          csfFile
        });
        if (!options2.includeDocsOnly && story.parameters.docsOnly) {
          return acc;
        }
        acc[storyId] = Object.entries(story).reduce(function(storyAcc, _ref13) {
          var _ref14 = _slicedToArray8(_ref13, 2), key2 = _ref14[0], value2 = _ref14[1];
          if (typeof value2 === "function") {
            return storyAcc;
          }
          if (Array.isArray(value2)) {
            return Object.assign(storyAcc, _defineProperty3({}, key2, value2.slice().sort()));
          }
          return Object.assign(storyAcc, _defineProperty3({}, key2, value2));
        }, {
          args: story.initialArgs
        });
        return acc;
      }, {});
    }
  }, {
    key: "getSetStoriesPayload",
    value: function getSetStoriesPayload() {
      var stories = this.extract({
        includeDocsOnly: true
      });
      var kindParameters = Object.values(stories).reduce(function(acc, _ref15) {
        var title = _ref15.title;
        acc[title] = {};
        return acc;
      }, {});
      return {
        v: 2,
        globals: this.globals.get(),
        globalParameters: {},
        kindParameters,
        stories
      };
    }
  }, {
    key: "raw",
    value: function raw2() {
      var _this7 = this;
      return Object.values(this.extract()).map(function(_ref16) {
        var id = _ref16.id;
        return _this7.fromId(id);
      });
    }
  }, {
    key: "fromId",
    value: function fromId(storyId) {
      var _this8 = this;
      if (!this.cachedCSFFiles) {
        throw new Error("Cannot call fromId/raw() unless you call cacheAllCSFFiles() first.");
      }
      var importPath;
      try {
        var _this$storyIndex$stor2 = this.storyIndex.storyIdToEntry(storyId);
        importPath = _this$storyIndex$stor2.importPath;
      } catch (err) {
        return null;
      }
      var csfFile = this.cachedCSFFiles[importPath];
      var story = this.storyFromCSFFile({
        storyId,
        csfFile
      });
      return Object.assign({}, story, {
        storyFn: function storyFn(update) {
          var context = Object.assign({}, _this8.getStoryContext(story), {
            viewMode: "story"
          });
          return story.unboundStoryFn(Object.assign({}, context, update));
        }
      });
    }
  }]);
  return StoryStore2;
}();

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/autoTitle.js
var import_es_array_iterator15 = __toESM(require_es_array_iterator());
var import_es_string_iterator15 = __toESM(require_es_string_iterator());
var import_es_regexp_exec16 = __toESM(require_es_regexp_exec());
var import_slash = __toESM(require_slash());
var _templateObject7;
function _taggedTemplateLiteral7(strings, raw2) {
  if (!raw2) {
    raw2 = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw2) } }));
}
function _toArray(arr) {
  return _arrayWithHoles9(arr) || _iterableToArray9(arr) || _unsupportedIterableToArray13(arr) || _nonIterableRest9();
}
function _nonIterableRest9() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _arrayWithHoles9(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _toConsumableArray9(arr) {
  return _arrayWithoutHoles9(arr) || _iterableToArray9(arr) || _unsupportedIterableToArray13(arr) || _nonIterableSpread9();
}
function _nonIterableSpread9() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray13(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray13(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray13(o, minLen);
}
function _iterableToArray9(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles9(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray13(arr);
}
function _arrayLikeToArray13(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
var stripExtension = function stripExtension2(path) {
  var parts = _toConsumableArray9(path);
  var last = parts[parts.length - 1];
  var dotIndex = last.indexOf(".");
  var stripped = dotIndex > 0 ? last.substr(0, dotIndex) : last;
  parts[parts.length - 1] = stripped;
  var _parts = parts, _parts2 = _toArray(_parts), first = _parts2[0], rest = _parts2.slice(1);
  if (first === "") {
    parts = rest;
  }
  return parts;
};
var indexRe = /^index$/i;
var removeRedundantFilename = function removeRedundantFilename2(paths) {
  var prevVal;
  return paths.filter(function(val, index) {
    if (index === paths.length - 1 && (val === prevVal || indexRe.test(val))) {
      return false;
    }
    prevVal = val;
    return true;
  });
};
function pathJoin(paths) {
  var slashes = new RegExp("/{1,}", "g");
  return paths.join("/").replace(slashes, "/");
}
var userOrAutoTitleFromSpecifier = function userOrAutoTitleFromSpecifier2(fileName, entry, userTitle) {
  var _ref = entry || {}, directory = _ref.directory, importPathMatcher = _ref.importPathMatcher, _ref$titlePrefix = _ref.titlePrefix, titlePrefix = _ref$titlePrefix === void 0 ? "" : _ref$titlePrefix;
  if (typeof fileName === "number") {
    once.warn(esm_default(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral7(['\n      CSF Auto-title received a numeric fileName. This typically happens when\n      webpack is mis-configured in production mode. To force webpack to produce\n      filenames, set optimization.moduleIds = "named" in your webpack config.\n    ']))));
  }
  var normalizedFileName = (0, import_slash.default)(String(fileName));
  if (importPathMatcher.exec(normalizedFileName)) {
    if (!userTitle) {
      var suffix = normalizedFileName.replace(directory, "");
      var titleAndSuffix = (0, import_slash.default)(pathJoin([titlePrefix, suffix]));
      var path = titleAndSuffix.split("/");
      path = stripExtension(path);
      path = removeRedundantFilename(path);
      return path.join("/");
    }
    if (!titlePrefix) {
      return userTitle;
    }
    return (0, import_slash.default)(pathJoin([titlePrefix, userTitle]));
  }
  return void 0;
};
var userOrAutoTitle = function userOrAutoTitle2(fileName, storiesEntries, userTitle) {
  for (var i = 0; i < storiesEntries.length; i += 1) {
    var title = userOrAutoTitleFromSpecifier(fileName, storiesEntries[i], userTitle);
    if (title)
      return title;
  }
  return userTitle || void 0;
};

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/sortStories.js
var import_stable = __toESM(require_stable());

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/storySort.js
var import_es_regexp_exec17 = __toESM(require_es_regexp_exec());
var STORY_KIND_PATH_SEPARATOR = /\s*\/\s*/;
var storySort = function storySort2() {
  var options2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  return function(a, b) {
    if (a.title === b.title && !options2.includeNames) {
      return 0;
    }
    var method = options2.method || "configure";
    var order = options2.order || [];
    var storyTitleA = a.title.trim().split(STORY_KIND_PATH_SEPARATOR);
    var storyTitleB = b.title.trim().split(STORY_KIND_PATH_SEPARATOR);
    if (options2.includeNames) {
      storyTitleA.push(a.name);
      storyTitleB.push(b.name);
    }
    var depth = 0;
    while (storyTitleA[depth] || storyTitleB[depth]) {
      if (!storyTitleA[depth]) {
        return -1;
      }
      if (!storyTitleB[depth]) {
        return 1;
      }
      var nameA = storyTitleA[depth];
      var nameB = storyTitleB[depth];
      if (nameA !== nameB) {
        var indexA = order.indexOf(nameA);
        var indexB = order.indexOf(nameB);
        var indexWildcard = order.indexOf("*");
        if (indexA !== -1 || indexB !== -1) {
          if (indexA === -1) {
            if (indexWildcard !== -1) {
              indexA = indexWildcard;
            } else {
              indexA = order.length;
            }
          }
          if (indexB === -1) {
            if (indexWildcard !== -1) {
              indexB = indexWildcard;
            } else {
              indexB = order.length;
            }
          }
          return indexA - indexB;
        }
        if (method === "configure") {
          return 0;
        }
        return nameA.localeCompare(nameB, options2.locales ? options2.locales : void 0, {
          numeric: true,
          sensitivity: "accent"
        });
      }
      var index = order.indexOf(nameA);
      order = index !== -1 && Array.isArray(order[index + 1]) ? order[index + 1] : [];
      depth += 1;
    }
    return 0;
  };
};

// .yarn/__virtual__/@storybook-store-virtual-76b8b86aa3/0/cache/@storybook-store-npm-6.5.13-9afd4f2c08-69f55927bd.zip/node_modules/@storybook/store/dist/esm/sortStories.js
var sortStoriesCommon = function sortStoriesCommon2(stories, storySortParameter, fileNameOrder) {
  if (storySortParameter) {
    var sortFn;
    if (typeof storySortParameter === "function") {
      sortFn = storySortParameter;
    } else {
      sortFn = storySort(storySortParameter);
    }
    import_stable.default.inplace(stories, sortFn);
  } else {
    import_stable.default.inplace(stories, function(s1, s2) {
      return fileNameOrder.indexOf(s1.importPath) - fileNameOrder.indexOf(s2.importPath);
    });
  }
  return stories;
};
var toIndexEntry = function toIndexEntry2(story) {
  var id = story.id, title = story.title, name2 = story.name, parameters = story.parameters;
  return {
    id,
    title,
    name: name2,
    importPath: parameters.fileName
  };
};
var sortStoriesV6 = function sortStoriesV62(stories, storySortParameter, fileNameOrder) {
  if (storySortParameter && typeof storySortParameter === "function") {
    import_stable.default.inplace(stories, storySortParameter);
    return stories.map(function(s) {
      return toIndexEntry(s[1]);
    });
  }
  var storiesV7 = stories.map(function(s) {
    return toIndexEntry(s[1]);
  });
  return sortStoriesCommon(storiesV7, storySortParameter, fileNameOrder);
};

// .yarn/__virtual__/@storybook-client-api-virtual-11b070aabf/0/cache/@storybook-client-api-npm-6.5.13-9e2abd4d1f-b0af25786b.zip/node_modules/@storybook/client-api/dist/esm/StoryStoreFacade.js
var import_es_array_iterator16 = __toESM(require_es_array_iterator());
var import_es_string_iterator16 = __toESM(require_es_string_iterator());
var import_es_regexp_exec18 = __toESM(require_es_regexp_exec());
var import_global5 = __toESM(require_window());
var import_synchronous_promise2 = __toESM(require_synchronous_promise());
var import_csf7 = __toESM(require_dist());
var _excluded6 = ["default", "__namedExportsOrder"];
var _templateObject8;
function _objectWithoutProperties6(source2, excluded) {
  if (source2 == null)
    return {};
  var target = _objectWithoutPropertiesLoose6(source2, excluded);
  var key2, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source2);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key2 = sourceSymbolKeys[i];
      if (excluded.indexOf(key2) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source2, key2))
        continue;
      target[key2] = source2[key2];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose6(source2, excluded) {
  if (source2 == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source2);
  var key2, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key2 = sourceKeys[i];
    if (excluded.indexOf(key2) >= 0)
      continue;
    target[key2] = source2[key2];
  }
  return target;
}
function _taggedTemplateLiteral8(strings, raw2) {
  if (!raw2) {
    raw2 = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw2) } }));
}
function _slicedToArray9(arr, i) {
  return _arrayWithHoles10(arr) || _iterableToArrayLimit9(arr, i) || _unsupportedIterableToArray14(arr, i) || _nonIterableRest10();
}
function _nonIterableRest10() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray14(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray14(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray14(o, minLen);
}
function _arrayLikeToArray14(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit9(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles10(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _classCallCheck7(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties7(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass7(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties7(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties7(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
var StoryStoreFacade = function() {
  function StoryStoreFacade2() {
    _classCallCheck7(this, StoryStoreFacade2);
    this.projectAnnotations = void 0;
    this.stories = void 0;
    this.csfExports = void 0;
    this.projectAnnotations = {
      loaders: [],
      decorators: [],
      parameters: {},
      argsEnhancers: [],
      argTypesEnhancers: [],
      args: {},
      argTypes: {}
    };
    this.stories = {};
    this.csfExports = {};
  }
  _createClass7(StoryStoreFacade2, [{
    key: "importFn",
    value: function importFn(path) {
      var _this = this;
      return import_synchronous_promise2.SynchronousPromise.resolve().then(function() {
        var moduleExports = _this.csfExports[path];
        if (!moduleExports)
          throw new Error("Unknown path: ".concat(path));
        return moduleExports;
      });
    }
  }, {
    key: "getStoryIndex",
    value: function getStoryIndex(store) {
      var _this$projectAnnotati, _this$projectAnnotati2, _this2 = this;
      var fileNameOrder = Object.keys(this.csfExports);
      var storySortParameter = (_this$projectAnnotati = this.projectAnnotations.parameters) === null || _this$projectAnnotati === void 0 ? void 0 : (_this$projectAnnotati2 = _this$projectAnnotati.options) === null || _this$projectAnnotati2 === void 0 ? void 0 : _this$projectAnnotati2.storySort;
      var storyEntries = Object.entries(this.stories);
      var sortableV6 = storyEntries.map(function(_ref) {
        var _ref22 = _slicedToArray9(_ref, 2), storyId = _ref22[0], importPath = _ref22[1].importPath;
        var exports = _this2.csfExports[importPath];
        var csfFile = store.processCSFFileWithCache(exports, importPath, exports.default.title);
        return [storyId, store.storyFromCSFFile({
          storyId,
          csfFile
        }), csfFile.meta.parameters, _this2.projectAnnotations.parameters];
      });
      var sortedV7;
      try {
        sortedV7 = sortStoriesV6(sortableV6, storySortParameter, fileNameOrder);
      } catch (err) {
        if (typeof storySortParameter === "function") {
          throw new Error(esm_default(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral8(["\n          Error sorting stories with sort parameter ", ":\n\n          > ", "\n          \n          Are you using a V7-style sort function in V6 compatibility mode?\n          \n          More info: https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#v7-style-story-sort\n        "])), storySortParameter, err.message));
        }
        throw err;
      }
      var stories = sortedV7.reduce(function(acc, s) {
        acc[s.id] = _this2.stories[s.id];
        return acc;
      }, {});
      return {
        v: 3,
        stories
      };
    }
  }, {
    key: "clearFilenameExports",
    value: function clearFilenameExports(fileName) {
      var _this3 = this;
      if (!this.csfExports[fileName]) {
        return;
      }
      Object.entries(this.stories).forEach(function(_ref32) {
        var _ref42 = _slicedToArray9(_ref32, 2), id = _ref42[0], importPath = _ref42[1].importPath;
        if (importPath === fileName) {
          delete _this3.stories[id];
        }
      });
      this.csfExports[fileName] = {};
    }
  }, {
    key: "addStoriesFromExports",
    value: function addStoriesFromExports(fileName, fileExports) {
      var _this4 = this;
      if (this.csfExports[fileName] === fileExports) {
        return;
      }
      this.clearFilenameExports(fileName);
      var defaultExport = fileExports.default, __namedExportsOrder = fileExports.__namedExportsOrder, namedExports = _objectWithoutProperties6(fileExports, _excluded6);
      var _ref52 = defaultExport || {}, componentId = _ref52.id, title = _ref52.title;
      var specifiers = (import_global5.default.STORIES || []).map(function(specifier) {
        return Object.assign({}, specifier, {
          importPathMatcher: new RegExp(specifier.importPathMatcher)
        });
      });
      title = userOrAutoTitle(fileName, specifiers, title);
      if (!title) {
        logger.info("Unexpected default export without title in '".concat(fileName, "': ").concat(JSON.stringify(fileExports.default)));
        return;
      }
      this.csfExports[fileName] = Object.assign({}, fileExports, {
        default: Object.assign({}, defaultExport, {
          title
        })
      });
      var sortedExports = namedExports;
      if (Array.isArray(__namedExportsOrder)) {
        sortedExports = {};
        __namedExportsOrder.forEach(function(name2) {
          var namedExport = namedExports[name2];
          if (namedExport)
            sortedExports[name2] = namedExport;
        });
      }
      Object.entries(sortedExports).filter(function(_ref6) {
        var _ref7 = _slicedToArray9(_ref6, 1), key2 = _ref7[0];
        return (0, import_csf7.isExportStory)(key2, defaultExport);
      }).forEach(function(_ref8) {
        var _storyExport$paramete, _storyExport$story;
        var _ref9 = _slicedToArray9(_ref8, 2), key2 = _ref9[0], storyExport = _ref9[1];
        var exportName = (0, import_csf7.storyNameFromExport)(key2);
        var id = ((_storyExport$paramete = storyExport.parameters) === null || _storyExport$paramete === void 0 ? void 0 : _storyExport$paramete.__id) || (0, import_csf7.toId)(componentId || title, exportName);
        var name2 = typeof storyExport !== "function" && storyExport.name || storyExport.storyName || ((_storyExport$story = storyExport.story) === null || _storyExport$story === void 0 ? void 0 : _storyExport$story.name) || exportName;
        _this4.stories[id] = {
          id,
          name: name2,
          title,
          importPath: fileName
        };
      });
    }
  }]);
  return StoryStoreFacade2;
}();

// .yarn/__virtual__/@storybook-client-api-virtual-11b070aabf/0/cache/@storybook-client-api-npm-6.5.13-9e2abd4d1f-b0af25786b.zip/node_modules/@storybook/client-api/dist/esm/ClientApi.js
var _excluded7 = ["globals", "globalTypes"];
var _excluded22 = ["decorators", "loaders", "component", "args", "argTypes"];
var _excluded32 = ["component", "args", "argTypes"];
var _templateObject9;
var _templateObject32;
var _templateObject42;
function _slicedToArray10(arr, i) {
  return _arrayWithHoles11(arr) || _iterableToArrayLimit10(arr, i) || _unsupportedIterableToArray15(arr, i) || _nonIterableRest11();
}
function _nonIterableRest11() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray15(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray15(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray15(o, minLen);
}
function _arrayLikeToArray15(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit10(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles11(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _typeof3(obj) {
  "@babel/helpers - typeof";
  return _typeof3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof3(obj);
}
function _objectWithoutProperties7(source2, excluded) {
  if (source2 == null)
    return {};
  var target = _objectWithoutPropertiesLoose7(source2, excluded);
  var key2, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source2);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key2 = sourceSymbolKeys[i];
      if (excluded.indexOf(key2) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source2, key2))
        continue;
      target[key2] = source2[key2];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose7(source2, excluded) {
  if (source2 == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source2);
  var key2, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key2 = sourceKeys[i];
    if (excluded.indexOf(key2) >= 0)
      continue;
    target[key2] = source2[key2];
  }
  return target;
}
function _classCallCheck8(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties8(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass8(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties8(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties8(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _taggedTemplateLiteral9(strings, raw2) {
  if (!raw2) {
    raw2 = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw2) } }));
}
var singleton;
var warningAlternatives = {
  addDecorator: "Instead, use `export const decorators = [];` in your `preview.js`.",
  addParameters: "Instead, use `export const parameters = {};` in your `preview.js`.",
  addLoaders: "Instead, use `export const loaders = [];` in your `preview.js`."
};
var warningMessage = function warningMessage2(method) {
  return (0, import_util_deprecate4.default)(function() {
  }, esm_default(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral9(["\n  `", "` is deprecated, and will be removed in Storybook 7.0.\n\n  ", "\n\n  Read more at https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#deprecated-addparameters-and-adddecorator)."], ["\n  \\`", "\\` is deprecated, and will be removed in Storybook 7.0.\n\n  ", "\n\n  Read more at https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#deprecated-addparameters-and-adddecorator)."])), method, warningAlternatives[method]));
};
var warnings = {
  addDecorator: warningMessage("addDecorator"),
  addParameters: warningMessage("addParameters"),
  addLoaders: warningMessage("addLoaders")
};
var invalidStoryTypes = /* @__PURE__ */ new Set(["string", "number", "boolean", "symbol"]);
var ClientApi = function() {
  function ClientApi2() {
    var _this = this;
    var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, storyStore = _ref.storyStore;
    _classCallCheck8(this, ClientApi2);
    this.facade = void 0;
    this.storyStore = void 0;
    this.addons = void 0;
    this.onImportFnChanged = void 0;
    this.lastFileName = 0;
    this.setAddon = (0, import_util_deprecate4.default)(function(addon) {
      _this.addons = Object.assign({}, _this.addons, addon);
    }, esm_default(_templateObject32 || (_templateObject32 = _taggedTemplateLiteral9(["\n      `setAddon` is deprecated and will be removed in Storybook 7.0.\n\n      https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#deprecated-setaddon\n    "], ["\n      \\`setAddon\\` is deprecated and will be removed in Storybook 7.0.\n\n      https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#deprecated-setaddon\n    "]))));
    this.addDecorator = function(decorator) {
      _this.facade.projectAnnotations.decorators.push(decorator);
    };
    this.clearDecorators = (0, import_util_deprecate4.default)(function() {
      _this.facade.projectAnnotations.decorators = [];
    }, esm_default(_templateObject42 || (_templateObject42 = _taggedTemplateLiteral9(["\n      `clearDecorators` is deprecated and will be removed in Storybook 7.0.\n\n      https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#deprecated-cleardecorators\n    "], ["\n      \\`clearDecorators\\` is deprecated and will be removed in Storybook 7.0.\n\n      https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#deprecated-cleardecorators\n    "]))));
    this.addParameters = function(_ref22) {
      var globals = _ref22.globals, globalTypes = _ref22.globalTypes, parameters = _objectWithoutProperties7(_ref22, _excluded7);
      _this.facade.projectAnnotations.parameters = combineParameters(_this.facade.projectAnnotations.parameters, parameters);
      if (globals) {
        _this.facade.projectAnnotations.globals = Object.assign({}, _this.facade.projectAnnotations.globals, globals);
      }
      if (globalTypes) {
        _this.facade.projectAnnotations.globalTypes = Object.assign({}, _this.facade.projectAnnotations.globalTypes, normalizeInputTypes(globalTypes));
      }
    };
    this.addLoader = function(loader) {
      _this.facade.projectAnnotations.loaders.push(loader);
    };
    this.addArgs = function(args) {
      _this.facade.projectAnnotations.args = Object.assign({}, _this.facade.projectAnnotations.args, args);
    };
    this.addArgTypes = function(argTypes) {
      _this.facade.projectAnnotations.argTypes = Object.assign({}, _this.facade.projectAnnotations.argTypes, normalizeInputTypes(argTypes));
    };
    this.addArgsEnhancer = function(enhancer) {
      _this.facade.projectAnnotations.argsEnhancers.push(enhancer);
    };
    this.addArgTypesEnhancer = function(enhancer) {
      _this.facade.projectAnnotations.argTypesEnhancers.push(enhancer);
    };
    this.storiesOf = function(kind, m) {
      if (!kind && typeof kind !== "string") {
        throw new Error("Invalid or missing kind provided for stories, should be a string");
      }
      if (!m) {
        logger.warn("Missing 'module' parameter for story with a kind of '".concat(kind, "'. It will break your HMR"));
      }
      if (m) {
        var proto = Object.getPrototypeOf(m);
        if (proto.exports && proto.exports.default) {
          logger.error("Illegal mix of CSF default export and storiesOf calls in a single file: ".concat(proto.i));
        }
      }
      var baseFilename = m && m.id ? "".concat(m.id) : (_this.lastFileName++).toString();
      var fileName = baseFilename;
      var i = 1;
      while (_this.facade.csfExports[fileName] && Object.keys(_this.facade.csfExports[fileName]).length > 0) {
        i += 1;
        fileName = "".concat(baseFilename, "-").concat(i);
      }
      if (m && m.hot && m.hot.accept) {
        m.hot.accept();
        m.hot.dispose(function() {
          _this.facade.clearFilenameExports(fileName);
          setTimeout(function() {
            var _this$onImportFnChang;
            (_this$onImportFnChang = _this.onImportFnChanged) === null || _this$onImportFnChang === void 0 ? void 0 : _this$onImportFnChang.call(_this, {
              importFn: _this.importFn.bind(_this)
            });
          }, 0);
        });
      }
      var hasAdded = false;
      var api2 = {
        kind: kind.toString(),
        add: function add() {
          return api2;
        },
        addDecorator: function addDecorator3() {
          return api2;
        },
        addLoader: function addLoader2() {
          return api2;
        },
        addParameters: function addParameters3() {
          return api2;
        }
      };
      Object.keys(_this.addons).forEach(function(name2) {
        var addon = _this.addons[name2];
        api2[name2] = function() {
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          addon.apply(api2, args);
          return api2;
        };
      });
      var meta = {
        id: (0, import_csf8.sanitize)(kind),
        title: kind,
        decorators: [],
        loaders: [],
        parameters: {}
      };
      _this.facade.csfExports[fileName] = {
        default: meta
      };
      var counter = 0;
      api2.add = function(storyName, storyFn) {
        var parameters = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
        hasAdded = true;
        if (typeof storyName !== "string") {
          throw new Error('Invalid or missing storyName provided for a "'.concat(kind, '" story.'));
        }
        if (!storyFn || Array.isArray(storyFn) || invalidStoryTypes.has(_typeof3(storyFn))) {
          throw new Error('Cannot load story "'.concat(storyName, '" in "').concat(kind, '" due to invalid format. Storybook expected a function/object but received ').concat(_typeof3(storyFn), " instead."));
        }
        var decorators = parameters.decorators, loaders = parameters.loaders, component = parameters.component, args = parameters.args, argTypes = parameters.argTypes, storyParameters = _objectWithoutProperties7(parameters, _excluded22);
        var storyId = parameters.__id || (0, import_csf8.toId)(kind, storyName);
        var csfExports = _this.facade.csfExports[fileName];
        csfExports["story".concat(counter)] = {
          name: storyName,
          parameters: Object.assign({
            fileName,
            __id: storyId
          }, storyParameters),
          decorators,
          loaders,
          args,
          argTypes,
          component,
          render: storyFn
        };
        counter += 1;
        _this.facade.stories[storyId] = {
          id: storyId,
          title: csfExports.default.title,
          name: storyName,
          importPath: fileName
        };
        return api2;
      };
      api2.addDecorator = function(decorator) {
        if (hasAdded)
          throw new Error("You cannot add a decorator after the first story for a kind.\nRead more here: https://github.com/storybookjs/storybook/blob/master/MIGRATION.md#can-no-longer-add-decoratorsparameters-after-stories");
        meta.decorators.push(decorator);
        return api2;
      };
      api2.addLoader = function(loader) {
        if (hasAdded)
          throw new Error("You cannot add a loader after the first story for a kind.");
        meta.loaders.push(loader);
        return api2;
      };
      api2.addParameters = function(_ref32) {
        var component = _ref32.component, args = _ref32.args, argTypes = _ref32.argTypes, parameters = _objectWithoutProperties7(_ref32, _excluded32);
        if (hasAdded)
          throw new Error("You cannot add parameters after the first story for a kind.\nRead more here: https://github.com/storybookjs/storybook/blob/master/MIGRATION.md#can-no-longer-add-decoratorsparameters-after-stories");
        meta.parameters = combineParameters(meta.parameters, parameters);
        if (component)
          meta.component = component;
        if (args)
          meta.args = Object.assign({}, meta.args, args);
        if (argTypes)
          meta.argTypes = Object.assign({}, meta.argTypes, argTypes);
        return api2;
      };
      return api2;
    };
    this.getStorybook = function() {
      var stories = _this.storyStore.storyIndex.stories;
      var kinds = {};
      Object.entries(stories).forEach(function(_ref42) {
        var _ref52 = _slicedToArray10(_ref42, 2), storyId = _ref52[0], _ref5$ = _ref52[1], title = _ref5$.title, name2 = _ref5$.name, importPath = _ref5$.importPath;
        if (!kinds[title]) {
          kinds[title] = {
            kind: title,
            fileName: importPath,
            stories: []
          };
        }
        var _this$storyStore$from = _this.storyStore.fromId(storyId), storyFn = _this$storyStore$from.storyFn;
        kinds[title].stories.push({
          name: name2,
          render: storyFn
        });
      });
      return Object.values(kinds);
    };
    this.raw = function() {
      return _this.storyStore.raw();
    };
    this.facade = new StoryStoreFacade();
    this.addons = {};
    this.storyStore = storyStore;
    singleton = this;
  }
  _createClass8(ClientApi2, [{
    key: "importFn",
    value: function importFn(path) {
      return this.facade.importFn(path);
    }
  }, {
    key: "getStoryIndex",
    value: function getStoryIndex() {
      if (!this.storyStore) {
        throw new Error("Cannot get story index before setting storyStore");
      }
      return this.facade.getStoryIndex(this.storyStore);
    }
  }, {
    key: "_storyStore",
    get: function get2() {
      return this.storyStore;
    }
  }]);
  return ClientApi2;
}();

// .yarn/__virtual__/@storybook-client-api-virtual-11b070aabf/0/cache/@storybook-client-api-npm-6.5.13-9e2abd4d1f-b0af25786b.zip/node_modules/@storybook/client-api/dist/esm/queryparams.js
var import_es_regexp_exec20 = __toESM(require_es_regexp_exec());
var import_global7 = __toESM(require_window());
var import_qs = __toESM(require_lib());
var document = import_global7.default.document;

// .yarn/__virtual__/@storybook-core-client-virtual-0b8a7627b1/0/cache/@storybook-core-client-npm-6.5.13-17eb95de25-c4350b1b57.zip/node_modules/@storybook/core-client/dist/esm/preview/index.js
var import_csf9 = __toESM(require_dist());

// .yarn/__virtual__/@storybook-core-client-virtual-0b8a7627b1/0/cache/@storybook-core-client-npm-6.5.13-17eb95de25-c4350b1b57.zip/node_modules/@storybook/core-client/dist/esm/preview/start.js
var import_es_string_iterator26 = __toESM(require_es_string_iterator());
var import_es_array_iterator25 = __toESM(require_es_array_iterator());
var import_es_regexp_exec28 = __toESM(require_es_regexp_exec());
var import_global16 = __toESM(require_window());
var import_util_deprecate7 = __toESM(require_browser());

// .yarn/__virtual__/@storybook-preview-web-virtual-00d7944391/0/cache/@storybook-preview-web-npm-6.5.13-5c97598fdf-d66d29667a.zip/node_modules/@storybook/preview-web/dist/esm/Preview.js
var import_es_regexp_exec21 = __toESM(require_es_regexp_exec());
var import_runtime4 = __toESM(require_runtime());
var import_es_array_iterator18 = __toESM(require_es_array_iterator());
var import_es_string_iterator18 = __toESM(require_es_string_iterator());
var import_global9 = __toESM(require_window());
var import_synchronous_promise3 = __toESM(require_synchronous_promise());

// .yarn/__virtual__/@storybook-preview-web-virtual-00d7944391/0/cache/@storybook-preview-web-npm-6.5.13-5c97598fdf-d66d29667a.zip/node_modules/@storybook/preview-web/dist/esm/StoryRender.js
var import_runtime3 = __toESM(require_runtime());
var import_global8 = __toESM(require_window());
function asyncGeneratorStep3(gen, resolve, reject, _next, _throw, key2, arg) {
  try {
    var info = gen[key2](arg);
    var value2 = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value2);
  } else {
    Promise.resolve(value2).then(_next, _throw);
  }
}
function _asyncToGenerator3(fn) {
  return function() {
    var self = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value2) {
        asyncGeneratorStep3(gen, resolve, reject, _next, _throw, "next", value2);
      }
      function _throw(err) {
        asyncGeneratorStep3(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}
function _classCallCheck9(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties9(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass9(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties9(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties9(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
var AbortController = import_global8.default.AbortController;
function createController() {
  if (AbortController)
    return new AbortController();
  return {
    signal: {
      aborted: false
    },
    abort: function abort() {
      this.signal.aborted = true;
    }
  };
}
var PREPARE_ABORTED = new Error("prepareAborted");
var StoryRender = function() {
  function StoryRender2(channel, store, renderToScreen, callbacks, id, viewMode, story) {
    _classCallCheck9(this, StoryRender2);
    this.channel = channel;
    this.store = store;
    this.renderToScreen = renderToScreen;
    this.callbacks = callbacks;
    this.id = id;
    this.viewMode = viewMode;
    this.story = void 0;
    this.phase = void 0;
    this.abortController = void 0;
    this.canvasElement = void 0;
    this.notYetRendered = true;
    this.disableKeyListeners = false;
    this.abortController = createController();
    if (story) {
      this.story = story;
      this.phase = "preparing";
    }
  }
  _createClass9(StoryRender2, [{
    key: "runPhase",
    value: function() {
      var _runPhase = _asyncToGenerator3(regeneratorRuntime.mark(function _callee(signal, phase, phaseFn) {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                this.phase = phase;
                this.channel.emit(STORY_RENDER_PHASE_CHANGED, {
                  newPhase: this.phase,
                  storyId: this.id
                });
                if (!phaseFn) {
                  _context.next = 5;
                  break;
                }
                _context.next = 5;
                return phaseFn();
              case 5:
                if (signal.aborted) {
                  this.phase = "aborted";
                  this.channel.emit(STORY_RENDER_PHASE_CHANGED, {
                    newPhase: this.phase,
                    storyId: this.id
                  });
                }
              case 6:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
      function runPhase(_x, _x2, _x3) {
        return _runPhase.apply(this, arguments);
      }
      return runPhase;
    }()
  }, {
    key: "prepare",
    value: function() {
      var _prepare = _asyncToGenerator3(regeneratorRuntime.mark(function _callee3() {
        var _this = this;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this.runPhase(this.abortController.signal, "preparing", _asyncToGenerator3(regeneratorRuntime.mark(function _callee2() {
                  return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                      switch (_context2.prev = _context2.next) {
                        case 0:
                          _context2.next = 2;
                          return _this.store.loadStory({
                            storyId: _this.id
                          });
                        case 2:
                          _this.story = _context2.sent;
                        case 3:
                        case "end":
                          return _context2.stop();
                      }
                    }
                  }, _callee2);
                })));
              case 2:
                if (!this.abortController.signal.aborted) {
                  _context3.next = 5;
                  break;
                }
                this.store.cleanupStory(this.story);
                throw PREPARE_ABORTED;
              case 5:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));
      function prepare() {
        return _prepare.apply(this, arguments);
      }
      return prepare;
    }()
  }, {
    key: "isEqual",
    value: function isEqual(other) {
      return other && this.id === other.id && this.story && this.story === other.story;
    }
  }, {
    key: "isPreparing",
    value: function isPreparing() {
      return ["preparing"].includes(this.phase);
    }
  }, {
    key: "isPending",
    value: function isPending() {
      return ["rendering", "playing"].includes(this.phase);
    }
  }, {
    key: "context",
    value: function context() {
      return this.store.getStoryContext(this.story);
    }
  }, {
    key: "renderToElement",
    value: function() {
      var _renderToElement = _asyncToGenerator3(regeneratorRuntime.mark(function _callee4(canvasElement) {
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                this.canvasElement = canvasElement;
                return _context4.abrupt("return", this.render({
                  initial: true,
                  forceRemount: true
                }));
              case 2:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));
      function renderToElement(_x4) {
        return _renderToElement.apply(this, arguments);
      }
      return renderToElement;
    }()
  }, {
    key: "render",
    value: function() {
      var _render = _asyncToGenerator3(regeneratorRuntime.mark(function _callee9() {
        var _this2 = this;
        var _ref22, _ref2$initial, initial, _ref2$forceRemount, forceRemount, _this$story, id, componentId, title, name2, applyLoaders, unboundStoryFn, playFunction, abortSignal, loadedContext, renderStoryContext, _renderContext, _args9 = arguments;
        return regeneratorRuntime.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _ref22 = _args9.length > 0 && _args9[0] !== void 0 ? _args9[0] : {}, _ref2$initial = _ref22.initial, initial = _ref2$initial === void 0 ? false : _ref2$initial, _ref2$forceRemount = _ref22.forceRemount, forceRemount = _ref2$forceRemount === void 0 ? false : _ref2$forceRemount;
                if (this.story) {
                  _context9.next = 3;
                  break;
                }
                throw new Error("cannot render when not prepared");
              case 3:
                _this$story = this.story, id = _this$story.id, componentId = _this$story.componentId, title = _this$story.title, name2 = _this$story.name, applyLoaders = _this$story.applyLoaders, unboundStoryFn = _this$story.unboundStoryFn, playFunction = _this$story.playFunction;
                if (forceRemount && !initial) {
                  this.cancelRender();
                  this.abortController = createController();
                }
                abortSignal = this.abortController.signal;
                _context9.prev = 6;
                _context9.next = 9;
                return this.runPhase(abortSignal, "loading", _asyncToGenerator3(regeneratorRuntime.mark(function _callee5() {
                  return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                      switch (_context5.prev = _context5.next) {
                        case 0:
                          _context5.next = 2;
                          return applyLoaders(Object.assign({}, _this2.context(), {
                            viewMode: _this2.viewMode
                          }));
                        case 2:
                          loadedContext = _context5.sent;
                        case 3:
                        case "end":
                          return _context5.stop();
                      }
                    }
                  }, _callee5);
                })));
              case 9:
                if (!abortSignal.aborted) {
                  _context9.next = 11;
                  break;
                }
                return _context9.abrupt("return");
              case 11:
                renderStoryContext = Object.assign({}, loadedContext, this.context(), {
                  abortSignal,
                  canvasElement: this.canvasElement
                });
                _renderContext = Object.assign({
                  componentId,
                  title,
                  kind: title,
                  id,
                  name: name2,
                  story: name2
                }, this.callbacks, {
                  forceRemount: forceRemount || this.notYetRendered,
                  storyContext: renderStoryContext,
                  storyFn: function storyFn() {
                    return unboundStoryFn(renderStoryContext);
                  },
                  unboundStoryFn
                });
                _context9.next = 15;
                return this.runPhase(abortSignal, "rendering", _asyncToGenerator3(regeneratorRuntime.mark(function _callee6() {
                  return regeneratorRuntime.wrap(function _callee6$(_context6) {
                    while (1) {
                      switch (_context6.prev = _context6.next) {
                        case 0:
                          return _context6.abrupt("return", _this2.renderToScreen(_renderContext, _this2.canvasElement));
                        case 1:
                        case "end":
                          return _context6.stop();
                      }
                    }
                  }, _callee6);
                })));
              case 15:
                this.notYetRendered = false;
                if (!abortSignal.aborted) {
                  _context9.next = 18;
                  break;
                }
                return _context9.abrupt("return");
              case 18:
                if (!(forceRemount && playFunction)) {
                  _context9.next = 27;
                  break;
                }
                this.disableKeyListeners = true;
                _context9.next = 22;
                return this.runPhase(abortSignal, "playing", _asyncToGenerator3(regeneratorRuntime.mark(function _callee7() {
                  return regeneratorRuntime.wrap(function _callee7$(_context7) {
                    while (1) {
                      switch (_context7.prev = _context7.next) {
                        case 0:
                          return _context7.abrupt("return", playFunction(_renderContext.storyContext));
                        case 1:
                        case "end":
                          return _context7.stop();
                      }
                    }
                  }, _callee7);
                })));
              case 22:
                _context9.next = 24;
                return this.runPhase(abortSignal, "played");
              case 24:
                this.disableKeyListeners = false;
                if (!abortSignal.aborted) {
                  _context9.next = 27;
                  break;
                }
                return _context9.abrupt("return");
              case 27:
                _context9.next = 29;
                return this.runPhase(abortSignal, "completed", _asyncToGenerator3(regeneratorRuntime.mark(function _callee8() {
                  return regeneratorRuntime.wrap(function _callee8$(_context8) {
                    while (1) {
                      switch (_context8.prev = _context8.next) {
                        case 0:
                          return _context8.abrupt("return", _this2.channel.emit(STORY_RENDERED, id));
                        case 1:
                        case "end":
                          return _context8.stop();
                      }
                    }
                  }, _callee8);
                })));
              case 29:
                _context9.next = 34;
                break;
              case 31:
                _context9.prev = 31;
                _context9.t0 = _context9["catch"](6);
                this.callbacks.showException(_context9.t0);
              case 34:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9, this, [[6, 31]]);
      }));
      function render3() {
        return _render.apply(this, arguments);
      }
      return render3;
    }()
  }, {
    key: "rerender",
    value: function() {
      var _rerender = _asyncToGenerator3(regeneratorRuntime.mark(function _callee10() {
        return regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                return _context10.abrupt("return", this.render());
              case 1:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));
      function rerender() {
        return _rerender.apply(this, arguments);
      }
      return rerender;
    }()
  }, {
    key: "remount",
    value: function() {
      var _remount = _asyncToGenerator3(regeneratorRuntime.mark(function _callee11() {
        return regeneratorRuntime.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                return _context11.abrupt("return", this.render({
                  forceRemount: true
                }));
              case 1:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11, this);
      }));
      function remount() {
        return _remount.apply(this, arguments);
      }
      return remount;
    }()
  }, {
    key: "cancelRender",
    value: function cancelRender() {
      this.abortController.abort();
    }
  }, {
    key: "teardown",
    value: function() {
      var _teardown = _asyncToGenerator3(regeneratorRuntime.mark(function _callee12() {
        var options2, i, _args12 = arguments;
        return regeneratorRuntime.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                options2 = _args12.length > 0 && _args12[0] !== void 0 ? _args12[0] : {};
                this.cancelRender();
                if (this.story)
                  this.store.cleanupStory(this.story);
                i = 0;
              case 4:
                if (!(i < 3)) {
                  _context12.next = 12;
                  break;
                }
                if (this.isPending()) {
                  _context12.next = 7;
                  break;
                }
                return _context12.abrupt("return");
              case 7:
                _context12.next = 9;
                return new Promise(function(resolve) {
                  return setTimeout(resolve, 0);
                });
              case 9:
                i += 1;
                _context12.next = 4;
                break;
              case 12:
                import_global8.default.window.location.reload();
                _context12.next = 15;
                return new Promise(function() {
                });
              case 15:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee12, this);
      }));
      function teardown() {
        return _teardown.apply(this, arguments);
      }
      return teardown;
    }()
  }]);
  return StoryRender2;
}();
StoryRender.displayName = "StoryRender";

// .yarn/__virtual__/@storybook-preview-web-virtual-00d7944391/0/cache/@storybook-preview-web-npm-6.5.13-5c97598fdf-d66d29667a.zip/node_modules/@storybook/preview-web/dist/esm/Preview.js
var _templateObject10;
var _templateObject23;
function _toConsumableArray10(arr) {
  return _arrayWithoutHoles10(arr) || _iterableToArray10(arr) || _unsupportedIterableToArray16(arr) || _nonIterableSpread10();
}
function _nonIterableSpread10() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray16(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray16(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray16(o, minLen);
}
function _iterableToArray10(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles10(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray16(arr);
}
function _arrayLikeToArray16(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function asyncGeneratorStep4(gen, resolve, reject, _next, _throw, key2, arg) {
  try {
    var info = gen[key2](arg);
    var value2 = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value2);
  } else {
    Promise.resolve(value2).then(_next, _throw);
  }
}
function _asyncToGenerator4(fn) {
  return function() {
    var self = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value2) {
        asyncGeneratorStep4(gen, resolve, reject, _next, _throw, "next", value2);
      }
      function _throw(err) {
        asyncGeneratorStep4(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}
function _taggedTemplateLiteral10(strings, raw2) {
  if (!raw2) {
    raw2 = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw2) } }));
}
function _classCallCheck10(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties10(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass10(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties10(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties10(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
var fetch = import_global9.default.fetch;
var STORY_INDEX_PATH = "./stories.json";
var Preview = function() {
  function Preview2() {
    var _global$FEATURES;
    _classCallCheck10(this, Preview2);
    this.channel = void 0;
    this.serverChannel = void 0;
    this.storyStore = void 0;
    this.getStoryIndex = void 0;
    this.importFn = void 0;
    this.renderToDOM = void 0;
    this.storyRenders = [];
    this.previewEntryError = void 0;
    this.channel = addons.getChannel();
    if ((_global$FEATURES = import_global9.default.FEATURES) !== null && _global$FEATURES !== void 0 && _global$FEATURES.storyStoreV7 && addons.hasServerChannel()) {
      this.serverChannel = addons.getServerChannel();
    }
    this.storyStore = new StoryStore();
  }
  _createClass10(Preview2, [{
    key: "initialize",
    value: function initialize(_ref) {
      var _this = this;
      var getStoryIndex = _ref.getStoryIndex, importFn = _ref.importFn, getProjectAnnotations = _ref.getProjectAnnotations;
      this.getStoryIndex = getStoryIndex;
      this.importFn = importFn;
      this.setupListeners();
      return this.getProjectAnnotationsOrRenderError(getProjectAnnotations).then(function(projectAnnotations) {
        return _this.initializeWithProjectAnnotations(projectAnnotations);
      });
    }
  }, {
    key: "setupListeners",
    value: function setupListeners() {
      var _this$serverChannel;
      (_this$serverChannel = this.serverChannel) === null || _this$serverChannel === void 0 ? void 0 : _this$serverChannel.on(STORY_INDEX_INVALIDATED, this.onStoryIndexChanged.bind(this));
      this.channel.on(UPDATE_GLOBALS, this.onUpdateGlobals.bind(this));
      this.channel.on(UPDATE_STORY_ARGS, this.onUpdateArgs.bind(this));
      this.channel.on(RESET_STORY_ARGS, this.onResetArgs.bind(this));
      this.channel.on(FORCE_RE_RENDER, this.onForceReRender.bind(this));
      this.channel.on(FORCE_REMOUNT, this.onForceRemount.bind(this));
    }
  }, {
    key: "getProjectAnnotationsOrRenderError",
    value: function getProjectAnnotationsOrRenderError(getProjectAnnotations) {
      var _this2 = this;
      return import_synchronous_promise3.SynchronousPromise.resolve().then(getProjectAnnotations).then(function(projectAnnotations) {
        _this2.renderToDOM = projectAnnotations.renderToDOM;
        if (!_this2.renderToDOM) {
          throw new Error(esm_default(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral10(["\n            Expected your framework's preset to export a `renderToDOM` field.\n\n            Perhaps it needs to be upgraded for Storybook 6.4?\n\n            More info: https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#mainjs-framework-field          \n          "], ["\n            Expected your framework's preset to export a \\`renderToDOM\\` field.\n\n            Perhaps it needs to be upgraded for Storybook 6.4?\n\n            More info: https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#mainjs-framework-field          \n          "]))));
        }
        return projectAnnotations;
      }).catch(function(err) {
        _this2.renderPreviewEntryError("Error reading preview.js:", err);
        throw err;
      });
    }
  }, {
    key: "initializeWithProjectAnnotations",
    value: function initializeWithProjectAnnotations(projectAnnotations) {
      var _global$FEATURES2, _this3 = this;
      this.storyStore.setProjectAnnotations(projectAnnotations);
      this.setInitialGlobals();
      var storyIndexPromise;
      if ((_global$FEATURES2 = import_global9.default.FEATURES) !== null && _global$FEATURES2 !== void 0 && _global$FEATURES2.storyStoreV7) {
        storyIndexPromise = this.getStoryIndexFromServer();
      } else {
        if (!this.getStoryIndex) {
          throw new Error("No `getStoryIndex` passed defined in v6 mode");
        }
        storyIndexPromise = import_synchronous_promise3.SynchronousPromise.resolve().then(this.getStoryIndex);
      }
      return storyIndexPromise.then(function(storyIndex) {
        return _this3.initializeWithStoryIndex(storyIndex);
      }).catch(function(err) {
        _this3.renderPreviewEntryError("Error loading story index:", err);
        throw err;
      });
    }
  }, {
    key: "setInitialGlobals",
    value: function() {
      var _setInitialGlobals = _asyncToGenerator4(regeneratorRuntime.mark(function _callee() {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                this.emitGlobals();
              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
      function setInitialGlobals() {
        return _setInitialGlobals.apply(this, arguments);
      }
      return setInitialGlobals;
    }()
  }, {
    key: "emitGlobals",
    value: function emitGlobals() {
      this.channel.emit(SET_GLOBALS, {
        globals: this.storyStore.globals.get() || {},
        globalTypes: this.storyStore.projectAnnotations.globalTypes || {}
      });
    }
  }, {
    key: "getStoryIndexFromServer",
    value: function() {
      var _getStoryIndexFromServer = _asyncToGenerator4(regeneratorRuntime.mark(function _callee2() {
        var result2;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return fetch(STORY_INDEX_PATH);
              case 2:
                result2 = _context2.sent;
                if (!(result2.status === 200)) {
                  _context2.next = 5;
                  break;
                }
                return _context2.abrupt("return", result2.json());
              case 5:
                _context2.t0 = Error;
                _context2.next = 8;
                return result2.text();
              case 8:
                _context2.t1 = _context2.sent;
                throw new _context2.t0(_context2.t1);
              case 10:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));
      function getStoryIndexFromServer() {
        return _getStoryIndexFromServer.apply(this, arguments);
      }
      return getStoryIndexFromServer;
    }()
  }, {
    key: "initializeWithStoryIndex",
    value: function initializeWithStoryIndex(storyIndex) {
      var _global$FEATURES3;
      return this.storyStore.initialize({
        storyIndex,
        importFn: this.importFn,
        cache: !((_global$FEATURES3 = import_global9.default.FEATURES) !== null && _global$FEATURES3 !== void 0 && _global$FEATURES3.storyStoreV7)
      });
    }
  }, {
    key: "onGetProjectAnnotationsChanged",
    value: function() {
      var _onGetProjectAnnotationsChanged = _asyncToGenerator4(regeneratorRuntime.mark(function _callee3(_ref22) {
        var getProjectAnnotations, projectAnnotations;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                getProjectAnnotations = _ref22.getProjectAnnotations;
                delete this.previewEntryError;
                _context3.next = 4;
                return this.getProjectAnnotationsOrRenderError(getProjectAnnotations);
              case 4:
                projectAnnotations = _context3.sent;
                if (this.storyStore.projectAnnotations) {
                  _context3.next = 9;
                  break;
                }
                _context3.next = 8;
                return this.initializeWithProjectAnnotations(projectAnnotations);
              case 8:
                return _context3.abrupt("return");
              case 9:
                _context3.next = 11;
                return this.storyStore.setProjectAnnotations(projectAnnotations);
              case 11:
                this.emitGlobals();
              case 12:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));
      function onGetProjectAnnotationsChanged(_x) {
        return _onGetProjectAnnotationsChanged.apply(this, arguments);
      }
      return onGetProjectAnnotationsChanged;
    }()
  }, {
    key: "onStoryIndexChanged",
    value: function() {
      var _onStoryIndexChanged = _asyncToGenerator4(regeneratorRuntime.mark(function _callee4() {
        var storyIndex;
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                delete this.previewEntryError;
                if (this.storyStore.projectAnnotations) {
                  _context4.next = 3;
                  break;
                }
                return _context4.abrupt("return");
              case 3:
                _context4.prev = 3;
                _context4.next = 6;
                return this.getStoryIndexFromServer();
              case 6:
                storyIndex = _context4.sent;
                if (this.storyStore.storyIndex) {
                  _context4.next = 10;
                  break;
                }
                _context4.next = 10;
                return this.initializeWithStoryIndex(storyIndex);
              case 10:
                _context4.next = 12;
                return this.onStoriesChanged({
                  storyIndex
                });
              case 12:
                _context4.next = 18;
                break;
              case 14:
                _context4.prev = 14;
                _context4.t0 = _context4["catch"](3);
                this.renderPreviewEntryError("Error loading story index:", _context4.t0);
                throw _context4.t0;
              case 18:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this, [[3, 14]]);
      }));
      function onStoryIndexChanged() {
        return _onStoryIndexChanged.apply(this, arguments);
      }
      return onStoryIndexChanged;
    }()
  }, {
    key: "onStoriesChanged",
    value: function() {
      var _onStoriesChanged = _asyncToGenerator4(regeneratorRuntime.mark(function _callee5(_ref32) {
        var importFn, storyIndex;
        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                importFn = _ref32.importFn, storyIndex = _ref32.storyIndex;
                _context5.next = 3;
                return this.storyStore.onStoriesChanged({
                  importFn,
                  storyIndex
                });
              case 3:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));
      function onStoriesChanged(_x2) {
        return _onStoriesChanged.apply(this, arguments);
      }
      return onStoriesChanged;
    }()
  }, {
    key: "onUpdateGlobals",
    value: function() {
      var _onUpdateGlobals = _asyncToGenerator4(regeneratorRuntime.mark(function _callee6(_ref42) {
        var globals;
        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                globals = _ref42.globals;
                this.storyStore.globals.update(globals);
                _context6.next = 4;
                return Promise.all(this.storyRenders.map(function(r) {
                  return r.rerender();
                }));
              case 4:
                this.channel.emit(GLOBALS_UPDATED, {
                  globals: this.storyStore.globals.get(),
                  initialGlobals: this.storyStore.globals.initialGlobals
                });
              case 5:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));
      function onUpdateGlobals(_x3) {
        return _onUpdateGlobals.apply(this, arguments);
      }
      return onUpdateGlobals;
    }()
  }, {
    key: "onUpdateArgs",
    value: function() {
      var _onUpdateArgs = _asyncToGenerator4(regeneratorRuntime.mark(function _callee7(_ref52) {
        var storyId, updatedArgs;
        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                storyId = _ref52.storyId, updatedArgs = _ref52.updatedArgs;
                this.storyStore.args.update(storyId, updatedArgs);
                _context7.next = 4;
                return Promise.all(this.storyRenders.filter(function(r) {
                  return r.id === storyId;
                }).map(function(r) {
                  return r.rerender();
                }));
              case 4:
                this.channel.emit(STORY_ARGS_UPDATED, {
                  storyId,
                  args: this.storyStore.args.get(storyId)
                });
              case 5:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));
      function onUpdateArgs(_x4) {
        return _onUpdateArgs.apply(this, arguments);
      }
      return onUpdateArgs;
    }()
  }, {
    key: "onResetArgs",
    value: function() {
      var _onResetArgs = _asyncToGenerator4(regeneratorRuntime.mark(function _callee8(_ref6) {
        var storyId, argNames, render3, story, argNamesToReset, updatedArgs;
        return regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                storyId = _ref6.storyId, argNames = _ref6.argNames;
                render3 = this.storyRenders.find(function(r) {
                  return r.id === storyId;
                });
                _context8.t0 = render3 === null || render3 === void 0 ? void 0 : render3.story;
                if (_context8.t0) {
                  _context8.next = 7;
                  break;
                }
                _context8.next = 6;
                return this.storyStore.loadStory({
                  storyId
                });
              case 6:
                _context8.t0 = _context8.sent;
              case 7:
                story = _context8.t0;
                argNamesToReset = argNames || _toConsumableArray10(new Set([].concat(_toConsumableArray10(Object.keys(story.initialArgs)), _toConsumableArray10(Object.keys(this.storyStore.args.get(storyId))))));
                updatedArgs = argNamesToReset.reduce(function(acc, argName) {
                  acc[argName] = story.initialArgs[argName];
                  return acc;
                }, {});
                _context8.next = 12;
                return this.onUpdateArgs({
                  storyId,
                  updatedArgs
                });
              case 12:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));
      function onResetArgs(_x5) {
        return _onResetArgs.apply(this, arguments);
      }
      return onResetArgs;
    }()
  }, {
    key: "onForceReRender",
    value: function() {
      var _onForceReRender = _asyncToGenerator4(regeneratorRuntime.mark(function _callee9() {
        return regeneratorRuntime.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.next = 2;
                return Promise.all(this.storyRenders.map(function(r) {
                  return r.rerender();
                }));
              case 2:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));
      function onForceReRender() {
        return _onForceReRender.apply(this, arguments);
      }
      return onForceReRender;
    }()
  }, {
    key: "onForceRemount",
    value: function() {
      var _onForceRemount = _asyncToGenerator4(regeneratorRuntime.mark(function _callee10(_ref7) {
        var storyId;
        return regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                storyId = _ref7.storyId;
                _context10.next = 3;
                return Promise.all(this.storyRenders.filter(function(r) {
                  return r.id === storyId;
                }).map(function(r) {
                  return r.remount();
                }));
              case 3:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));
      function onForceRemount(_x6) {
        return _onForceRemount.apply(this, arguments);
      }
      return onForceRemount;
    }()
  }, {
    key: "renderStoryToElement",
    value: function renderStoryToElement(story, element) {
      var _this4 = this;
      var render3 = new StoryRender(this.channel, this.storyStore, this.renderToDOM, this.inlineStoryCallbacks(story.id), story.id, "docs", story);
      render3.renderToElement(element);
      this.storyRenders.push(render3);
      return _asyncToGenerator4(regeneratorRuntime.mark(function _callee11() {
        return regeneratorRuntime.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                _context11.next = 2;
                return _this4.teardownRender(render3);
              case 2:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11);
      }));
    }
  }, {
    key: "teardownRender",
    value: function() {
      var _teardownRender = _asyncToGenerator4(regeneratorRuntime.mark(function _callee12(render3) {
        var _ref9, viewModeChanged, _args12 = arguments;
        return regeneratorRuntime.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                _ref9 = _args12.length > 1 && _args12[1] !== void 0 ? _args12[1] : {}, viewModeChanged = _ref9.viewModeChanged;
                this.storyRenders = this.storyRenders.filter(function(r) {
                  return r !== render3;
                });
                _context12.next = 4;
                return render3 === null || render3 === void 0 ? void 0 : render3.teardown({
                  viewModeChanged
                });
              case 4:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee12, this);
      }));
      function teardownRender(_x7) {
        return _teardownRender.apply(this, arguments);
      }
      return teardownRender;
    }()
  }, {
    key: "extract",
    value: function() {
      var _extract = _asyncToGenerator4(regeneratorRuntime.mark(function _callee13(options2) {
        var _global$FEATURES4;
        return regeneratorRuntime.wrap(function _callee13$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                if (!this.previewEntryError) {
                  _context13.next = 2;
                  break;
                }
                throw this.previewEntryError;
              case 2:
                if (this.storyStore.projectAnnotations) {
                  _context13.next = 4;
                  break;
                }
                throw new Error(esm_default(_templateObject23 || (_templateObject23 = _taggedTemplateLiteral10(["Failed to initialize Storybook.\n      \n      Do you have an error in your `preview.js`? Check your Storybook's browser console for errors."], ["Failed to initialize Storybook.\n      \n      Do you have an error in your \\`preview.js\\`? Check your Storybook's browser console for errors."]))));
              case 4:
                if (!((_global$FEATURES4 = import_global9.default.FEATURES) !== null && _global$FEATURES4 !== void 0 && _global$FEATURES4.storyStoreV7)) {
                  _context13.next = 7;
                  break;
                }
                _context13.next = 7;
                return this.storyStore.cacheAllCSFFiles();
              case 7:
                return _context13.abrupt("return", this.storyStore.extract(options2));
              case 8:
              case "end":
                return _context13.stop();
            }
          }
        }, _callee13, this);
      }));
      function extract(_x8) {
        return _extract.apply(this, arguments);
      }
      return extract;
    }()
  }, {
    key: "inlineStoryCallbacks",
    value: function inlineStoryCallbacks(storyId) {
      return {
        showMain: function showMain() {
        },
        showError: function showError(err) {
          return logger.error("Error rendering docs story (".concat(storyId, ")"), err);
        },
        showException: function showException(err) {
          return logger.error("Error rendering docs story (".concat(storyId, ")"), err);
        }
      };
    }
  }, {
    key: "renderPreviewEntryError",
    value: function renderPreviewEntryError(reason, err) {
      this.previewEntryError = err;
      logger.error(reason);
      logger.error(err);
      this.channel.emit(CONFIG_ERROR, err);
    }
  }]);
  return Preview2;
}();

// .yarn/__virtual__/@storybook-preview-web-virtual-00d7944391/0/cache/@storybook-preview-web-npm-6.5.13-5c97598fdf-d66d29667a.zip/node_modules/@storybook/preview-web/dist/esm/PreviewWeb.js
var import_runtime6 = __toESM(require_runtime());
var import_es_regexp_exec25 = __toESM(require_es_regexp_exec());
var import_es_array_iterator22 = __toESM(require_es_array_iterator());
var import_es_string_iterator22 = __toESM(require_es_string_iterator());
var import_util_deprecate6 = __toESM(require_browser());
var import_global13 = __toESM(require_window());

// .yarn/__virtual__/@storybook-preview-web-virtual-00d7944391/0/cache/@storybook-preview-web-npm-6.5.13-5c97598fdf-d66d29667a.zip/node_modules/@storybook/preview-web/dist/esm/UrlStore.js
var import_es_array_iterator20 = __toESM(require_es_array_iterator());
var import_es_string_iterator20 = __toESM(require_es_string_iterator());
var import_es_regexp_exec23 = __toESM(require_es_regexp_exec());
var import_global10 = __toESM(require_window());
var import_qs3 = __toESM(require_lib());
var import_util_deprecate5 = __toESM(require_browser());

// .yarn/__virtual__/@storybook-preview-web-virtual-00d7944391/0/cache/@storybook-preview-web-npm-6.5.13-5c97598fdf-d66d29667a.zip/node_modules/@storybook/preview-web/dist/esm/parseArgsParam.js
var import_es_array_iterator19 = __toESM(require_es_array_iterator());
var import_es_string_iterator19 = __toESM(require_es_string_iterator());
var import_es_regexp_exec22 = __toESM(require_es_regexp_exec());
var import_qs2 = __toESM(require_lib());
var import_isPlainObject3 = __toESM(require_isPlainObject());
var _templateObject11;
function _taggedTemplateLiteral11(strings, raw2) {
  if (!raw2) {
    raw2 = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw2) } }));
}
function _defineProperty4(obj, key2, value2) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value2, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value2;
  }
  return obj;
}
function _slicedToArray11(arr, i) {
  return _arrayWithHoles12(arr) || _iterableToArrayLimit11(arr, i) || _unsupportedIterableToArray17(arr, i) || _nonIterableRest12();
}
function _nonIterableRest12() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray17(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray17(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray17(o, minLen);
}
function _arrayLikeToArray17(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit11(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles12(arr) {
  if (Array.isArray(arr))
    return arr;
}
var VALIDATION_REGEXP = /^[a-zA-Z0-9 _-]*$/;
var NUMBER_REGEXP = /^-?[0-9]+(\.[0-9]+)?$/;
var HEX_REGEXP = /^#([a-f0-9]{3,4}|[a-f0-9]{6}|[a-f0-9]{8})$/i;
var COLOR_REGEXP = /^(rgba?|hsla?)\(([0-9]{1,3}),\s?([0-9]{1,3})%?,\s?([0-9]{1,3})%?,?\s?([0-9](\.[0-9]{1,2})?)?\)$/i;
var validateArgs = function validateArgs2() {
  var key2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  var value2 = arguments.length > 1 ? arguments[1] : void 0;
  if (key2 === null)
    return false;
  if (key2 === "" || !VALIDATION_REGEXP.test(key2))
    return false;
  if (value2 === null || value2 === void 0)
    return true;
  if (value2 instanceof Date)
    return true;
  if (typeof value2 === "number" || typeof value2 === "boolean")
    return true;
  if (typeof value2 === "string") {
    return VALIDATION_REGEXP.test(value2) || NUMBER_REGEXP.test(value2) || HEX_REGEXP.test(value2) || COLOR_REGEXP.test(value2);
  }
  if (Array.isArray(value2))
    return value2.every(function(v) {
      return validateArgs2(key2, v);
    });
  if ((0, import_isPlainObject3.default)(value2))
    return Object.entries(value2).every(function(_ref) {
      var _ref22 = _slicedToArray11(_ref, 2), k = _ref22[0], v = _ref22[1];
      return validateArgs2(k, v);
    });
  return false;
};
var QS_OPTIONS = {
  delimiter: ";",
  allowDots: true,
  allowSparse: true,
  decoder: function(_decoder) {
    function decoder(_x, _x2, _x3, _x4) {
      return _decoder.apply(this, arguments);
    }
    decoder.toString = function() {
      return _decoder.toString();
    };
    return decoder;
  }(function(str, defaultDecoder, charset, type) {
    if (type === "value" && str.startsWith("!")) {
      if (str === "!undefined")
        return void 0;
      if (str === "!null")
        return null;
      if (str.startsWith("!date(") && str.endsWith(")"))
        return new Date(str.slice(6, -1));
      if (str.startsWith("!hex(") && str.endsWith(")"))
        return "#".concat(str.slice(5, -1));
      var color = str.slice(1).match(COLOR_REGEXP);
      if (color) {
        if (str.startsWith("!rgba"))
          return "".concat(color[1], "(").concat(color[2], ", ").concat(color[3], ", ").concat(color[4], ", ").concat(color[5], ")");
        if (str.startsWith("!hsla"))
          return "".concat(color[1], "(").concat(color[2], ", ").concat(color[3], "%, ").concat(color[4], "%, ").concat(color[5], ")");
        return str.startsWith("!rgb") ? "".concat(color[1], "(").concat(color[2], ", ").concat(color[3], ", ").concat(color[4], ")") : "".concat(color[1], "(").concat(color[2], ", ").concat(color[3], "%, ").concat(color[4], "%)");
      }
    }
    if (type === "value" && NUMBER_REGEXP.test(str))
      return Number(str);
    return defaultDecoder(str, defaultDecoder, charset);
  })
};
var parseArgsParam = function parseArgsParam2(argsString) {
  var parts = argsString.split(";").map(function(part) {
    return part.replace("=", "~").replace(":", "=");
  });
  return Object.entries(import_qs2.default.parse(parts.join(";"), QS_OPTIONS)).reduce(function(acc, _ref32) {
    var _ref42 = _slicedToArray11(_ref32, 2), key2 = _ref42[0], value2 = _ref42[1];
    if (validateArgs(key2, value2))
      return Object.assign(acc, _defineProperty4({}, key2, value2));
    once.warn(esm_default(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral11(["\n      Omitted potentially unsafe URL args.\n\n      More info: https://storybook.js.org/docs/react/writing-stories/args#setting-args-through-the-url\n    "]))));
    return acc;
  }, {});
};

// .yarn/__virtual__/@storybook-preview-web-virtual-00d7944391/0/cache/@storybook-preview-web-npm-6.5.13-5c97598fdf-d66d29667a.zip/node_modules/@storybook/preview-web/dist/esm/UrlStore.js
var _excluded8 = ["path", "selectedKind", "selectedStory"];
function _classCallCheck11(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties11(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass11(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties11(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties11(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _typeof4(obj) {
  "@babel/helpers - typeof";
  return _typeof4 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof4(obj);
}
function _objectWithoutProperties8(source2, excluded) {
  if (source2 == null)
    return {};
  var target = _objectWithoutPropertiesLoose8(source2, excluded);
  var key2, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source2);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key2 = sourceSymbolKeys[i];
      if (excluded.indexOf(key2) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source2, key2))
        continue;
      target[key2] = source2[key2];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose8(source2, excluded) {
  if (source2 == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source2);
  var key2, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key2 = sourceKeys[i];
    if (excluded.indexOf(key2) >= 0)
      continue;
    target[key2] = source2[key2];
  }
  return target;
}
var history = import_global10.default.history;
var document2 = import_global10.default.document;
function pathToId(path) {
  var match = (path || "").match(/^\/story\/(.+)/);
  if (!match) {
    throw new Error("Invalid path '".concat(path, "',  must start with '/story/'"));
  }
  return match[1];
}
var getQueryString = function getQueryString2(_ref) {
  var selection = _ref.selection, extraParams = _ref.extraParams;
  var _document$location$se = document2.location.search, search = _document$location$se === void 0 ? "" : _document$location$se;
  var _qs$parse = import_qs3.default.parse(search, {
    ignoreQueryPrefix: true
  }), path = _qs$parse.path, selectedKind = _qs$parse.selectedKind, selectedStory = _qs$parse.selectedStory, rest = _objectWithoutProperties8(_qs$parse, _excluded8);
  return import_qs3.default.stringify(Object.assign({}, rest, extraParams, selection && {
    id: selection.storyId,
    viewMode: selection.viewMode
  }), {
    encode: false,
    addQueryPrefix: true
  });
};
var setPath = function setPath2(selection) {
  if (!selection)
    return;
  var query = getQueryString({
    selection
  });
  var _document$location$ha = document2.location.hash, hash = _document$location$ha === void 0 ? "" : _document$location$ha;
  document2.title = selection.storyId;
  history.replaceState({}, "", "".concat(document2.location.pathname).concat(query).concat(hash));
};
var isObject = function isObject2(val) {
  return val != null && _typeof4(val) === "object" && Array.isArray(val) === false;
};
var getFirstString = function getFirstString2(v) {
  if (typeof v === "string") {
    return v;
  }
  if (Array.isArray(v)) {
    return getFirstString2(v[0]);
  }
  if (isObject(v)) {
    return getFirstString2(Object.values(v));
  }
  return void 0;
};
var deprecatedLegacyQuery = (0, import_util_deprecate5.default)(function() {
  return 0;
}, "URL formats with `selectedKind` and `selectedName` query parameters are deprecated.\nUse `id=$storyId` instead.\nSee https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#new-url-structure");
var getSelectionSpecifierFromPath = function getSelectionSpecifierFromPath2() {
  var query = import_qs3.default.parse(document2.location.search, {
    ignoreQueryPrefix: true
  });
  var args = typeof query.args === "string" ? parseArgsParam(query.args) : void 0;
  var globals = typeof query.globals === "string" ? parseArgsParam(query.globals) : void 0;
  var viewMode = getFirstString(query.viewMode);
  if (typeof viewMode !== "string" || !viewMode.match(/docs|story/)) {
    viewMode = "story";
  }
  var path = getFirstString(query.path);
  var storyId = path ? pathToId(path) : getFirstString(query.id);
  if (storyId) {
    return {
      storySpecifier: storyId,
      args,
      globals,
      viewMode
    };
  }
  var title = getFirstString(query.selectedKind);
  var name2 = getFirstString(query.selectedStory);
  if (title && name2) {
    deprecatedLegacyQuery();
    return {
      storySpecifier: {
        title,
        name: name2
      },
      args,
      globals,
      viewMode
    };
  }
  return null;
};
var UrlStore = function() {
  function UrlStore2() {
    _classCallCheck11(this, UrlStore2);
    this.selectionSpecifier = void 0;
    this.selection = void 0;
    this.selectionSpecifier = getSelectionSpecifierFromPath();
  }
  _createClass11(UrlStore2, [{
    key: "setSelection",
    value: function setSelection(selection) {
      this.selection = selection;
      setPath(this.selection);
    }
  }, {
    key: "setQueryParams",
    value: function setQueryParams(queryParams) {
      var query = getQueryString({
        extraParams: queryParams
      });
      var _document$location$ha2 = document2.location.hash, hash = _document$location$ha2 === void 0 ? "" : _document$location$ha2;
      history.replaceState({}, "", "".concat(document2.location.pathname).concat(query).concat(hash));
    }
  }]);
  return UrlStore2;
}();

// .yarn/__virtual__/@storybook-preview-web-virtual-00d7944391/0/cache/@storybook-preview-web-npm-6.5.13-5c97598fdf-d66d29667a.zip/node_modules/@storybook/preview-web/dist/esm/WebView.js
var import_es_array_iterator21 = __toESM(require_es_array_iterator());
var import_es_string_iterator21 = __toESM(require_es_string_iterator());
var import_es_regexp_exec24 = __toESM(require_es_regexp_exec());
var import_global11 = __toESM(require_window());
var import_ansi_to_html = __toESM(require_ansi_to_html());
var import_qs4 = __toESM(require_lib());
var _templateObject12;
function _slicedToArray12(arr, i) {
  return _arrayWithHoles13(arr) || _iterableToArrayLimit12(arr, i) || _unsupportedIterableToArray18(arr, i) || _nonIterableRest13();
}
function _nonIterableRest13() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray18(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray18(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray18(o, minLen);
}
function _arrayLikeToArray18(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit12(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles13(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _taggedTemplateLiteral12(strings, raw2) {
  if (!raw2) {
    raw2 = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw2) } }));
}
function _classCallCheck12(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties12(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass12(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties12(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties12(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
var document3 = import_global11.default.document;
var PREPARING_DELAY = 100;
var layoutClassMap = {
  centered: "sb-main-centered",
  fullscreen: "sb-main-fullscreen",
  padded: "sb-main-padded"
};
var Mode;
(function(Mode2) {
  Mode2["MAIN"] = "MAIN";
  Mode2["NOPREVIEW"] = "NOPREVIEW";
  Mode2["PREPARING_STORY"] = "PREPARING_STORY";
  Mode2["PREPARING_DOCS"] = "PREPARING_DOCS";
  Mode2["ERROR"] = "ERROR";
})(Mode || (Mode = {}));
var classes = {
  PREPARING_STORY: "sb-show-preparing-story",
  PREPARING_DOCS: "sb-show-preparing-docs",
  MAIN: "sb-show-main",
  NOPREVIEW: "sb-show-nopreview",
  ERROR: "sb-show-errordisplay"
};
var ansiConverter = new import_ansi_to_html.default({
  escapeXML: true
});
var WebView = function() {
  function WebView2() {
    _classCallCheck12(this, WebView2);
    this.currentLayoutClass = void 0;
    this.testing = false;
    this.preparingTimeout = null;
    var _qs$parse = import_qs4.default.parse(document3.location.search, {
      ignoreQueryPrefix: true
    }), __SPECIAL_TEST_PARAMETER__ = _qs$parse.__SPECIAL_TEST_PARAMETER__;
    switch (__SPECIAL_TEST_PARAMETER__) {
      case "preparing-story": {
        this.showPreparingStory();
        this.testing = true;
        break;
      }
      case "preparing-docs": {
        this.showPreparingDocs();
        this.testing = true;
        break;
      }
      default:
    }
  }
  _createClass12(WebView2, [{
    key: "prepareForStory",
    value: function prepareForStory(story) {
      this.showStory();
      this.applyLayout(story.parameters.layout);
      document3.documentElement.scrollTop = 0;
      document3.documentElement.scrollLeft = 0;
      return this.storyRoot();
    }
  }, {
    key: "storyRoot",
    value: function storyRoot() {
      return document3.getElementById("root");
    }
  }, {
    key: "prepareForDocs",
    value: function prepareForDocs() {
      this.showMain();
      this.showDocs();
      this.applyLayout("fullscreen");
      return this.docsRoot();
    }
  }, {
    key: "docsRoot",
    value: function docsRoot() {
      return document3.getElementById("docs-root");
    }
  }, {
    key: "applyLayout",
    value: function applyLayout() {
      var layout = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "padded";
      if (layout === "none") {
        document3.body.classList.remove(this.currentLayoutClass);
        this.currentLayoutClass = null;
        return;
      }
      this.checkIfLayoutExists(layout);
      var layoutClass = layoutClassMap[layout];
      document3.body.classList.remove(this.currentLayoutClass);
      document3.body.classList.add(layoutClass);
      this.currentLayoutClass = layoutClass;
    }
  }, {
    key: "checkIfLayoutExists",
    value: function checkIfLayoutExists(layout) {
      if (!layoutClassMap[layout]) {
        logger.warn(esm_default(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral12(["The desired layout: ", " is not a valid option.\n         The possible options are: ", ", none."])), layout, Object.keys(layoutClassMap).join(", ")));
      }
    }
  }, {
    key: "showMode",
    value: function showMode(mode) {
      clearTimeout(this.preparingTimeout);
      Object.keys(Mode).forEach(function(otherMode) {
        if (otherMode === mode) {
          document3.body.classList.add(classes[otherMode]);
        } else {
          document3.body.classList.remove(classes[otherMode]);
        }
      });
    }
  }, {
    key: "showErrorDisplay",
    value: function showErrorDisplay(_ref) {
      var _ref$message = _ref.message, message = _ref$message === void 0 ? "" : _ref$message, _ref$stack = _ref.stack, stack = _ref$stack === void 0 ? "" : _ref$stack;
      var header = message;
      var detail = stack;
      var parts = message.split("\n");
      if (parts.length > 1) {
        var _parts = _slicedToArray12(parts, 1);
        header = _parts[0];
        detail = parts.slice(1).join("\n");
      }
      document3.getElementById("error-message").innerHTML = ansiConverter.toHtml(header);
      document3.getElementById("error-stack").innerHTML = ansiConverter.toHtml(detail);
      this.showMode(Mode.ERROR);
    }
  }, {
    key: "showNoPreview",
    value: function showNoPreview() {
      var _this$storyRoot, _this$docsRoot;
      if (this.testing)
        return;
      this.showMode(Mode.NOPREVIEW);
      (_this$storyRoot = this.storyRoot()) === null || _this$storyRoot === void 0 ? void 0 : _this$storyRoot.setAttribute("hidden", "true");
      (_this$docsRoot = this.docsRoot()) === null || _this$docsRoot === void 0 ? void 0 : _this$docsRoot.setAttribute("hidden", "true");
    }
  }, {
    key: "showPreparingStory",
    value: function showPreparingStory() {
      var _this = this;
      var _ref22 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref2$immediate = _ref22.immediate, immediate = _ref2$immediate === void 0 ? false : _ref2$immediate;
      clearTimeout(this.preparingTimeout);
      if (immediate) {
        this.showMode(Mode.PREPARING_STORY);
      } else {
        this.preparingTimeout = setTimeout(function() {
          return _this.showMode(Mode.PREPARING_STORY);
        }, PREPARING_DELAY);
      }
    }
  }, {
    key: "showPreparingDocs",
    value: function showPreparingDocs() {
      var _this2 = this;
      clearTimeout(this.preparingTimeout);
      this.preparingTimeout = setTimeout(function() {
        return _this2.showMode(Mode.PREPARING_DOCS);
      }, PREPARING_DELAY);
    }
  }, {
    key: "showMain",
    value: function showMain() {
      this.showMode(Mode.MAIN);
    }
  }, {
    key: "showDocs",
    value: function showDocs() {
      this.storyRoot().setAttribute("hidden", "true");
      this.docsRoot().removeAttribute("hidden");
    }
  }, {
    key: "showStory",
    value: function showStory() {
      this.docsRoot().setAttribute("hidden", "true");
      this.storyRoot().removeAttribute("hidden");
    }
  }, {
    key: "showStoryDuringRender",
    value: function showStoryDuringRender() {
      document3.body.classList.add(classes.MAIN);
    }
  }]);
  return WebView2;
}();

// .yarn/__virtual__/@storybook-preview-web-virtual-00d7944391/0/cache/@storybook-preview-web-npm-6.5.13-5c97598fdf-d66d29667a.zip/node_modules/@storybook/preview-web/dist/esm/DocsRender.js
var import_runtime5 = __toESM(require_runtime());
var import_global12 = __toESM(require_window());
function asyncGeneratorStep5(gen, resolve, reject, _next, _throw, key2, arg) {
  try {
    var info = gen[key2](arg);
    var value2 = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value2);
  } else {
    Promise.resolve(value2).then(_next, _throw);
  }
}
function _asyncToGenerator5(fn) {
  return function() {
    var self = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value2) {
        asyncGeneratorStep5(gen, resolve, reject, _next, _throw, "next", value2);
      }
      function _throw(err) {
        asyncGeneratorStep5(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}
function _classCallCheck13(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties13(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass13(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties13(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties13(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
var DocsRender = function() {
  function DocsRender2(channel, store, id, story) {
    _classCallCheck13(this, DocsRender2);
    this.channel = channel;
    this.store = store;
    this.id = id;
    this.story = story;
    this.canvasElement = void 0;
    this.context = void 0;
    this.disableKeyListeners = false;
  }
  _createClass13(DocsRender2, [{
    key: "isPreparing",
    value: function isPreparing() {
      return false;
    }
  }, {
    key: "renderToElement",
    value: function() {
      var _renderToElement = _asyncToGenerator5(regeneratorRuntime.mark(function _callee(canvasElement, renderStoryToElement) {
        var _this = this, _global$FEATURES;
        var _this$story, id, title, name2, csfFile;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                this.canvasElement = canvasElement;
                _this$story = this.story, id = _this$story.id, title = _this$story.title, name2 = _this$story.name;
                _context.next = 4;
                return this.store.loadCSFFileByStoryId(this.id);
              case 4:
                csfFile = _context.sent;
                this.context = Object.assign({
                  id,
                  title,
                  name: name2,
                  storyById: function storyById(storyId) {
                    return _this.store.storyFromCSFFile({
                      storyId,
                      csfFile
                    });
                  },
                  componentStories: function componentStories() {
                    return _this.store.componentStoriesFromCSFFile({
                      csfFile
                    });
                  },
                  loadStory: function loadStory(storyId) {
                    return _this.store.loadStory({
                      storyId
                    });
                  },
                  renderStoryToElement,
                  getStoryContext: function getStoryContext(renderedStory) {
                    return Object.assign({}, _this.store.getStoryContext(renderedStory), {
                      viewMode: "docs"
                    });
                  }
                }, !((_global$FEATURES = import_global12.default.FEATURES) !== null && _global$FEATURES !== void 0 && _global$FEATURES.breakingChangesV7) && this.store.getStoryContext(this.story));
                return _context.abrupt("return", this.render());
              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
      function renderToElement(_x, _x2) {
        return _renderToElement.apply(this, arguments);
      }
      return renderToElement;
    }()
  }, {
    key: "render",
    value: function() {
      var _render = _asyncToGenerator5(regeneratorRuntime.mark(function _callee2() {
        var _this2 = this;
        var renderer;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!(!this.story || !this.context || !this.canvasElement)) {
                  _context2.next = 2;
                  break;
                }
                throw new Error("DocsRender not ready to render");
              case 2:
                _context2.next = 4;
                return import("./renderDocs-MDUAXT3W.js");
              case 4:
                renderer = _context2.sent;
                renderer.renderDocs(this.story, this.context, this.canvasElement, function() {
                  return _this2.channel.emit(DOCS_RENDERED, _this2.id);
                });
              case 6:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));
      function render3() {
        return _render.apply(this, arguments);
      }
      return render3;
    }()
  }, {
    key: "rerender",
    value: function() {
      var _rerender = _asyncToGenerator5(regeneratorRuntime.mark(function _callee3(isGlobals) {
        var _global$FEATURES2;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                if (!(!((_global$FEATURES2 = import_global12.default.FEATURES) !== null && _global$FEATURES2 !== void 0 && _global$FEATURES2.modernInlineRender) || isGlobals)) {
                  _context3.next = 3;
                  break;
                }
                _context3.next = 3;
                return this.render();
              case 3:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));
      function rerender(_x3) {
        return _rerender.apply(this, arguments);
      }
      return rerender;
    }()
  }, {
    key: "teardown",
    value: function() {
      var _teardown = _asyncToGenerator5(regeneratorRuntime.mark(function _callee4() {
        var _ref, viewModeChanged, renderer, _args4 = arguments;
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _ref = _args4.length > 0 && _args4[0] !== void 0 ? _args4[0] : {}, viewModeChanged = _ref.viewModeChanged;
                if (!(!viewModeChanged || !this.canvasElement)) {
                  _context4.next = 3;
                  break;
                }
                return _context4.abrupt("return");
              case 3:
                _context4.next = 5;
                return import("./renderDocs-MDUAXT3W.js");
              case 5:
                renderer = _context4.sent;
                renderer.unmountDocs(this.canvasElement);
              case 7:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));
      function teardown() {
        return _teardown.apply(this, arguments);
      }
      return teardown;
    }()
  }], [{
    key: "fromStoryRender",
    value: function fromStoryRender(storyRender) {
      var channel = storyRender.channel, store = storyRender.store, id = storyRender.id, story = storyRender.story;
      return new DocsRender2(channel, store, id, story);
    }
  }]);
  return DocsRender2;
}();
DocsRender.displayName = "DocsRender";

// .yarn/__virtual__/@storybook-preview-web-virtual-00d7944391/0/cache/@storybook-preview-web-npm-6.5.13-5c97598fdf-d66d29667a.zip/node_modules/@storybook/preview-web/dist/esm/PreviewWeb.js
function _typeof5(obj) {
  "@babel/helpers - typeof";
  return _typeof5 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof5(obj);
}
var _templateObject13;
var _templateObject24;
var _templateObject33;
var _templateObject43;
function asyncGeneratorStep6(gen, resolve, reject, _next, _throw, key2, arg) {
  try {
    var info = gen[key2](arg);
    var value2 = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value2);
  } else {
    Promise.resolve(value2).then(_next, _throw);
  }
}
function _asyncToGenerator6(fn) {
  return function() {
    var self = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value2) {
        asyncGeneratorStep6(gen, resolve, reject, _next, _throw, "next", value2);
      }
      function _throw(err) {
        asyncGeneratorStep6(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}
function _taggedTemplateLiteral13(strings, raw2) {
  if (!raw2) {
    raw2 = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw2) } }));
}
function _classCallCheck14(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties14(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass14(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties14(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties14(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _get() {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    _get = Reflect.get;
  } else {
    _get = function _get2(target, property, receiver) {
      var base = _superPropBase(target, property);
      if (!base)
        return;
      var desc = Object.getOwnPropertyDescriptor(base, property);
      if (desc.get) {
        return desc.get.call(arguments.length < 3 ? target : receiver);
      }
      return desc.value;
    };
  }
  return _get.apply(this, arguments);
}
function _superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = _getPrototypeOf(object);
    if (object === null)
      break;
  }
  return object;
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass)
    _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf3(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf(o, p);
}
function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn(this, result2);
  };
}
function _possibleConstructorReturn(self, call) {
  if (call && (_typeof5(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf3(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf(o);
}
var globalWindow2 = import_global13.default.window;
function focusInInput(event) {
  var target = event.target;
  return /input|textarea/i.test(target.tagName) || target.getAttribute("contenteditable") !== null;
}
var PreviewWeb = function(_Preview) {
  _inherits(PreviewWeb2, _Preview);
  var _super = _createSuper(PreviewWeb2);
  function PreviewWeb2() {
    var _this;
    _classCallCheck14(this, PreviewWeb2);
    _this = _super.call(this);
    _this.urlStore = void 0;
    _this.view = void 0;
    _this.previewEntryError = void 0;
    _this.currentSelection = void 0;
    _this.currentRender = void 0;
    _this.view = new WebView();
    _this.urlStore = new UrlStore();
    _this.storyStore.getSelection = (0, import_util_deprecate6.default)(function() {
      return _this.urlStore.selection;
    }, esm_default(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral13(["\n        `__STORYBOOK_STORY_STORE__.getSelection()` is deprecated and will be removed in 7.0.\n  \n        To get the current selection, use the `useStoryContext()` hook from `@storybook/addons`.\n      "], ["\n        \\`__STORYBOOK_STORY_STORE__.getSelection()\\` is deprecated and will be removed in 7.0.\n  \n        To get the current selection, use the \\`useStoryContext()\\` hook from \\`@storybook/addons\\`.\n      "]))));
    return _this;
  }
  _createClass14(PreviewWeb2, [{
    key: "setupListeners",
    value: function setupListeners() {
      _get(_getPrototypeOf(PreviewWeb2.prototype), "setupListeners", this).call(this);
      globalWindow2.onkeydown = this.onKeydown.bind(this);
      this.channel.on(SET_CURRENT_STORY, this.onSetCurrentStory.bind(this));
      this.channel.on(UPDATE_QUERY_PARAMS, this.onUpdateQueryParams.bind(this));
      this.channel.on(PRELOAD_STORIES, this.onPreloadStories.bind(this));
    }
  }, {
    key: "initializeWithProjectAnnotations",
    value: function initializeWithProjectAnnotations(projectAnnotations) {
      var _this2 = this;
      return _get(_getPrototypeOf(PreviewWeb2.prototype), "initializeWithProjectAnnotations", this).call(this, projectAnnotations).then(function() {
        return _this2.setInitialGlobals();
      });
    }
  }, {
    key: "setInitialGlobals",
    value: function() {
      var _setInitialGlobals = _asyncToGenerator6(regeneratorRuntime.mark(function _callee() {
        var _ref, globals;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _ref = this.urlStore.selectionSpecifier || {}, globals = _ref.globals;
                if (globals) {
                  this.storyStore.globals.updateFromPersisted(globals);
                }
                this.emitGlobals();
              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
      function setInitialGlobals() {
        return _setInitialGlobals.apply(this, arguments);
      }
      return setInitialGlobals;
    }()
  }, {
    key: "initializeWithStoryIndex",
    value: function initializeWithStoryIndex(storyIndex) {
      var _this3 = this;
      return _get(_getPrototypeOf(PreviewWeb2.prototype), "initializeWithStoryIndex", this).call(this, storyIndex).then(function() {
        var _global$FEATURES;
        if (!((_global$FEATURES = import_global13.default.FEATURES) !== null && _global$FEATURES !== void 0 && _global$FEATURES.storyStoreV7)) {
          _this3.channel.emit(SET_STORIES, _this3.storyStore.getSetStoriesPayload());
        }
        return _this3.selectSpecifiedStory();
      });
    }
  }, {
    key: "selectSpecifiedStory",
    value: function() {
      var _selectSpecifiedStory = _asyncToGenerator6(regeneratorRuntime.mark(function _callee2() {
        var _this$urlStore$select, storySpecifier, viewMode, args, storyId;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (this.urlStore.selectionSpecifier) {
                  _context2.next = 3;
                  break;
                }
                this.renderMissingStory();
                return _context2.abrupt("return");
              case 3:
                _this$urlStore$select = this.urlStore.selectionSpecifier, storySpecifier = _this$urlStore$select.storySpecifier, viewMode = _this$urlStore$select.viewMode, args = _this$urlStore$select.args;
                storyId = this.storyStore.storyIndex.storyIdFromSpecifier(storySpecifier);
                if (storyId) {
                  _context2.next = 8;
                  break;
                }
                if (storySpecifier === "*") {
                  this.renderStoryLoadingException(storySpecifier, new Error(esm_default(_templateObject24 || (_templateObject24 = _taggedTemplateLiteral13(["\n            Couldn't find any stories in your Storybook.\n            - Please check your stories field of your main.js config.\n            - Also check the browser console and terminal for error messages.\n          "])))));
                } else {
                  this.renderStoryLoadingException(storySpecifier, new Error(esm_default(_templateObject33 || (_templateObject33 = _taggedTemplateLiteral13(["\n            Couldn't find story matching '", "'.\n            - Are you sure a story with that id exists?\n            - Please check your stories field of your main.js config.\n            - Also check the browser console and terminal for error messages.\n          "])), storySpecifier)));
                }
                return _context2.abrupt("return");
              case 8:
                this.urlStore.setSelection({
                  storyId,
                  viewMode
                });
                this.channel.emit(STORY_SPECIFIED, this.urlStore.selection);
                this.channel.emit(CURRENT_STORY_WAS_SET, this.urlStore.selection);
                _context2.next = 13;
                return this.renderSelection({
                  persistedArgs: args
                });
              case 13:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));
      function selectSpecifiedStory() {
        return _selectSpecifiedStory.apply(this, arguments);
      }
      return selectSpecifiedStory;
    }()
  }, {
    key: "onGetProjectAnnotationsChanged",
    value: function() {
      var _onGetProjectAnnotationsChanged = _asyncToGenerator6(regeneratorRuntime.mark(function _callee3(_ref22) {
        var getProjectAnnotations;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                getProjectAnnotations = _ref22.getProjectAnnotations;
                _context3.next = 3;
                return _get(_getPrototypeOf(PreviewWeb2.prototype), "onGetProjectAnnotationsChanged", this).call(this, {
                  getProjectAnnotations
                });
              case 3:
                this.renderSelection();
              case 4:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));
      function onGetProjectAnnotationsChanged(_x) {
        return _onGetProjectAnnotationsChanged.apply(this, arguments);
      }
      return onGetProjectAnnotationsChanged;
    }()
  }, {
    key: "onStoriesChanged",
    value: function() {
      var _onStoriesChanged = _asyncToGenerator6(regeneratorRuntime.mark(function _callee4(_ref32) {
        var _global$FEATURES2;
        var importFn, storyIndex;
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                importFn = _ref32.importFn, storyIndex = _ref32.storyIndex;
                _get(_getPrototypeOf(PreviewWeb2.prototype), "onStoriesChanged", this).call(this, {
                  importFn,
                  storyIndex
                });
                if ((_global$FEATURES2 = import_global13.default.FEATURES) !== null && _global$FEATURES2 !== void 0 && _global$FEATURES2.storyStoreV7) {
                  _context4.next = 9;
                  break;
                }
                _context4.t0 = this.channel;
                _context4.t1 = SET_STORIES;
                _context4.next = 7;
                return this.storyStore.getSetStoriesPayload();
              case 7:
                _context4.t2 = _context4.sent;
                _context4.t0.emit.call(_context4.t0, _context4.t1, _context4.t2);
              case 9:
                if (!this.urlStore.selection) {
                  _context4.next = 14;
                  break;
                }
                _context4.next = 12;
                return this.renderSelection();
              case 12:
                _context4.next = 16;
                break;
              case 14:
                _context4.next = 16;
                return this.selectSpecifiedStory();
              case 16:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));
      function onStoriesChanged(_x2) {
        return _onStoriesChanged.apply(this, arguments);
      }
      return onStoriesChanged;
    }()
  }, {
    key: "onKeydown",
    value: function onKeydown(event) {
      var _this$currentRender;
      if (!((_this$currentRender = this.currentRender) !== null && _this$currentRender !== void 0 && _this$currentRender.disableKeyListeners) && !focusInInput(event)) {
        var altKey = event.altKey, ctrlKey = event.ctrlKey, metaKey = event.metaKey, shiftKey = event.shiftKey, key2 = event.key, code = event.code, keyCode = event.keyCode;
        this.channel.emit(PREVIEW_KEYDOWN, {
          event: {
            altKey,
            ctrlKey,
            metaKey,
            shiftKey,
            key: key2,
            code,
            keyCode
          }
        });
      }
    }
  }, {
    key: "onSetCurrentStory",
    value: function onSetCurrentStory(selection) {
      this.urlStore.setSelection(Object.assign({
        viewMode: "story"
      }, selection));
      this.channel.emit(CURRENT_STORY_WAS_SET, this.urlStore.selection);
      this.renderSelection();
    }
  }, {
    key: "onUpdateQueryParams",
    value: function onUpdateQueryParams(queryParams) {
      this.urlStore.setQueryParams(queryParams);
    }
  }, {
    key: "onUpdateGlobals",
    value: function() {
      var _onUpdateGlobals = _asyncToGenerator6(regeneratorRuntime.mark(function _callee5(_ref42) {
        var globals;
        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                globals = _ref42.globals;
                _get(_getPrototypeOf(PreviewWeb2.prototype), "onUpdateGlobals", this).call(this, {
                  globals
                });
                if (!(this.currentRender instanceof DocsRender)) {
                  _context5.next = 5;
                  break;
                }
                _context5.next = 5;
                return this.currentRender.rerender(true);
              case 5:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));
      function onUpdateGlobals(_x3) {
        return _onUpdateGlobals.apply(this, arguments);
      }
      return onUpdateGlobals;
    }()
  }, {
    key: "onUpdateArgs",
    value: function() {
      var _onUpdateArgs = _asyncToGenerator6(regeneratorRuntime.mark(function _callee6(_ref52) {
        var storyId, updatedArgs;
        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                storyId = _ref52.storyId, updatedArgs = _ref52.updatedArgs;
                _get(_getPrototypeOf(PreviewWeb2.prototype), "onUpdateArgs", this).call(this, {
                  storyId,
                  updatedArgs
                });
                if (!(this.currentRender instanceof DocsRender)) {
                  _context6.next = 5;
                  break;
                }
                _context6.next = 5;
                return this.currentRender.rerender(false);
              case 5:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));
      function onUpdateArgs(_x4) {
        return _onUpdateArgs.apply(this, arguments);
      }
      return onUpdateArgs;
    }()
  }, {
    key: "onPreloadStories",
    value: function() {
      var _onPreloadStories = _asyncToGenerator6(regeneratorRuntime.mark(function _callee7(ids) {
        var _this4 = this;
        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.next = 2;
                return Promise.all(ids.map(function(id) {
                  return _this4.storyStore.loadStory({
                    storyId: id
                  });
                }));
              case 2:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7);
      }));
      function onPreloadStories(_x5) {
        return _onPreloadStories.apply(this, arguments);
      }
      return onPreloadStories;
    }()
  }, {
    key: "renderSelection",
    value: function() {
      var _renderSelection = _asyncToGenerator6(regeneratorRuntime.mark(function _callee8() {
        var _this$currentSelectio, _this$currentSelectio2, _lastRender, _this5 = this, _global$FEATURES3;
        var _ref6, persistedArgs, selection, storyId, storyIdChanged, viewModeChanged, lastSelection, lastRender, storyRender, implementationChanged, _storyRender$context, parameters, initialArgs, argTypes, args, _args8 = arguments;
        return regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                _ref6 = _args8.length > 0 && _args8[0] !== void 0 ? _args8[0] : {}, persistedArgs = _ref6.persistedArgs;
                selection = this.urlStore.selection;
                if (selection) {
                  _context8.next = 4;
                  break;
                }
                throw new Error("Cannot render story as no selection was made");
              case 4:
                storyId = selection.storyId;
                storyIdChanged = ((_this$currentSelectio = this.currentSelection) === null || _this$currentSelectio === void 0 ? void 0 : _this$currentSelectio.storyId) !== storyId;
                viewModeChanged = ((_this$currentSelectio2 = this.currentSelection) === null || _this$currentSelectio2 === void 0 ? void 0 : _this$currentSelectio2.viewMode) !== selection.viewMode;
                if (selection.viewMode === "story") {
                  this.view.showPreparingStory({
                    immediate: viewModeChanged
                  });
                } else {
                  this.view.showPreparingDocs();
                }
                lastSelection = this.currentSelection;
                lastRender = this.currentRender;
                if (!((_lastRender = lastRender) !== null && _lastRender !== void 0 && _lastRender.isPreparing())) {
                  _context8.next = 14;
                  break;
                }
                _context8.next = 13;
                return this.teardownRender(lastRender);
              case 13:
                lastRender = null;
              case 14:
                storyRender = new StoryRender(this.channel, this.storyStore, function() {
                  _this5.view.showStoryDuringRender();
                  return _this5.renderToDOM.apply(_this5, arguments);
                }, this.mainStoryCallbacks(storyId), storyId, "story");
                this.currentSelection = selection;
                this.currentRender = storyRender;
                _context8.prev = 17;
                _context8.next = 20;
                return storyRender.prepare();
              case 20:
                _context8.next = 29;
                break;
              case 22:
                _context8.prev = 22;
                _context8.t0 = _context8["catch"](17);
                if (!(_context8.t0 !== PREPARE_ABORTED)) {
                  _context8.next = 28;
                  break;
                }
                _context8.next = 27;
                return this.teardownRender(lastRender);
              case 27:
                this.renderStoryLoadingException(storyId, _context8.t0);
              case 28:
                return _context8.abrupt("return");
              case 29:
                implementationChanged = !storyIdChanged && !storyRender.isEqual(lastRender);
                if (persistedArgs)
                  this.storyStore.args.updateFromPersisted(storyRender.story, persistedArgs);
                _storyRender$context = storyRender.context(), parameters = _storyRender$context.parameters, initialArgs = _storyRender$context.initialArgs, argTypes = _storyRender$context.argTypes, args = _storyRender$context.args;
                if (!(lastRender && !storyIdChanged && !implementationChanged && !viewModeChanged)) {
                  _context8.next = 37;
                  break;
                }
                this.currentRender = lastRender;
                this.channel.emit(STORY_UNCHANGED, storyId);
                this.view.showMain();
                return _context8.abrupt("return");
              case 37:
                _context8.next = 39;
                return this.teardownRender(lastRender, {
                  viewModeChanged
                });
              case 39:
                if (lastSelection && (storyIdChanged || viewModeChanged)) {
                  this.channel.emit(STORY_CHANGED, storyId);
                }
                if ((_global$FEATURES3 = import_global13.default.FEATURES) !== null && _global$FEATURES3 !== void 0 && _global$FEATURES3.storyStoreV7) {
                  this.channel.emit(STORY_PREPARED, {
                    id: storyId,
                    parameters,
                    initialArgs,
                    argTypes,
                    args
                  });
                }
                if (implementationChanged || persistedArgs) {
                  this.channel.emit(STORY_ARGS_UPDATED, {
                    storyId,
                    args
                  });
                }
                if (selection.viewMode === "docs" || parameters.docsOnly) {
                  this.currentRender = DocsRender.fromStoryRender(storyRender);
                  this.currentRender.renderToElement(this.view.prepareForDocs(), this.renderStoryToElement.bind(this));
                } else {
                  this.storyRenders.push(storyRender);
                  this.currentRender.renderToElement(this.view.prepareForStory(storyRender.story));
                }
              case 43:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, this, [[17, 22]]);
      }));
      function renderSelection() {
        return _renderSelection.apply(this, arguments);
      }
      return renderSelection;
    }()
  }, {
    key: "renderStoryToElement",
    value: function renderStoryToElement(story, element) {
      var _this6 = this;
      var render3 = new StoryRender(this.channel, this.storyStore, this.renderToDOM, this.inlineStoryCallbacks(story.id), story.id, "docs", story);
      render3.renderToElement(element);
      this.storyRenders.push(render3);
      return _asyncToGenerator6(regeneratorRuntime.mark(function _callee9() {
        return regeneratorRuntime.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.next = 2;
                return _this6.teardownRender(render3);
              case 2:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9);
      }));
    }
  }, {
    key: "teardownRender",
    value: function() {
      var _teardownRender = _asyncToGenerator6(regeneratorRuntime.mark(function _callee10(render3) {
        var _ref8, viewModeChanged, _args10 = arguments;
        return regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _ref8 = _args10.length > 1 && _args10[1] !== void 0 ? _args10[1] : {}, viewModeChanged = _ref8.viewModeChanged;
                this.storyRenders = this.storyRenders.filter(function(r) {
                  return r !== render3;
                });
                _context10.next = 4;
                return render3 === null || render3 === void 0 ? void 0 : render3.teardown({
                  viewModeChanged
                });
              case 4:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));
      function teardownRender(_x6) {
        return _teardownRender.apply(this, arguments);
      }
      return teardownRender;
    }()
  }, {
    key: "extract",
    value: function() {
      var _extract = _asyncToGenerator6(regeneratorRuntime.mark(function _callee11(options2) {
        var _global$FEATURES4;
        return regeneratorRuntime.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                if (!this.previewEntryError) {
                  _context11.next = 2;
                  break;
                }
                throw this.previewEntryError;
              case 2:
                if (this.storyStore.projectAnnotations) {
                  _context11.next = 4;
                  break;
                }
                throw new Error(esm_default(_templateObject43 || (_templateObject43 = _taggedTemplateLiteral13(["Failed to initialize Storybook.\n      \n      Do you have an error in your `preview.js`? Check your Storybook's browser console for errors."], ["Failed to initialize Storybook.\n      \n      Do you have an error in your \\`preview.js\\`? Check your Storybook's browser console for errors."]))));
              case 4:
                if (!((_global$FEATURES4 = import_global13.default.FEATURES) !== null && _global$FEATURES4 !== void 0 && _global$FEATURES4.storyStoreV7)) {
                  _context11.next = 7;
                  break;
                }
                _context11.next = 7;
                return this.storyStore.cacheAllCSFFiles();
              case 7:
                return _context11.abrupt("return", this.storyStore.extract(options2));
              case 8:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11, this);
      }));
      function extract(_x7) {
        return _extract.apply(this, arguments);
      }
      return extract;
    }()
  }, {
    key: "mainStoryCallbacks",
    value: function mainStoryCallbacks(storyId) {
      var _this7 = this;
      return {
        showMain: function showMain() {
          return _this7.view.showMain();
        },
        showError: function showError(err) {
          return _this7.renderError(storyId, err);
        },
        showException: function showException(err) {
          return _this7.renderException(storyId, err);
        }
      };
    }
  }, {
    key: "inlineStoryCallbacks",
    value: function inlineStoryCallbacks(storyId) {
      return {
        showMain: function showMain() {
        },
        showError: function showError(err) {
          return logger.error("Error rendering docs story (".concat(storyId, ")"), err);
        },
        showException: function showException(err) {
          return logger.error("Error rendering docs story (".concat(storyId, ")"), err);
        }
      };
    }
  }, {
    key: "renderPreviewEntryError",
    value: function renderPreviewEntryError(reason, err) {
      _get(_getPrototypeOf(PreviewWeb2.prototype), "renderPreviewEntryError", this).call(this, reason, err);
      this.view.showErrorDisplay(err);
    }
  }, {
    key: "renderMissingStory",
    value: function renderMissingStory() {
      this.view.showNoPreview();
      this.channel.emit(STORY_MISSING);
    }
  }, {
    key: "renderStoryLoadingException",
    value: function renderStoryLoadingException(storySpecifier, err) {
      logger.error("Unable to load story '".concat(storySpecifier, "':"));
      logger.error(err);
      this.view.showErrorDisplay(err);
      this.channel.emit(STORY_MISSING, storySpecifier);
    }
  }, {
    key: "renderException",
    value: function renderException(storyId, err) {
      this.channel.emit(STORY_THREW_EXCEPTION, err);
      this.channel.emit(STORY_RENDER_PHASE_CHANGED, {
        newPhase: "errored",
        storyId
      });
      if (err !== IGNORED_EXCEPTION) {
        this.view.showErrorDisplay(err);
        logger.error("Error rendering story '".concat(storyId, "':"));
        logger.error(err);
      }
    }
  }, {
    key: "renderError",
    value: function renderError(storyId, _ref9) {
      var title = _ref9.title, description = _ref9.description;
      logger.error("Error rendering story ".concat(title, ": ").concat(description));
      this.channel.emit(STORY_ERRORED, {
        title,
        description
      });
      this.channel.emit(STORY_RENDER_PHASE_CHANGED, {
        newPhase: "errored",
        storyId
      });
      this.view.showErrorDisplay({
        message: title,
        stack: description
      });
    }
  }]);
  return PreviewWeb2;
}(Preview);

// .yarn/__virtual__/@storybook-preview-web-virtual-00d7944391/0/cache/@storybook-preview-web-npm-6.5.13-5c97598fdf-d66d29667a.zip/node_modules/@storybook/preview-web/dist/esm/simulate-pageload.js
var import_es_string_iterator23 = __toESM(require_es_string_iterator());
var import_global14 = __toESM(require_window());
var document4 = import_global14.default.document;

// .yarn/cache/@storybook-channel-postmessage-npm-6.5.13-9b45c68c33-8d6ccfff2a.zip/node_modules/@storybook/channel-postmessage/dist/esm/index.js
var import_es_array_iterator23 = __toESM(require_es_array_iterator());

// .yarn/unplugged/core-js-npm-3.26.1-42575888f8/node_modules/core-js/modules/es.object.from-entries.js
var $ = require_export();
var iterate = require_iterate();
var createProperty = require_create_property();
$({ target: "Object", stat: true }, {
  fromEntries: function fromEntries(iterable) {
    var obj = {};
    iterate(iterable, function(k, v) {
      createProperty(obj, k, v);
    }, { AS_ENTRIES: true });
    return obj;
  }
});

// .yarn/unplugged/core-js-npm-3.26.1-42575888f8/node_modules/core-js/modules/es.number.is-integer.js
var $2 = require_export();
var isIntegralNumber = require_is_integral_number();
$2({ target: "Number", stat: true }, {
  isInteger: isIntegralNumber
});

// .yarn/cache/@storybook-channel-postmessage-npm-6.5.13-9b45c68c33-8d6ccfff2a.zip/node_modules/@storybook/channel-postmessage/dist/esm/index.js
var import_es_regexp_exec26 = __toESM(require_es_regexp_exec());
var import_es_string_iterator24 = __toESM(require_es_string_iterator());

// .yarn/unplugged/core-js-npm-3.26.1-42575888f8/node_modules/core-js/modules/web.url.js
require_web_url_constructor();

// .yarn/unplugged/core-js-npm-3.26.1-42575888f8/node_modules/core-js/modules/web.url-search-params.js
require_web_url_search_params_constructor();

// .yarn/cache/@storybook-channel-postmessage-npm-6.5.13-9b45c68c33-8d6ccfff2a.zip/node_modules/@storybook/channel-postmessage/dist/esm/index.js
var import_global15 = __toESM(require_window());

// .yarn/cache/telejson-npm-6.0.8-4456345613-7411a5e78a.zip/node_modules/telejson/dist/esm/index.js
var import_is_regex = __toESM(require_is_regex());
var import_is_function = __toESM(require_is_function());
var import_is_symbol = __toESM(require_is_symbol());

// .yarn/cache/isobject-npm-4.0.0-9c5174125b-bbcb522e46.zip/node_modules/isobject/index.js
function isObject3(val) {
  return val != null && typeof val === "object" && Array.isArray(val) === false;
}

// .yarn/cache/telejson-npm-6.0.8-4456345613-7411a5e78a.zip/node_modules/telejson/dist/esm/index.js
var import_get = __toESM(require_get());
var import_memoizerific2 = __toESM(require_memoizerific());

// .yarn/cache/telejson-npm-6.0.8-4456345613-7411a5e78a.zip/node_modules/telejson/dist/esm/dom-event.js
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly)
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source2 = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys(Object(source2), true).forEach(function(key2) {
        _defineProperty5(target, key2, source2[key2]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source2));
    } else {
      ownKeys(Object(source2)).forEach(function(key2) {
        Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source2, key2));
      });
    }
  }
  return target;
}
function _defineProperty5(obj, key2, value2) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value2, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value2;
  }
  return obj;
}
var eventProperties = ["bubbles", "cancelBubble", "cancelable", "composed", "currentTarget", "defaultPrevented", "eventPhase", "isTrusted", "returnValue", "srcElement", "target", "timeStamp", "type"];
var customEventSpecificProperties = ["detail"];
function extractEventHiddenProperties(event) {
  var rebuildEvent = eventProperties.filter(function(value2) {
    return event[value2] !== void 0;
  }).reduce(function(acc, value2) {
    return _objectSpread(_objectSpread({}, acc), {}, _defineProperty5({}, value2, event[value2]));
  }, {});
  if (event instanceof CustomEvent) {
    customEventSpecificProperties.filter(function(value2) {
      return event[value2] !== void 0;
    }).forEach(function(value2) {
      rebuildEvent[value2] = event[value2];
    });
  }
  return rebuildEvent;
}

// .yarn/cache/telejson-npm-6.0.8-4456345613-7411a5e78a.zip/node_modules/telejson/dist/esm/index.js
function ownKeys2(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly)
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source2 = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys2(Object(source2), true).forEach(function(key2) {
        _defineProperty6(target, key2, source2[key2]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source2));
    } else {
      ownKeys2(Object(source2)).forEach(function(key2) {
        Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source2, key2));
      });
    }
  }
  return target;
}
function _defineProperty6(obj, key2, value2) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value2, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value2;
  }
  return obj;
}
function _slicedToArray13(arr, i) {
  return _arrayWithHoles14(arr) || _iterableToArrayLimit13(arr, i) || _unsupportedIterableToArray19(arr, i) || _nonIterableRest14();
}
function _nonIterableRest14() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray19(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray19(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray19(o, minLen);
}
function _arrayLikeToArray19(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit13(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr)))
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = void 0;
  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles14(arr) {
  if (Array.isArray(arr))
    return arr;
}
var isRunningInBrowser = typeof window !== "undefined" && typeof window.document !== "undefined";
var isObject4 = isObject3;
var removeCodeComments = function removeCodeComments2(code) {
  var inQuoteChar = null;
  var inBlockComment = false;
  var inLineComment = false;
  var inRegexLiteral = false;
  var newCode = "";
  if (code.indexOf("//") >= 0 || code.indexOf("/*") >= 0) {
    for (var i = 0; i < code.length; i += 1) {
      if (!inQuoteChar && !inBlockComment && !inLineComment && !inRegexLiteral) {
        if (code[i] === '"' || code[i] === "'" || code[i] === "`") {
          inQuoteChar = code[i];
        } else if (code[i] === "/" && code[i + 1] === "*") {
          inBlockComment = true;
        } else if (code[i] === "/" && code[i + 1] === "/") {
          inLineComment = true;
        } else if (code[i] === "/" && code[i + 1] !== "/") {
          inRegexLiteral = true;
        }
      } else {
        if (inQuoteChar && (code[i] === inQuoteChar && code[i - 1] !== "\\" || code[i] === "\n" && inQuoteChar !== "`")) {
          inQuoteChar = null;
        }
        if (inRegexLiteral && (code[i] === "/" && code[i - 1] !== "\\" || code[i] === "\n")) {
          inRegexLiteral = false;
        }
        if (inBlockComment && code[i - 1] === "/" && code[i - 2] === "*") {
          inBlockComment = false;
        }
        if (inLineComment && code[i] === "\n") {
          inLineComment = false;
        }
      }
      if (!inBlockComment && !inLineComment) {
        newCode += code[i];
      }
    }
  } else {
    newCode = code;
  }
  return newCode;
};
var cleanCode = (0, import_memoizerific2.default)(1e4)(function(code) {
  return removeCodeComments(code).replace(/\n\s*/g, "").trim();
});
var convertShorthandMethods = function convertShorthandMethods2(key2, stringified) {
  var fnHead = stringified.slice(0, stringified.indexOf("{"));
  var fnBody = stringified.slice(stringified.indexOf("{"));
  if (fnHead.includes("=>")) {
    return stringified;
  }
  if (fnHead.includes("function")) {
    return stringified;
  }
  var modifiedHead = fnHead;
  modifiedHead = modifiedHead.replace(key2, "function");
  return modifiedHead + fnBody;
};
var dateFormat = /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d{3})?Z$/;
var isJSON = function isJSON2(input) {
  return input.match(/^[\[\{\"\}].*[\]\}\"]$/);
};
function convertUnconventionalData(data) {
  if (!isObject4(data)) {
    return data;
  }
  var result2 = data;
  var wasMutated = false;
  if (isRunningInBrowser && data instanceof Event) {
    result2 = extractEventHiddenProperties(result2);
    wasMutated = true;
  }
  result2 = Object.keys(result2).reduce(function(acc, key2) {
    try {
      var _result$key;
      (_result$key = result2[key2]) === null || _result$key === void 0 ? void 0 : _result$key.toJSON;
      acc[key2] = result2[key2];
    } catch (err) {
      wasMutated = true;
    }
    return acc;
  }, {});
  return wasMutated ? result2 : data;
}
var replacer = function replacer2(options2) {
  var objects;
  var map3;
  var stack;
  var keys;
  return function replace(key2, value2) {
    try {
      if (key2 === "") {
        keys = [];
        objects = /* @__PURE__ */ new Map([[value2, "[]"]]);
        map3 = /* @__PURE__ */ new Map();
        stack = [];
        return value2;
      }
      var origin = map3.get(this) || this;
      while (stack.length && origin !== stack[0]) {
        stack.shift();
        keys.pop();
      }
      if (typeof value2 === "boolean") {
        return value2;
      }
      if (value2 === void 0) {
        if (!options2.allowUndefined) {
          return void 0;
        }
        return "_undefined_";
      }
      if (value2 === null) {
        return null;
      }
      if (typeof value2 === "number") {
        if (value2 === -Infinity) {
          return "_-Infinity_";
        }
        if (value2 === Infinity) {
          return "_Infinity_";
        }
        if (Number.isNaN(value2)) {
          return "_NaN_";
        }
        return value2;
      }
      if (typeof value2 === "bigint") {
        return "_bigint_".concat(value2.toString());
      }
      if (typeof value2 === "string") {
        if (dateFormat.test(value2)) {
          if (!options2.allowDate) {
            return void 0;
          }
          return "_date_".concat(value2);
        }
        return value2;
      }
      if ((0, import_is_regex.default)(value2)) {
        if (!options2.allowRegExp) {
          return void 0;
        }
        return "_regexp_".concat(value2.flags, "|").concat(value2.source);
      }
      if ((0, import_is_function.default)(value2)) {
        if (!options2.allowFunction) {
          return void 0;
        }
        var name2 = value2.name;
        var stringified = value2.toString();
        if (!stringified.match(/(\[native code\]|WEBPACK_IMPORTED_MODULE|__webpack_exports__|__webpack_require__)/)) {
          return "_function_".concat(name2, "|").concat(cleanCode(convertShorthandMethods(key2, stringified)));
        }
        return "_function_".concat(name2, "|").concat(function() {
        }.toString());
      }
      if ((0, import_is_symbol.default)(value2)) {
        if (!options2.allowSymbol) {
          return void 0;
        }
        var globalRegistryKey = Symbol.keyFor(value2);
        if (globalRegistryKey !== void 0) {
          return "_gsymbol_".concat(globalRegistryKey);
        }
        return "_symbol_".concat(value2.toString().slice(7, -1));
      }
      if (stack.length >= options2.maxDepth) {
        if (Array.isArray(value2)) {
          return "[Array(".concat(value2.length, ")]");
        }
        return "[Object]";
      }
      if (value2 === this) {
        return "_duplicate_".concat(JSON.stringify(keys));
      }
      if (value2.constructor && value2.constructor.name && value2.constructor.name !== "Object" && !Array.isArray(value2) && !options2.allowClass) {
        return void 0;
      }
      var found = objects.get(value2);
      if (!found) {
        var converted = Array.isArray(value2) ? value2 : convertUnconventionalData(value2);
        if (value2.constructor && value2.constructor.name && value2.constructor.name !== "Object" && !Array.isArray(value2) && options2.allowClass) {
          try {
            Object.assign(converted, {
              "_constructor-name_": value2.constructor.name
            });
          } catch (e) {
          }
        }
        keys.push(key2);
        stack.unshift(converted);
        objects.set(value2, JSON.stringify(keys));
        if (value2 !== converted) {
          map3.set(value2, converted);
        }
        return converted;
      }
      return "_duplicate_".concat(found);
    } catch (e) {
      return void 0;
    }
  };
};
var reviver2 = function reviver(options) {
  var refs = [];
  var root;
  return function revive(key, value) {
    if (key === "") {
      root = value;
      refs.forEach(function(_ref) {
        var target = _ref.target, container = _ref.container, replacement = _ref.replacement;
        var replacementArr = isJSON(replacement) ? JSON.parse(replacement) : replacement.split(".");
        if (replacementArr.length === 0) {
          container[target] = root;
        } else {
          container[target] = (0, import_get.default)(root, replacementArr);
        }
      });
    }
    if (key === "_constructor-name_") {
      return value;
    }
    if (isObject4(value) && value["_constructor-name_"] && options.allowFunction) {
      var name = value["_constructor-name_"];
      if (name !== "Object") {
        var Fn = new Function("return function ".concat(name.replace(/[\W_]+/g, ""), "(){}"))();
        Object.setPrototypeOf(value, new Fn());
      }
      delete value["_constructor-name_"];
      return value;
    }
    if (typeof value === "string" && value.startsWith("_function_") && options.allowFunction) {
      var _ref2 = value.match(/_function_([^|]*)\|(.*)/) || [], _ref3 = _slicedToArray13(_ref2, 3), _name = _ref3[1], source = _ref3[2];
      var sourceSanitized = source.replace(/[(\(\))|\\| |\]|`]*$/, "");
      if (!options.lazyEval) {
        return eval("(".concat(sourceSanitized, ")"));
      }
      var result = function result() {
        var f = eval("(".concat(sourceSanitized, ")"));
        return f.apply(void 0, arguments);
      };
      Object.defineProperty(result, "toString", {
        value: function value2() {
          return sourceSanitized;
        }
      });
      Object.defineProperty(result, "name", {
        value: _name
      });
      return result;
    }
    if (typeof value === "string" && value.startsWith("_regexp_") && options.allowRegExp) {
      var _ref4 = value.match(/_regexp_([^|]*)\|(.*)/) || [], _ref5 = _slicedToArray13(_ref4, 3), flags = _ref5[1], _source = _ref5[2];
      return new RegExp(_source, flags);
    }
    if (typeof value === "string" && value.startsWith("_date_") && options.allowDate) {
      return new Date(value.replace("_date_", ""));
    }
    if (typeof value === "string" && value.startsWith("_duplicate_")) {
      refs.push({
        target: key,
        container: this,
        replacement: value.replace(/^_duplicate_/, "")
      });
      return null;
    }
    if (typeof value === "string" && value.startsWith("_symbol_") && options.allowSymbol) {
      return Symbol(value.replace("_symbol_", ""));
    }
    if (typeof value === "string" && value.startsWith("_gsymbol_") && options.allowSymbol) {
      return Symbol["for"](value.replace("_gsymbol_", ""));
    }
    if (typeof value === "string" && value === "_-Infinity_") {
      return -Infinity;
    }
    if (typeof value === "string" && value === "_Infinity_") {
      return Infinity;
    }
    if (typeof value === "string" && value === "_NaN_") {
      return NaN;
    }
    if (typeof value === "string" && value.startsWith("_bigint_") && typeof BigInt === "function") {
      return BigInt(value.replace("_bigint_", ""));
    }
    return value;
  };
};
var defaultOptions = {
  maxDepth: 10,
  space: void 0,
  allowFunction: true,
  allowRegExp: true,
  allowDate: true,
  allowClass: true,
  allowUndefined: true,
  allowSymbol: true,
  lazyEval: true
};
var stringify = function stringify2(data) {
  var options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var mergedOptions = _objectSpread2(_objectSpread2({}, defaultOptions), options2);
  return JSON.stringify(convertUnconventionalData(data), replacer(mergedOptions), options2.space);
};
var mutator = function mutator2() {
  var mutated = /* @__PURE__ */ new Map();
  return function mutateUndefined(value2) {
    if (isObject4(value2)) {
      Object.entries(value2).forEach(function(_ref6) {
        var _ref7 = _slicedToArray13(_ref6, 2), k = _ref7[0], v = _ref7[1];
        if (v === "_undefined_") {
          value2[k] = void 0;
        } else if (!mutated.get(v)) {
          mutated.set(v, true);
          mutateUndefined(v);
        }
      });
    }
    if (Array.isArray(value2)) {
      value2.forEach(function(v, index) {
        if (v === "_undefined_") {
          mutated.set(v, true);
          value2[index] = void 0;
        } else if (!mutated.get(v)) {
          mutated.set(v, true);
          mutateUndefined(v);
        }
      });
    }
  };
};
var parse2 = function parse3(data) {
  var options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var mergedOptions = _objectSpread2(_objectSpread2({}, defaultOptions), options2);
  var result2 = JSON.parse(data, reviver2(mergedOptions));
  mutator()(result2);
  return result2;
};

// .yarn/cache/@storybook-channel-postmessage-npm-6.5.13-9b45c68c33-8d6ccfff2a.zip/node_modules/@storybook/channel-postmessage/dist/esm/index.js
var import_qs5 = __toESM(require_lib());
function _toArray2(arr) {
  return _arrayWithHoles15(arr) || _iterableToArray11(arr) || _unsupportedIterableToArray20(arr) || _nonIterableRest15();
}
function _toConsumableArray11(arr) {
  return _arrayWithoutHoles11(arr) || _iterableToArray11(arr) || _unsupportedIterableToArray20(arr) || _nonIterableSpread11();
}
function _nonIterableSpread11() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray11(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles11(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray20(arr);
}
function _slicedToArray14(arr, i) {
  return _arrayWithHoles15(arr) || _iterableToArrayLimit14(arr, i) || _unsupportedIterableToArray20(arr, i) || _nonIterableRest15();
}
function _nonIterableRest15() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray20(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray20(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray20(o, minLen);
}
function _arrayLikeToArray20(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit14(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles15(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _classCallCheck15(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties15(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass15(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties15(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties15(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
var globalWindow3 = import_global15.default.window;
var document5 = import_global15.default.document;
var location = import_global15.default.location;
var KEY2 = "storybook-channel";
var defaultEventOptions = {
  allowFunction: true,
  maxDepth: 25
};
var PostmsgTransport = function() {
  function PostmsgTransport2(config) {
    _classCallCheck15(this, PostmsgTransport2);
    this.config = config;
    this.buffer = void 0;
    this.handler = void 0;
    this.connected = void 0;
    this.buffer = [];
    this.handler = null;
    globalWindow3.addEventListener("message", this.handleEvent.bind(this), false);
    if (config.page !== "manager" && config.page !== "preview") {
      throw new Error('postmsg-channel: "config.page" cannot be "'.concat(config.page, '"'));
    }
  }
  _createClass15(PostmsgTransport2, [{
    key: "setHandler",
    value: function setHandler(handler) {
      var _this = this;
      this.handler = function() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        handler.apply(_this, args);
        if (!_this.connected && _this.getLocalFrame().length) {
          _this.flush();
          _this.connected = true;
        }
      };
    }
  }, {
    key: "send",
    value: function send(event, options2) {
      var _this2 = this;
      var _ref = options2 || {}, target = _ref.target, allowRegExp = _ref.allowRegExp, allowFunction = _ref.allowFunction, allowSymbol = _ref.allowSymbol, allowDate = _ref.allowDate, allowUndefined = _ref.allowUndefined, allowClass = _ref.allowClass, maxDepth = _ref.maxDepth, space = _ref.space, lazyEval = _ref.lazyEval;
      var eventOptions = Object.fromEntries(Object.entries({
        allowRegExp,
        allowFunction,
        allowSymbol,
        allowDate,
        allowUndefined,
        allowClass,
        maxDepth,
        space,
        lazyEval
      }).filter(function(_ref22) {
        var _ref32 = _slicedToArray14(_ref22, 2), k = _ref32[0], v = _ref32[1];
        return typeof v !== "undefined";
      }));
      var stringifyOptions = Object.assign({}, defaultEventOptions, import_global15.default.CHANNEL_OPTIONS || {}, eventOptions);
      if (options2 && Number.isInteger(options2.depth)) {
        stringifyOptions.maxDepth = options2.depth;
      }
      var frames = this.getFrames(target);
      var query = import_qs5.default.parse(location.search, {
        ignoreQueryPrefix: true
      });
      var data = stringify({
        key: KEY2,
        event,
        refId: query.refId
      }, stringifyOptions);
      if (!frames.length) {
        return new Promise(function(resolve, reject) {
          _this2.buffer.push({
            event,
            resolve,
            reject
          });
        });
      }
      if (this.buffer.length) {
        this.flush();
      }
      frames.forEach(function(f2) {
        try {
          f2.postMessage(data, "*");
        } catch (e) {
          console.error("sending over postmessage fail");
        }
      });
      return Promise.resolve(null);
    }
  }, {
    key: "flush",
    value: function flush() {
      var _this3 = this;
      var buffer = this.buffer;
      this.buffer = [];
      buffer.forEach(function(item) {
        _this3.send(item.event).then(item.resolve).catch(item.reject);
      });
    }
  }, {
    key: "getFrames",
    value: function getFrames(target) {
      if (this.config.page === "manager") {
        var nodes2 = _toConsumableArray11(document5.querySelectorAll("iframe[data-is-storybook][data-is-loaded]"));
        var list = nodes2.filter(function(e) {
          try {
            return !!e.contentWindow && e.dataset.isStorybook !== void 0 && e.id === target;
          } catch (er) {
            return false;
          }
        }).map(function(e) {
          return e.contentWindow;
        });
        return list.length ? list : this.getCurrentFrames();
      }
      if (globalWindow3 && globalWindow3.parent && globalWindow3.parent !== globalWindow3) {
        return [globalWindow3.parent];
      }
      return [];
    }
  }, {
    key: "getCurrentFrames",
    value: function getCurrentFrames() {
      if (this.config.page === "manager") {
        var list = _toConsumableArray11(document5.querySelectorAll('[data-is-storybook="true"]'));
        return list.map(function(e) {
          return e.contentWindow;
        });
      }
      if (globalWindow3 && globalWindow3.parent) {
        return [globalWindow3.parent];
      }
      return [];
    }
  }, {
    key: "getLocalFrame",
    value: function getLocalFrame() {
      if (this.config.page === "manager") {
        var list = _toConsumableArray11(document5.querySelectorAll("#storybook-preview-iframe"));
        return list.map(function(e) {
          return e.contentWindow;
        });
      }
      if (globalWindow3 && globalWindow3.parent) {
        return [globalWindow3.parent];
      }
      return [];
    }
  }, {
    key: "handleEvent",
    value: function handleEvent(rawEvent) {
      try {
        var data = rawEvent.data;
        var _ref42 = typeof data === "string" && isJSON(data) ? parse2(data, import_global15.default.CHANNEL_OPTIONS || {}) : data, key2 = _ref42.key, event = _ref42.event, refId = _ref42.refId;
        if (key2 === KEY2) {
          var pageString = this.config.page === "manager" ? '<span style="color: #37D5D3; background: black"> manager </span>' : '<span style="color: #1EA7FD; background: black"> preview </span>';
          var eventString = Object.values(esm_exports).includes(event.type) ? '<span style="color: #FF4785">'.concat(event.type, "</span>") : '<span style="color: #FFAE00">'.concat(event.type, "</span>");
          if (refId) {
            event.refId = refId;
          }
          event.source = this.config.page === "preview" ? rawEvent.origin : getEventSourceUrl(rawEvent);
          if (!event.source) {
            pretty.error("".concat(pageString, " received ").concat(eventString, " but was unable to determine the source of the event"));
            return;
          }
          var message = "".concat(pageString, " received ").concat(eventString, " (").concat(data.length, ")");
          pretty.debug.apply(pretty, [location.origin !== event.source ? message : "".concat(message, ' <span style="color: gray">(on ').concat(location.origin, " from ").concat(event.source, ")</span>")].concat(_toConsumableArray11(event.args)));
          this.handler(event);
        }
      } catch (error) {
        logger.error(error);
      }
    }
  }]);
  return PostmsgTransport2;
}();
var getEventSourceUrl = function getEventSourceUrl2(event) {
  var frames = _toConsumableArray11(document5.querySelectorAll("iframe[data-is-storybook]"));
  var _frames$filter = frames.filter(function(element) {
    try {
      return element.contentWindow === event.source;
    } catch (err) {
    }
    var src2 = element.getAttribute("src");
    var origin;
    try {
      var _URL = new URL(src2, document5.location);
      origin = _URL.origin;
    } catch (err) {
      return false;
    }
    return origin === event.origin;
  }), _frames$filter2 = _toArray2(_frames$filter), frame = _frames$filter2[0], remainder = _frames$filter2.slice(1);
  if (frame && remainder.length === 0) {
    var src = frame.getAttribute("src");
    var _URL2 = new URL(src, document5.location), protocol = _URL2.protocol, host = _URL2.host, pathname = _URL2.pathname;
    return "".concat(protocol, "//").concat(host).concat(pathname);
  }
  if (remainder.length > 0) {
    logger.error("found multiple candidates for event source");
  }
  return null;
};
function createChannel(_ref52) {
  var page = _ref52.page;
  var transport = new PostmsgTransport({
    page
  });
  return new esm_default3({
    transport
  });
}

// .yarn/__virtual__/@storybook-core-client-virtual-0b8a7627b1/0/cache/@storybook-core-client-npm-6.5.13-17eb95de25-c4350b1b57.zip/node_modules/@storybook/core-client/dist/esm/preview/executeLoadable.js
var import_es_array_iterator24 = __toESM(require_es_array_iterator());
var import_es_string_iterator25 = __toESM(require_es_string_iterator());
var import_es_regexp_exec27 = __toESM(require_es_regexp_exec());
function _slicedToArray15(arr, i) {
  return _arrayWithHoles16(arr) || _iterableToArrayLimit15(arr, i) || _unsupportedIterableToArray21(arr, i) || _nonIterableRest16();
}
function _nonIterableRest16() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray21(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray21(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray21(o, minLen);
}
function _arrayLikeToArray21(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit15(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles16(arr) {
  if (Array.isArray(arr))
    return arr;
}
function executeLoadable(loadable) {
  var reqs = null;
  if (Array.isArray(loadable)) {
    reqs = loadable;
  } else if (loadable.keys) {
    reqs = [loadable];
  }
  var exportsMap = /* @__PURE__ */ new Map();
  if (reqs) {
    reqs.forEach(function(req) {
      req.keys().forEach(function(filename) {
        try {
          var fileExports = req(filename);
          exportsMap.set(typeof req.resolve === "function" ? req.resolve(filename) : filename, fileExports);
        } catch (error) {
          var errorString = error.message && error.stack ? "".concat(error.message, "\n ").concat(error.stack) : error.toString();
          logger.error("Unexpected error while loading ".concat(filename, ": ").concat(errorString));
        }
      });
    });
  } else {
    var exported = loadable();
    if (Array.isArray(exported) && exported.every(function(obj) {
      return obj.default != null;
    })) {
      exportsMap = new Map(exported.map(function(fileExports, index) {
        return ["exports-map-".concat(index), fileExports];
      }));
    } else if (exported) {
      logger.warn("Loader function passed to 'configure' should return void or an array of module exports that all contain a 'default' export. Received: ".concat(JSON.stringify(exported)));
    }
  }
  return exportsMap;
}
function executeLoadableForChanges(loadable, m) {
  var _m$hot, _m$hot$data, _m$hot2;
  var lastExportsMap = (m === null || m === void 0 ? void 0 : (_m$hot = m.hot) === null || _m$hot === void 0 ? void 0 : (_m$hot$data = _m$hot.data) === null || _m$hot$data === void 0 ? void 0 : _m$hot$data.lastExportsMap) || /* @__PURE__ */ new Map();
  if (m !== null && m !== void 0 && (_m$hot2 = m.hot) !== null && _m$hot2 !== void 0 && _m$hot2.dispose) {
    m.hot.accept();
    m.hot.dispose(function(data) {
      data.lastExportsMap = lastExportsMap;
    });
  }
  var exportsMap = executeLoadable(loadable);
  var added = /* @__PURE__ */ new Map();
  Array.from(exportsMap.entries()).filter(function(_ref) {
    var _ref22 = _slicedToArray15(_ref, 2), fileExports = _ref22[1];
    return !!fileExports.default;
  }).filter(function(_ref32) {
    var _ref42 = _slicedToArray15(_ref32, 2), fileName = _ref42[0], fileExports = _ref42[1];
    return lastExportsMap.get(fileName) !== fileExports;
  }).forEach(function(_ref52) {
    var _ref6 = _slicedToArray15(_ref52, 2), fileName = _ref6[0], fileExports = _ref6[1];
    return added.set(fileName, fileExports);
  });
  var removed = /* @__PURE__ */ new Map();
  Array.from(lastExportsMap.keys()).filter(function(fileName) {
    return !exportsMap.has(fileName);
  }).forEach(function(fileName) {
    return removed.set(fileName, lastExportsMap.get(fileName));
  });
  lastExportsMap = exportsMap;
  return {
    added,
    removed
  };
}

// .yarn/__virtual__/@storybook-core-client-virtual-0b8a7627b1/0/cache/@storybook-core-client-npm-6.5.13-17eb95de25-c4350b1b57.zip/node_modules/@storybook/core-client/dist/esm/preview/start.js
function _slicedToArray16(arr, i) {
  return _arrayWithHoles17(arr) || _iterableToArrayLimit16(arr, i) || _unsupportedIterableToArray22(arr, i) || _nonIterableRest17();
}
function _nonIterableRest17() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray22(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray22(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray22(o, minLen);
}
function _arrayLikeToArray22(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit16(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles17(arr) {
  if (Array.isArray(arr))
    return arr;
}
var globalWindow4 = import_global16.default.window;
var FEATURES = import_global16.default.FEATURES;
var configureDeprecationWarning = (0, import_util_deprecate7.default)(function() {
}, "`configure()` is deprecated and will be removed in Storybook 7.0. \nPlease use the `stories` field of `main.js` to load stories.\nRead more at https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#deprecated-configure");
var removedApi = function removedApi2(name2) {
  return function() {
    throw new Error("@storybook/client-api:".concat(name2, " was removed in storyStoreV7."));
  };
};
function start(renderToDOM2) {
  var _ref = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, decorateStory2 = _ref.decorateStory, render3 = _ref.render;
  if (globalWindow4) {
    globalWindow4.IS_STORYBOOK = true;
  }
  if (FEATURES !== null && FEATURES !== void 0 && FEATURES.storyStoreV7) {
    return {
      forceReRender: removedApi("forceReRender"),
      getStorybook: removedApi("getStorybook"),
      configure: removedApi("configure"),
      clientApi: {
        addDecorator: removedApi("clientApi.addDecorator"),
        addParameters: removedApi("clientApi.addParameters"),
        clearDecorators: removedApi("clientApi.clearDecorators"),
        addLoader: removedApi("clientApi.addLoader"),
        setAddon: removedApi("clientApi.setAddon"),
        getStorybook: removedApi("clientApi.getStorybook"),
        storiesOf: removedApi("clientApi.storiesOf"),
        raw: removedApi("raw")
      }
    };
  }
  var channel = createChannel({
    page: "preview"
  });
  addons.setChannel(channel);
  var clientApi = new ClientApi();
  var preview = new PreviewWeb();
  var initialized = false;
  var importFn = function importFn2(path) {
    return clientApi.importFn(path);
  };
  function onStoriesChanged() {
    var storyIndex = clientApi.getStoryIndex();
    preview.onStoriesChanged({
      storyIndex,
      importFn
    });
  }
  clientApi.onImportFnChanged = onStoriesChanged;
  clientApi.storyStore = preview.storyStore;
  if (globalWindow4) {
    globalWindow4.__STORYBOOK_CLIENT_API__ = clientApi;
    globalWindow4.__STORYBOOK_ADDONS_CHANNEL__ = channel;
    globalWindow4.__STORYBOOK_PREVIEW__ = preview;
    globalWindow4.__STORYBOOK_STORY_STORE__ = preview.storyStore;
  }
  return {
    forceReRender: function forceReRender2() {
      return channel.emit(esm_default2.FORCE_RE_RENDER);
    },
    getStorybook: function getStorybook2() {
      return [];
    },
    raw: function raw2() {
    },
    clientApi,
    configure: function configure3(framework2, loadable, m) {
      var showDeprecationWarning = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : true;
      if (showDeprecationWarning) {
        configureDeprecationWarning();
      }
      clientApi.addParameters({
        framework: framework2
      });
      var getProjectAnnotations = function getProjectAnnotations2() {
        var _executeLoadableForCh = executeLoadableForChanges(loadable, m), added = _executeLoadableForCh.added, removed = _executeLoadableForCh.removed;
        Array.from(added.entries()).forEach(function(_ref22) {
          var _ref32 = _slicedToArray16(_ref22, 2), fileName = _ref32[0], fileExports = _ref32[1];
          return clientApi.facade.addStoriesFromExports(fileName, fileExports);
        });
        Array.from(removed.entries()).forEach(function(_ref42) {
          var _ref52 = _slicedToArray16(_ref42, 1), fileName = _ref52[0];
          return clientApi.facade.clearFilenameExports(fileName);
        });
        return Object.assign({
          render: render3
        }, clientApi.facade.projectAnnotations, {
          renderToDOM: renderToDOM2,
          applyDecorators: decorateStory2
        });
      };
      if (!initialized) {
        preview.initialize({
          getStoryIndex: function getStoryIndex() {
            return clientApi.getStoryIndex();
          },
          importFn,
          getProjectAnnotations
        });
        initialized = true;
      } else {
        getProjectAnnotations();
        onStoriesChanged();
      }
    }
  };
}

// .yarn/__virtual__/@storybook-react-virtual-25e136dfb1/0/cache/@storybook-react-npm-6.5.13-a3e3de31d4-5a21e4e49a.zip/node_modules/@storybook/react/dist/esm/client/preview/globals.js
var import_global17 = __toESM(require_window());
var globalWindow5 = import_global17.default.window;
if (globalWindow5) {
  globalWindow5.STORYBOOK_ENV = "react";
}

// .yarn/__virtual__/@storybook-react-virtual-25e136dfb1/0/cache/@storybook-react-npm-6.5.13-a3e3de31d4-5a21e4e49a.zip/node_modules/@storybook/react/dist/esm/client/preview/render.js
var import_runtime7 = __toESM(require_runtime());
var import_es_array_iterator26 = __toESM(require_es_array_iterator());
var import_es_string_iterator27 = __toESM(require_es_string_iterator());
var import_global18 = __toESM(require_window());
var import_react = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());
function _typeof6(obj) {
  "@babel/helpers - typeof";
  return _typeof6 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof6(obj);
}
function _classCallCheck16(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties16(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass16(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties16(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties16(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _inherits2(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass)
    _setPrototypeOf2(subClass, superClass);
}
function _setPrototypeOf2(o, p) {
  _setPrototypeOf2 = Object.setPrototypeOf || function _setPrototypeOf3(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf2(o, p);
}
function _createSuper2(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct2();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf2(Derived), result2;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf2(this).constructor;
      result2 = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result2 = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn2(this, result2);
  };
}
function _possibleConstructorReturn2(self, call) {
  if (call && (_typeof6(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized2(self);
}
function _assertThisInitialized2(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function _isNativeReflectConstruct2() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf2(o) {
  _getPrototypeOf2 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf3(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf2(o);
}
function asyncGeneratorStep7(gen, resolve, reject, _next, _throw, key2, arg) {
  try {
    var info = gen[key2](arg);
    var value2 = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value2);
  } else {
    Promise.resolve(value2).then(_next, _throw);
  }
}
function _asyncToGenerator7(fn) {
  return function() {
    var self = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value2) {
        asyncGeneratorStep7(gen, resolve, reject, _next, _throw, "next", value2);
      }
      function _throw(err) {
        asyncGeneratorStep7(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}
var FRAMEWORK_OPTIONS = import_global18.default.FRAMEWORK_OPTIONS;
var nodes = /* @__PURE__ */ new Map();
var render = function render2(args, context) {
  var id = context.id, Component = context.component;
  if (!Component) {
    throw new Error("Unable to render story ".concat(id, " as the component annotation is missing from the default export"));
  }
  return import_react.default.createElement(Component, args);
};
var WithCallback = function WithCallback2(_ref) {
  var callback = _ref.callback, children = _ref.children;
  var once2 = (0, import_react.useRef)();
  (0, import_react.useLayoutEffect)(function() {
    if (once2.current === callback)
      return;
    once2.current = callback;
    callback();
  }, [callback]);
  return children;
};
var renderElement = function() {
  var _ref22 = _asyncToGenerator7(regeneratorRuntime.mark(function _callee(node, el) {
    var root2;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return getReactRoot(el);
          case 2:
            root2 = _context.sent;
            return _context.abrupt("return", new Promise(function(resolve) {
              if (root2) {
                root2.render(import_react.default.createElement(WithCallback, {
                  callback: function callback() {
                    return resolve(null);
                  }
                }, node));
              } else {
                import_react_dom.default.render(node, el, function() {
                  return resolve(null);
                });
              }
            }));
          case 4:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return function renderElement2(_x, _x2) {
    return _ref22.apply(this, arguments);
  };
}();
var canUseNewReactRootApi = import_react_dom.version && (import_react_dom.version.startsWith("18") || import_react_dom.version.startsWith("0.0.0"));
var shouldUseNewRootApi = (FRAMEWORK_OPTIONS === null || FRAMEWORK_OPTIONS === void 0 ? void 0 : FRAMEWORK_OPTIONS.legacyRootApi) !== true;
var isUsingNewReactRootApi = shouldUseNewRootApi && canUseNewReactRootApi;
var unmountElement = function unmountElement2(el) {
  var root2 = nodes.get(el);
  if (root2 && isUsingNewReactRootApi) {
    root2.unmount();
    nodes.delete(el);
  } else {
    import_react_dom.default.unmountComponentAtNode(el);
  }
};
var getReactRoot = function() {
  var _ref32 = _asyncToGenerator7(regeneratorRuntime.mark(function _callee2(el) {
    var root2, reactDomClient;
    return regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            if (isUsingNewReactRootApi) {
              _context2.next = 2;
              break;
            }
            return _context2.abrupt("return", null);
          case 2:
            root2 = nodes.get(el);
            if (root2) {
              _context2.next = 9;
              break;
            }
            _context2.next = 6;
            return import("./react-dom_client.js");
          case 6:
            reactDomClient = _context2.sent.default;
            root2 = reactDomClient.createRoot(el);
            nodes.set(el, root2);
          case 9:
            return _context2.abrupt("return", root2);
          case 10:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return function getReactRoot2(_x3) {
    return _ref32.apply(this, arguments);
  };
}();
var ErrorBoundary = function(_ReactComponent) {
  _inherits2(ErrorBoundary2, _ReactComponent);
  var _super = _createSuper2(ErrorBoundary2);
  function ErrorBoundary2() {
    var _this;
    _classCallCheck16(this, ErrorBoundary2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = {
      hasError: false
    };
    return _this;
  }
  _createClass16(ErrorBoundary2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var hasError = this.state.hasError;
      var showMain = this.props.showMain;
      if (!hasError) {
        showMain();
      }
    }
  }, {
    key: "componentDidCatch",
    value: function componentDidCatch(err) {
      var showException = this.props.showException;
      showException(err);
    }
  }, {
    key: "render",
    value: function render3() {
      var hasError = this.state.hasError;
      var children = this.props.children;
      return hasError ? null : children;
    }
  }], [{
    key: "getDerivedStateFromError",
    value: function getDerivedStateFromError() {
      return {
        hasError: true
      };
    }
  }]);
  return ErrorBoundary2;
}(import_react.Component);
var Wrapper = FRAMEWORK_OPTIONS !== null && FRAMEWORK_OPTIONS !== void 0 && FRAMEWORK_OPTIONS.strictMode ? import_react.StrictMode : import_react.Fragment;
function renderToDOM(_x4, _x5) {
  return _renderToDOM.apply(this, arguments);
}
function _renderToDOM() {
  _renderToDOM = _asyncToGenerator7(regeneratorRuntime.mark(function _callee3(_ref42, domElement) {
    var storyContext, unboundStoryFn, showMain, showException, forceRemount, Story, content, element;
    return regeneratorRuntime.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            storyContext = _ref42.storyContext, unboundStoryFn = _ref42.unboundStoryFn, showMain = _ref42.showMain, showException = _ref42.showException, forceRemount = _ref42.forceRemount;
            Story = unboundStoryFn;
            content = import_react.default.createElement(ErrorBoundary, {
              showMain,
              showException
            }, import_react.default.createElement(Story, storyContext));
            element = Wrapper ? import_react.default.createElement(Wrapper, null, content) : content;
            if (forceRemount) {
              unmountElement(domElement);
            }
            _context3.next = 7;
            return renderElement(element, domElement);
          case 7:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return _renderToDOM.apply(this, arguments);
}

// .yarn/__virtual__/@storybook-react-virtual-25e136dfb1/0/cache/@storybook-react-npm-6.5.13-a3e3de31d4-5a21e4e49a.zip/node_modules/@storybook/react/dist/esm/client/preview/index.js
var framework = "react";
var api = start(renderToDOM, {
  render
});
var storiesOf = function storiesOf2(kind, m) {
  return api.clientApi.storiesOf(kind, m).addParameters({
    framework
  });
};
var configure = function configure2() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return api.configure.apply(api, [framework].concat(args));
};
var addDecorator2 = api.clientApi.addDecorator;
var addParameters2 = api.clientApi.addParameters;
var clearDecorators = api.clientApi.clearDecorators;
var setAddon = api.clientApi.setAddon;
var forceReRender = api.forceReRender;
var getStorybook = api.clientApi.getStorybook;
var raw = api.clientApi.raw;

// .yarn/__virtual__/@storybook-react-virtual-25e136dfb1/0/cache/@storybook-react-npm-6.5.13-a3e3de31d4-5a21e4e49a.zip/node_modules/@storybook/react/dist/esm/client/testing/index.js
function setProjectAnnotations2(projectAnnotations) {
  setProjectAnnotations(projectAnnotations);
}
function setGlobalConfig(projectAnnotations) {
  once.warn("setGlobalConfig is deprecated. Use setProjectAnnotations instead.");
  setProjectAnnotations2(projectAnnotations);
}
var defaultProjectAnnotations = {
  render
};
function composeStory2(story, componentAnnotations, projectAnnotations, exportsName) {
  return composeStory(story, componentAnnotations, projectAnnotations, defaultProjectAnnotations, exportsName);
}
function composeStories2(csfExports, projectAnnotations) {
  var composedStories = composeStories(csfExports, projectAnnotations, composeStory2);
  return composedStories;
}

// .yarn/__virtual__/@storybook-react-virtual-25e136dfb1/0/cache/@storybook-react-npm-6.5.13-a3e3de31d4-5a21e4e49a.zip/node_modules/@storybook/react/dist/esm/client/index.js
if (module && module.hot && module.hot.decline) {
  module.hot.decline();
}
export {
  addDecorator2 as addDecorator,
  addParameters2 as addParameters,
  composeStories2 as composeStories,
  composeStory2 as composeStory,
  configure,
  forceReRender,
  getStorybook,
  raw,
  setAddon,
  setGlobalConfig,
  setProjectAnnotations2 as setProjectAnnotations,
  storiesOf
};
/*!
 * isobject <https://github.com/jonschlinkert/isobject>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */
//# sourceMappingURL=@storybook_react.js.map
