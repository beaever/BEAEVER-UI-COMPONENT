import {
  require_ansi_to_html,
  require_dist,
  require_fast_deep_equal,
  require_isPlainObject,
  require_lib,
  require_mapValues,
  require_memoizerific,
  require_pick,
  require_pickBy,
  require_slash,
  require_stable,
  require_synchronous_promise
} from "./chunk-2NFKVEEQ.js";
import {
  esm_default,
  require_browser,
  require_es_array_iterator,
  require_es_regexp_exec,
  require_es_string_iterator,
  require_window
} from "./chunk-QTR6WGAC.js";
import {
  require_runtime
} from "./chunk-DALT7HYU.js";
import "./chunk-HS3RR5N4.js";
import {
  __toESM
} from "./chunk-S5KM4IGW.js";

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/StoryStore.js
var import_runtime2 = __toESM(require_runtime());
var import_es_array_iterator15 = __toESM(require_es_array_iterator());
var import_es_string_iterator15 = __toESM(require_es_string_iterator());
var import_es_regexp_exec16 = __toESM(require_es_regexp_exec());
var import_memoizerific = __toESM(require_memoizerific());
var import_mapValues4 = __toESM(require_mapValues());
var import_pick = __toESM(require_pick());
var import_global5 = __toESM(require_window());
var import_synchronous_promise = __toESM(require_synchronous_promise());

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/StoryIndexStore.js
var import_es_array_iterator = __toESM(require_es_array_iterator());
var import_es_string_iterator = __toESM(require_es_string_iterator());
var import_es_regexp_exec = __toESM(require_es_regexp_exec());
var _templateObject;
function _taggedTemplateLiteral(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
var StoryIndexStore = function() {
  function StoryIndexStore2() {
    var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {
      v: 3,
      stories: {}
    }, stories = _ref.stories;
    _classCallCheck(this, StoryIndexStore2);
    this.channel = void 0;
    this.stories = void 0;
    this.stories = stories;
  }
  _createClass(StoryIndexStore2, [{
    key: "storyIdFromSpecifier",
    value: function storyIdFromSpecifier(specifier) {
      var storyIds = Object.keys(this.stories);
      if (specifier === "*") {
        return storyIds[0];
      }
      if (typeof specifier === "string") {
        if (storyIds.indexOf(specifier) >= 0) {
          return specifier;
        }
        return storyIds.find(function(storyId) {
          return storyId.startsWith(specifier);
        });
      }
      var name = specifier.name, title = specifier.title;
      var match = Object.entries(this.stories).find(function(_ref2) {
        var _ref3 = _slicedToArray(_ref2, 2), id = _ref3[0], story = _ref3[1];
        return story.name === name && story.title === title;
      });
      return match && match[0];
    }
  }, {
    key: "storyIdToEntry",
    value: function storyIdToEntry(storyId) {
      var storyEntry = this.stories[storyId];
      if (!storyEntry) {
        throw new Error(esm_default(_templateObject || (_templateObject = _taggedTemplateLiteral(["Couldn't find story matching '", "' after HMR.\n      - Did you remove it from your CSF file?\n      - Are you sure a story with that id exists?\n      - Please check your stories field of your main.js config.\n      - Also check the browser console and terminal for error messages."])), storyId));
      }
      return storyEntry;
    }
  }]);
  return StoryIndexStore2;
}();

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/args.js
var import_es_array_iterator3 = __toESM(require_es_array_iterator());
var import_es_string_iterator3 = __toESM(require_es_string_iterator());
var import_es_regexp_exec3 = __toESM(require_es_regexp_exec());
var import_fast_deep_equal = __toESM(require_fast_deep_equal());

// .yarn/cache/@storybook-client-logger-npm-6.5.14-89c2edc860-29cc0b58db.zip/node_modules/@storybook/client-logger/dist/esm/index.js
var import_es_array_iterator2 = __toESM(require_es_array_iterator());
var import_es_string_iterator2 = __toESM(require_es_string_iterator());
var import_es_regexp_exec2 = __toESM(require_es_regexp_exec());
var import_global = __toESM(require_window());
var LOGLEVEL = import_global.default.LOGLEVEL;
var console = import_global.default.console;
var levels = {
  trace: 1,
  debug: 2,
  info: 3,
  warn: 4,
  error: 5,
  silent: 10
};
var currentLogLevelString = LOGLEVEL;
var currentLogLevelNumber = levels[currentLogLevelString] || levels.info;
var logger = {
  trace: function trace(message) {
    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      rest[_key - 1] = arguments[_key];
    }
    return currentLogLevelNumber <= levels.trace && console.trace.apply(console, [message].concat(rest));
  },
  debug: function debug(message) {
    for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      rest[_key2 - 1] = arguments[_key2];
    }
    return currentLogLevelNumber <= levels.debug && console.debug.apply(console, [message].concat(rest));
  },
  info: function info(message) {
    for (var _len3 = arguments.length, rest = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
      rest[_key3 - 1] = arguments[_key3];
    }
    return currentLogLevelNumber <= levels.info && console.info.apply(console, [message].concat(rest));
  },
  warn: function warn(message) {
    for (var _len4 = arguments.length, rest = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
      rest[_key4 - 1] = arguments[_key4];
    }
    return currentLogLevelNumber <= levels.warn && console.warn.apply(console, [message].concat(rest));
  },
  error: function error(message) {
    for (var _len5 = arguments.length, rest = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {
      rest[_key5 - 1] = arguments[_key5];
    }
    return currentLogLevelNumber <= levels.error && console.error.apply(console, [message].concat(rest));
  },
  log: function log(message) {
    for (var _len6 = arguments.length, rest = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {
      rest[_key6 - 1] = arguments[_key6];
    }
    return currentLogLevelNumber < levels.silent && console.log.apply(console, [message].concat(rest));
  }
};
var logged = /* @__PURE__ */ new Set();
var once = function once2(type) {
  return function(message) {
    if (logged.has(message))
      return void 0;
    logged.add(message);
    for (var _len7 = arguments.length, rest = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {
      rest[_key7 - 1] = arguments[_key7];
    }
    return logger[type].apply(logger, [message].concat(rest));
  };
};
once.clear = function() {
  return logged.clear();
};
once.trace = once("trace");
once.debug = once("debug");
once.info = once("info");
once.warn = once("warn");
once.error = once("error");
once.log = once("log");
var pretty = function pretty2(type) {
  return function() {
    var argArray = [];
    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
      args[_key8] = arguments[_key8];
    }
    if (args.length) {
      var startTagRe = /<span\s+style=(['"])([^'"]*)\1\s*>/gi;
      var endTagRe = /<\/span>/gi;
      var reResultArray;
      argArray.push(args[0].replace(startTagRe, "%c").replace(endTagRe, "%c"));
      while (reResultArray = startTagRe.exec(args[0])) {
        argArray.push(reResultArray[2]);
        argArray.push("");
      }
      for (var j = 1; j < args.length; j++) {
        argArray.push(args[j]);
      }
    }
    logger[type].apply(logger, argArray);
  };
};
pretty.trace = pretty("trace");
pretty.debug = pretty("debug");
pretty.info = pretty("info");
pretty.warn = pretty("warn");
pretty.error = pretty("error");

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/args.js
var import_isPlainObject = __toESM(require_isPlainObject());
var _templateObject2;
var _templateObject22;
function _taggedTemplateLiteral2(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray2(arr);
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _slicedToArray2(arr, i) {
  return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i) || _unsupportedIterableToArray2(arr, i) || _nonIterableRest2();
}
function _nonIterableRest2() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray2(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray2(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray2(o, minLen);
}
function _arrayLikeToArray2(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit2(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles2(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _typeof(obj) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof(obj);
}
var INCOMPATIBLE = Symbol("incompatible");
var map = function map2(arg, argType) {
  var type = argType.type;
  if (arg === void 0 || arg === null || !type)
    return arg;
  if (argType.mapping) {
    return arg;
  }
  switch (type.name) {
    case "string":
      return String(arg);
    case "enum":
      return arg;
    case "number":
      return Number(arg);
    case "boolean":
      return arg === "true";
    case "array":
      if (!type.value || !Array.isArray(arg))
        return INCOMPATIBLE;
      return arg.reduce(function(acc, item, index) {
        var mapped = map2(item, {
          type: type.value
        });
        if (mapped !== INCOMPATIBLE)
          acc[index] = mapped;
        return acc;
      }, new Array(arg.length));
    case "object":
      if (typeof arg === "string" || typeof arg === "number")
        return arg;
      if (!type.value || _typeof(arg) !== "object")
        return INCOMPATIBLE;
      return Object.entries(arg).reduce(function(acc, _ref) {
        var _ref2 = _slicedToArray2(_ref, 2), key = _ref2[0], val = _ref2[1];
        var mapped = map2(val, {
          type: type.value[key]
        });
        return mapped === INCOMPATIBLE ? acc : Object.assign(acc, _defineProperty({}, key, mapped));
      }, {});
    default:
      return INCOMPATIBLE;
  }
};
var mapArgsToTypes = function mapArgsToTypes2(args, argTypes) {
  return Object.entries(args).reduce(function(acc, _ref3) {
    var _ref4 = _slicedToArray2(_ref3, 2), key = _ref4[0], value = _ref4[1];
    if (!argTypes[key])
      return acc;
    var mapped = map(value, argTypes[key]);
    return mapped === INCOMPATIBLE ? acc : Object.assign(acc, _defineProperty({}, key, mapped));
  }, {});
};
var combineArgs = function combineArgs2(value, update) {
  if (Array.isArray(value) && Array.isArray(update)) {
    return update.reduce(function(acc, upd, index) {
      acc[index] = combineArgs2(value[index], update[index]);
      return acc;
    }, _toConsumableArray(value)).filter(function(v) {
      return v !== void 0;
    });
  }
  if (!(0, import_isPlainObject.default)(value) || !(0, import_isPlainObject.default)(update))
    return update;
  return Object.keys(Object.assign({}, value, update)).reduce(function(acc, key) {
    if (key in update) {
      var combined = combineArgs2(value[key], update[key]);
      if (combined !== void 0)
        acc[key] = combined;
    } else {
      acc[key] = value[key];
    }
    return acc;
  }, {});
};
var validateOptions = function validateOptions2(args, argTypes) {
  return Object.entries(argTypes).reduce(function(acc, _ref5) {
    var _ref6 = _slicedToArray2(_ref5, 2), key = _ref6[0], options = _ref6[1].options;
    function allowArg() {
      if (key in args) {
        acc[key] = args[key];
      }
      return acc;
    }
    if (!options)
      return allowArg();
    if (!Array.isArray(options)) {
      once.error(esm_default(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral2(["\n        Invalid argType: '", ".options' should be an array.\n\n        More info: https://storybook.js.org/docs/react/api/argtypes\n      "])), key));
      return allowArg();
    }
    if (options.some(function(opt) {
      return opt && ["object", "function"].includes(_typeof(opt));
    })) {
      once.error(esm_default(_templateObject22 || (_templateObject22 = _taggedTemplateLiteral2(["\n        Invalid argType: '", ".options' should only contain primitives. Use a 'mapping' for complex values.\n\n        More info: https://storybook.js.org/docs/react/writing-stories/args#mapping-to-complex-arg-values\n      "])), key));
      return allowArg();
    }
    var isArray = Array.isArray(args[key]);
    var invalidIndex = isArray && args[key].findIndex(function(val) {
      return !options.includes(val);
    });
    var isValidArray = isArray && invalidIndex === -1;
    if (args[key] === void 0 || options.includes(args[key]) || isValidArray) {
      return allowArg();
    }
    var field = isArray ? "".concat(key, "[").concat(invalidIndex, "]") : key;
    var supportedOptions = options.map(function(opt) {
      return typeof opt === "string" ? "'".concat(opt, "'") : String(opt);
    }).join(", ");
    once.warn("Received illegal value for '".concat(field, "'. Supported options: ").concat(supportedOptions));
    return acc;
  }, {});
};
var DEEPLY_EQUAL = Symbol("Deeply equal");
var deepDiff = function deepDiff2(value, update) {
  if (_typeof(value) !== _typeof(update))
    return update;
  if ((0, import_fast_deep_equal.default)(value, update))
    return DEEPLY_EQUAL;
  if (Array.isArray(value) && Array.isArray(update)) {
    var res = update.reduce(function(acc, upd, index) {
      var diff = deepDiff2(value[index], upd);
      if (diff !== DEEPLY_EQUAL)
        acc[index] = diff;
      return acc;
    }, new Array(update.length));
    if (update.length >= value.length)
      return res;
    return res.concat(new Array(value.length - update.length).fill(void 0));
  }
  if ((0, import_isPlainObject.default)(value) && (0, import_isPlainObject.default)(update)) {
    return Object.keys(Object.assign({}, value, update)).reduce(function(acc, key) {
      var diff = deepDiff2(value === null || value === void 0 ? void 0 : value[key], update === null || update === void 0 ? void 0 : update[key]);
      return diff === DEEPLY_EQUAL ? acc : Object.assign(acc, _defineProperty({}, key, diff));
    }, {});
  }
  return update;
};
var NO_TARGET_NAME = "";
function groupArgsByTarget(_ref7) {
  var args = _ref7.args, argTypes = _ref7.argTypes;
  var groupedArgs = {};
  Object.entries(args).forEach(function(_ref8) {
    var _ref9 = _slicedToArray2(_ref8, 2), name = _ref9[0], value = _ref9[1];
    var _ref10 = argTypes[name] || {}, _ref10$target = _ref10.target, target = _ref10$target === void 0 ? NO_TARGET_NAME : _ref10$target;
    groupedArgs[target] = groupedArgs[target] || {};
    groupedArgs[target][name] = value;
  });
  return groupedArgs;
}

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/ArgsStore.js
function _classCallCheck2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties2(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass2(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties2(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties2(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function deleteUndefined(obj) {
  Object.keys(obj).forEach(function(key) {
    return obj[key] === void 0 && delete obj[key];
  });
  return obj;
}
var ArgsStore = function() {
  function ArgsStore2() {
    _classCallCheck2(this, ArgsStore2);
    this.initialArgsByStoryId = {};
    this.argsByStoryId = {};
  }
  _createClass2(ArgsStore2, [{
    key: "get",
    value: function get(storyId) {
      if (!(storyId in this.argsByStoryId)) {
        throw new Error("No args known for ".concat(storyId, " -- has it been rendered yet?"));
      }
      return this.argsByStoryId[storyId];
    }
  }, {
    key: "setInitial",
    value: function setInitial(story) {
      if (!this.initialArgsByStoryId[story.id]) {
        this.initialArgsByStoryId[story.id] = story.initialArgs;
        this.argsByStoryId[story.id] = story.initialArgs;
      } else if (this.initialArgsByStoryId[story.id] !== story.initialArgs) {
        var delta = deepDiff(this.initialArgsByStoryId[story.id], this.argsByStoryId[story.id]);
        this.initialArgsByStoryId[story.id] = story.initialArgs;
        this.argsByStoryId[story.id] = story.initialArgs;
        if (delta !== DEEPLY_EQUAL) {
          this.updateFromDelta(story, delta);
        }
      }
    }
  }, {
    key: "updateFromDelta",
    value: function updateFromDelta(story, delta) {
      var validatedDelta = validateOptions(delta, story.argTypes);
      this.argsByStoryId[story.id] = combineArgs(this.argsByStoryId[story.id], validatedDelta);
    }
  }, {
    key: "updateFromPersisted",
    value: function updateFromPersisted(story, persisted) {
      var mappedPersisted = mapArgsToTypes(persisted, story.argTypes);
      return this.updateFromDelta(story, mappedPersisted);
    }
  }, {
    key: "update",
    value: function update(storyId, argsUpdate) {
      if (!(storyId in this.argsByStoryId)) {
        throw new Error("No args known for ".concat(storyId, " -- has it been rendered yet?"));
      }
      this.argsByStoryId[storyId] = deleteUndefined(Object.assign({}, this.argsByStoryId[storyId], argsUpdate));
    }
  }]);
  return ArgsStore2;
}();

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/GlobalsStore.js
var import_es_regexp_exec5 = __toESM(require_es_regexp_exec());
var import_es_array_iterator5 = __toESM(require_es_array_iterator());
var import_es_string_iterator5 = __toESM(require_es_string_iterator());
var import_util_deprecate = __toESM(require_browser());

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/csf/getValuesFromArgTypes.js
var import_es_array_iterator4 = __toESM(require_es_array_iterator());
var import_es_string_iterator4 = __toESM(require_es_string_iterator());
var import_es_regexp_exec4 = __toESM(require_es_regexp_exec());
function _slicedToArray3(arr, i) {
  return _arrayWithHoles3(arr) || _iterableToArrayLimit3(arr, i) || _unsupportedIterableToArray3(arr, i) || _nonIterableRest3();
}
function _nonIterableRest3() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray3(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray3(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray3(o, minLen);
}
function _arrayLikeToArray3(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit3(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles3(arr) {
  if (Array.isArray(arr))
    return arr;
}
var getValuesFromArgTypes = function getValuesFromArgTypes2() {
  var argTypes = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  return Object.entries(argTypes).reduce(function(acc, _ref) {
    var _ref2 = _slicedToArray3(_ref, 2), arg = _ref2[0], defaultValue = _ref2[1].defaultValue;
    if (typeof defaultValue !== "undefined") {
      acc[arg] = defaultValue;
    }
    return acc;
  }, {});
};

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/GlobalsStore.js
var _templateObject3;
function _slicedToArray4(arr, i) {
  return _arrayWithHoles4(arr) || _iterableToArrayLimit4(arr, i) || _unsupportedIterableToArray4(arr, i) || _nonIterableRest4();
}
function _nonIterableRest4() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit4(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles4(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _toConsumableArray2(arr) {
  return _arrayWithoutHoles2(arr) || _iterableToArray2(arr) || _unsupportedIterableToArray4(arr) || _nonIterableSpread2();
}
function _nonIterableSpread2() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray4(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray4(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray4(o, minLen);
}
function _iterableToArray2(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles2(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray4(arr);
}
function _arrayLikeToArray4(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _classCallCheck3(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties3(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass3(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties3(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties3(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _taggedTemplateLiteral3(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var setUndeclaredWarning = (0, import_util_deprecate.default)(function() {
}, esm_default(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral3(["\n    Setting a global value that is undeclared (i.e. not in the user's initial set of globals\n    or globalTypes) is deprecated and will have no effect in 7.0.\n  "]))));
var GlobalsStore = function() {
  function GlobalsStore2() {
    _classCallCheck3(this, GlobalsStore2);
    this.allowedGlobalNames = void 0;
    this.initialGlobals = void 0;
    this.globals = {};
  }
  _createClass3(GlobalsStore2, [{
    key: "set",
    value: function set(_ref) {
      var _ref$globals = _ref.globals, globals = _ref$globals === void 0 ? {} : _ref$globals, _ref$globalTypes = _ref.globalTypes, globalTypes = _ref$globalTypes === void 0 ? {} : _ref$globalTypes;
      var delta = this.initialGlobals && deepDiff(this.initialGlobals, this.globals);
      this.allowedGlobalNames = new Set([].concat(_toConsumableArray2(Object.keys(globals)), _toConsumableArray2(Object.keys(globalTypes))));
      var defaultGlobals = getValuesFromArgTypes(globalTypes);
      this.initialGlobals = Object.assign({}, defaultGlobals, globals);
      this.globals = this.initialGlobals;
      if (delta && delta !== DEEPLY_EQUAL) {
        this.updateFromPersisted(delta);
      }
    }
  }, {
    key: "filterAllowedGlobals",
    value: function filterAllowedGlobals(globals) {
      var _this = this;
      return Object.entries(globals).reduce(function(acc, _ref2) {
        var _ref3 = _slicedToArray4(_ref2, 2), key = _ref3[0], value = _ref3[1];
        if (_this.allowedGlobalNames.has(key))
          acc[key] = value;
        return acc;
      }, {});
    }
  }, {
    key: "updateFromPersisted",
    value: function updateFromPersisted(persisted) {
      var allowedUrlGlobals = this.filterAllowedGlobals(persisted);
      this.globals = Object.assign({}, this.globals, allowedUrlGlobals);
    }
  }, {
    key: "get",
    value: function get() {
      return this.globals;
    }
  }, {
    key: "update",
    value: function update(newGlobals) {
      var _this2 = this;
      Object.keys(newGlobals).forEach(function(key) {
        if (!_this2.allowedGlobalNames.has(key)) {
          setUndeclaredWarning();
        }
      });
      this.globals = Object.assign({}, this.globals, newGlobals);
    }
  }]);
  return GlobalsStore2;
}();

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/csf/normalizeInputTypes.js
var import_mapValues = __toESM(require_mapValues());
var _excluded = ["type", "control"];
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var normalizeType = function normalizeType2(type) {
  return typeof type === "string" ? {
    name: type
  } : type;
};
var normalizeControl = function normalizeControl2(control) {
  return typeof control === "string" ? {
    type: control
  } : control;
};
var normalizeInputType = function normalizeInputType2(inputType, key) {
  var type = inputType.type, control = inputType.control, rest = _objectWithoutProperties(inputType, _excluded);
  var normalized = Object.assign({
    name: key
  }, rest);
  if (type)
    normalized.type = normalizeType(type);
  if (control) {
    normalized.control = normalizeControl(control);
  } else if (control === false) {
    normalized.control = {
      disable: true
    };
  }
  return normalized;
};
var normalizeInputTypes = function normalizeInputTypes2(inputTypes) {
  return (0, import_mapValues.default)(inputTypes, normalizeInputType);
};

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/csf/normalizeStory.js
var import_es_array_iterator6 = __toESM(require_es_array_iterator());
var import_es_string_iterator6 = __toESM(require_es_string_iterator());
var import_es_regexp_exec6 = __toESM(require_es_regexp_exec());
var import_csf = __toESM(require_dist());
var import_util_deprecate2 = __toESM(require_browser());
var _templateObject4;
function _toConsumableArray3(arr) {
  return _arrayWithoutHoles3(arr) || _iterableToArray3(arr) || _unsupportedIterableToArray5(arr) || _nonIterableSpread3();
}
function _nonIterableSpread3() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray5(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray5(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray5(o, minLen);
}
function _iterableToArray3(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles3(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray5(arr);
}
function _arrayLikeToArray5(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _taggedTemplateLiteral4(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var deprecatedStoryAnnotation = esm_default(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral4(["\nCSF .story annotations deprecated; annotate story functions directly:\n- StoryFn.story.name => StoryFn.storyName\n- StoryFn.story.(parameters|decorators) => StoryFn.(parameters|decorators)\nSee https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#hoisted-csf-annotations for details and codemod.\n"])));
var deprecatedStoryAnnotationWarning = (0, import_util_deprecate2.default)(function() {
}, deprecatedStoryAnnotation);
function normalizeStory(key, storyAnnotations, meta) {
  var userStoryFn;
  var storyObject;
  if (typeof storyAnnotations === "function") {
    userStoryFn = storyAnnotations;
    storyObject = storyAnnotations;
  } else {
    storyObject = storyAnnotations;
  }
  var _storyObject = storyObject, story = _storyObject.story;
  if (story) {
    logger.debug("deprecated story", story);
    deprecatedStoryAnnotationWarning();
  }
  var exportName = (0, import_csf.storyNameFromExport)(key);
  var name = typeof storyObject !== "function" && storyObject.name || storyObject.storyName || (story === null || story === void 0 ? void 0 : story.name) || exportName;
  var decorators = [].concat(_toConsumableArray3(storyObject.decorators || []), _toConsumableArray3((story === null || story === void 0 ? void 0 : story.decorators) || []));
  var parameters = Object.assign({}, story === null || story === void 0 ? void 0 : story.parameters, storyObject.parameters);
  var args = Object.assign({}, story === null || story === void 0 ? void 0 : story.args, storyObject.args);
  var argTypes = Object.assign({}, story === null || story === void 0 ? void 0 : story.argTypes, storyObject.argTypes);
  var loaders = [].concat(_toConsumableArray3(storyObject.loaders || []), _toConsumableArray3((story === null || story === void 0 ? void 0 : story.loaders) || []));
  var _storyObject2 = storyObject, render = _storyObject2.render, play = _storyObject2.play;
  var id = parameters.__id || (0, import_csf.toId)(meta.id || meta.title, exportName);
  return Object.assign({
    id,
    name,
    decorators,
    parameters,
    args,
    argTypes: normalizeInputTypes(argTypes),
    loaders
  }, render && {
    render
  }, userStoryFn && {
    userStoryFn
  }, play && {
    play
  });
}

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/csf/processCSFFile.js
var import_csf3 = __toESM(require_dist());

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/csf/normalizeComponentAnnotations.js
var import_csf2 = __toESM(require_dist());
function normalizeComponentAnnotations(defaultExport) {
  var title = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultExport.title;
  var importPath = arguments.length > 2 ? arguments[2] : void 0;
  var id = defaultExport.id, argTypes = defaultExport.argTypes;
  return Object.assign({
    id: (0, import_csf2.sanitize)(id || title)
  }, defaultExport, {
    title
  }, argTypes && {
    argTypes: normalizeInputTypes(argTypes)
  }, {
    parameters: Object.assign({
      fileName: importPath
    }, defaultExport.parameters)
  });
}

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/csf/processCSFFile.js
var _excluded2 = ["default", "__namedExportsOrder"];
function _objectWithoutProperties2(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose2(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var checkGlobals = function checkGlobals2(parameters) {
  var globals = parameters.globals, globalTypes = parameters.globalTypes;
  if (globals || globalTypes) {
    logger.error("Global args/argTypes can only be set globally", JSON.stringify({
      globals,
      globalTypes
    }));
  }
};
var checkStorySort = function checkStorySort2(parameters) {
  var options = parameters.options;
  if (options !== null && options !== void 0 && options.storySort)
    logger.error("The storySort option parameter can only be set globally");
};
var checkDisallowedParameters = function checkDisallowedParameters2(parameters) {
  if (!parameters) {
    return;
  }
  checkGlobals(parameters);
  checkStorySort(parameters);
};
function processCSFFile(moduleExports, importPath, title) {
  var defaultExport = moduleExports.default, __namedExportsOrder = moduleExports.__namedExportsOrder, namedExports = _objectWithoutProperties2(moduleExports, _excluded2);
  var meta = normalizeComponentAnnotations(defaultExport, title, importPath);
  checkDisallowedParameters(meta.parameters);
  var csfFile = {
    meta,
    stories: {}
  };
  Object.keys(namedExports).forEach(function(key) {
    if ((0, import_csf3.isExportStory)(key, meta)) {
      var storyMeta = normalizeStory(key, namedExports[key], meta);
      checkDisallowedParameters(storyMeta.parameters);
      csfFile.stories[storyMeta.id] = storyMeta;
    }
  });
  return csfFile;
}

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/csf/prepareStory.js
var import_es_regexp_exec10 = __toESM(require_es_regexp_exec());
var import_runtime = __toESM(require_runtime());
var import_es_array_iterator10 = __toESM(require_es_array_iterator());
var import_es_string_iterator10 = __toESM(require_es_string_iterator());
var import_util_deprecate4 = __toESM(require_browser());
var import_global4 = __toESM(require_window());
var import_csf4 = __toESM(require_dist());

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/parameters.js
var import_es_array_iterator7 = __toESM(require_es_array_iterator());
var import_es_string_iterator7 = __toESM(require_es_string_iterator());
var import_es_regexp_exec7 = __toESM(require_es_regexp_exec());
var import_isPlainObject2 = __toESM(require_isPlainObject());
function _toConsumableArray4(arr) {
  return _arrayWithoutHoles4(arr) || _iterableToArray4(arr) || _unsupportedIterableToArray6(arr) || _nonIterableSpread4();
}
function _nonIterableSpread4() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray4(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles4(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray6(arr);
}
function _slicedToArray5(arr, i) {
  return _arrayWithHoles5(arr) || _iterableToArrayLimit5(arr, i) || _unsupportedIterableToArray6(arr, i) || _nonIterableRest5();
}
function _nonIterableRest5() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray6(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray6(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray6(o, minLen);
}
function _arrayLikeToArray6(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit5(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles5(arr) {
  if (Array.isArray(arr))
    return arr;
}
var combineParameters = function combineParameters2() {
  for (var _len = arguments.length, parameterSets = new Array(_len), _key = 0; _key < _len; _key++) {
    parameterSets[_key] = arguments[_key];
  }
  var mergeKeys = {};
  var combined = parameterSets.filter(Boolean).reduce(function(acc, p) {
    Object.entries(p).forEach(function(_ref) {
      var _ref2 = _slicedToArray5(_ref, 2), key = _ref2[0], value = _ref2[1];
      var existing = acc[key];
      if (Array.isArray(value) || typeof existing === "undefined") {
        acc[key] = value;
      } else if ((0, import_isPlainObject2.default)(value) && (0, import_isPlainObject2.default)(existing)) {
        mergeKeys[key] = true;
      } else if (typeof value !== "undefined") {
        acc[key] = value;
      }
    });
    return acc;
  }, {});
  Object.keys(mergeKeys).forEach(function(key) {
    var mergeValues = parameterSets.filter(Boolean).map(function(p) {
      return p[key];
    }).filter(function(value) {
      return typeof value !== "undefined";
    });
    if (mergeValues.every(function(value) {
      return (0, import_isPlainObject2.default)(value);
    })) {
      combined[key] = combineParameters2.apply(void 0, _toConsumableArray4(mergeValues));
    } else {
      combined[key] = mergeValues[mergeValues.length - 1];
    }
  });
  return combined;
};

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/hooks.js
var import_es_array_iterator9 = __toESM(require_es_array_iterator());
var import_es_string_iterator9 = __toESM(require_es_string_iterator());
var import_es_regexp_exec9 = __toESM(require_es_regexp_exec());

// .yarn/cache/@storybook-core-events-npm-6.5.14-1e01df4906-6787925c52.zip/node_modules/@storybook/core-events/dist/esm/index.js
var events;
(function(events2) {
  events2["CHANNEL_CREATED"] = "channelCreated";
  events2["CONFIG_ERROR"] = "configError";
  events2["STORY_INDEX_INVALIDATED"] = "storyIndexInvalidated";
  events2["STORY_SPECIFIED"] = "storySpecified";
  events2["SET_STORIES"] = "setStories";
  events2["SET_CURRENT_STORY"] = "setCurrentStory";
  events2["CURRENT_STORY_WAS_SET"] = "currentStoryWasSet";
  events2["FORCE_RE_RENDER"] = "forceReRender";
  events2["FORCE_REMOUNT"] = "forceRemount";
  events2["PRELOAD_STORIES"] = "preloadStories";
  events2["STORY_PREPARED"] = "storyPrepared";
  events2["STORY_CHANGED"] = "storyChanged";
  events2["STORY_UNCHANGED"] = "storyUnchanged";
  events2["STORY_RENDERED"] = "storyRendered";
  events2["STORY_MISSING"] = "storyMissing";
  events2["STORY_ERRORED"] = "storyErrored";
  events2["STORY_THREW_EXCEPTION"] = "storyThrewException";
  events2["STORY_RENDER_PHASE_CHANGED"] = "storyRenderPhaseChanged";
  events2["UPDATE_STORY_ARGS"] = "updateStoryArgs";
  events2["STORY_ARGS_UPDATED"] = "storyArgsUpdated";
  events2["RESET_STORY_ARGS"] = "resetStoryArgs";
  events2["SET_GLOBALS"] = "setGlobals";
  events2["UPDATE_GLOBALS"] = "updateGlobals";
  events2["GLOBALS_UPDATED"] = "globalsUpdated";
  events2["REGISTER_SUBSCRIPTION"] = "registerSubscription";
  events2["PREVIEW_KEYDOWN"] = "previewKeydown";
  events2["SELECT_STORY"] = "selectStory";
  events2["STORIES_COLLAPSE_ALL"] = "storiesCollapseAll";
  events2["STORIES_EXPAND_ALL"] = "storiesExpandAll";
  events2["DOCS_RENDERED"] = "docsRendered";
  events2["SHARED_STATE_CHANGED"] = "sharedStateChanged";
  events2["SHARED_STATE_SET"] = "sharedStateSet";
  events2["NAVIGATE_URL"] = "navigateUrl";
  events2["UPDATE_QUERY_PARAMS"] = "updateQueryParams";
})(events || (events = {}));
var CHANNEL_CREATED = events.CHANNEL_CREATED;
var CONFIG_ERROR = events.CONFIG_ERROR;
var STORY_INDEX_INVALIDATED = events.STORY_INDEX_INVALIDATED;
var STORY_SPECIFIED = events.STORY_SPECIFIED;
var SET_STORIES = events.SET_STORIES;
var SET_CURRENT_STORY = events.SET_CURRENT_STORY;
var CURRENT_STORY_WAS_SET = events.CURRENT_STORY_WAS_SET;
var FORCE_RE_RENDER = events.FORCE_RE_RENDER;
var FORCE_REMOUNT = events.FORCE_REMOUNT;
var STORY_PREPARED = events.STORY_PREPARED;
var STORY_CHANGED = events.STORY_CHANGED;
var STORY_UNCHANGED = events.STORY_UNCHANGED;
var PRELOAD_STORIES = events.PRELOAD_STORIES;
var STORY_RENDERED = events.STORY_RENDERED;
var STORY_MISSING = events.STORY_MISSING;
var STORY_ERRORED = events.STORY_ERRORED;
var STORY_THREW_EXCEPTION = events.STORY_THREW_EXCEPTION;
var STORY_RENDER_PHASE_CHANGED = events.STORY_RENDER_PHASE_CHANGED;
var UPDATE_STORY_ARGS = events.UPDATE_STORY_ARGS;
var STORY_ARGS_UPDATED = events.STORY_ARGS_UPDATED;
var RESET_STORY_ARGS = events.RESET_STORY_ARGS;
var SET_GLOBALS = events.SET_GLOBALS;
var UPDATE_GLOBALS = events.UPDATE_GLOBALS;
var GLOBALS_UPDATED = events.GLOBALS_UPDATED;
var REGISTER_SUBSCRIPTION = events.REGISTER_SUBSCRIPTION;
var PREVIEW_KEYDOWN = events.PREVIEW_KEYDOWN;
var SELECT_STORY = events.SELECT_STORY;
var STORIES_COLLAPSE_ALL = events.STORIES_COLLAPSE_ALL;
var STORIES_EXPAND_ALL = events.STORIES_EXPAND_ALL;
var DOCS_RENDERED = events.DOCS_RENDERED;
var SHARED_STATE_CHANGED = events.SHARED_STATE_CHANGED;
var SHARED_STATE_SET = events.SHARED_STATE_SET;
var NAVIGATE_URL = events.NAVIGATE_URL;
var UPDATE_QUERY_PARAMS = events.UPDATE_QUERY_PARAMS;
var IGNORED_EXCEPTION = new Error("ignoredException");

// .yarn/__virtual__/@storybook-addons-virtual-d63ef90304/0/cache/@storybook-addons-npm-6.5.14-89cab29f89-99d06641ba.zip/node_modules/@storybook/addons/dist/esm/index.js
var import_global2 = __toESM(require_window());

// .yarn/cache/@storybook-channels-npm-6.5.14-9e451054bb-ff1ee3fea3.zip/node_modules/@storybook/channels/dist/esm/index.js
var import_util_deprecate3 = __toESM(require_browser());
var _templateObject5;
function _taggedTemplateLiteral5(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _classCallCheck4(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties4(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass4(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties4(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties4(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
var generateRandomId = function generateRandomId2() {
  return Math.random().toString(16).slice(2);
};
var Channel = function() {
  function Channel2() {
    var _this = this;
    var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, transport = _ref.transport, _ref$async = _ref.async, async = _ref$async === void 0 ? false : _ref$async;
    _classCallCheck4(this, Channel2);
    this.isAsync = void 0;
    this.sender = generateRandomId();
    this.events = {};
    this.data = {};
    this.transport = void 0;
    this.addPeerListener = (0, import_util_deprecate3.default)(function(eventName, listener) {
      _this.addListener(eventName, listener);
    }, esm_default(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral5(["\n      channel.addPeerListener is deprecated\n    "]))));
    this.isAsync = async;
    if (transport) {
      this.transport = transport;
      this.transport.setHandler(function(event) {
        return _this.handleEvent(event);
      });
    }
  }
  _createClass4(Channel2, [{
    key: "hasTransport",
    get: function get() {
      return !!this.transport;
    }
  }, {
    key: "addListener",
    value: function addListener(eventName, listener) {
      this.events[eventName] = this.events[eventName] || [];
      this.events[eventName].push(listener);
    }
  }, {
    key: "emit",
    value: function emit(eventName) {
      var _this2 = this;
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      var event = {
        type: eventName,
        args,
        from: this.sender
      };
      var options = {};
      if (args.length >= 1 && args[0] && args[0].options) {
        options = args[0].options;
      }
      var handler = function handler2() {
        if (_this2.transport) {
          _this2.transport.send(event, options);
        }
        _this2.handleEvent(event);
      };
      if (this.isAsync) {
        setImmediate(handler);
      } else {
        handler();
      }
    }
  }, {
    key: "last",
    value: function last(eventName) {
      return this.data[eventName];
    }
  }, {
    key: "eventNames",
    value: function eventNames() {
      return Object.keys(this.events);
    }
  }, {
    key: "listenerCount",
    value: function listenerCount(eventName) {
      var listeners = this.listeners(eventName);
      return listeners ? listeners.length : 0;
    }
  }, {
    key: "listeners",
    value: function listeners(eventName) {
      var listeners2 = this.events[eventName];
      return listeners2 || void 0;
    }
  }, {
    key: "once",
    value: function once3(eventName, listener) {
      var onceListener = this.onceListener(eventName, listener);
      this.addListener(eventName, onceListener);
    }
  }, {
    key: "removeAllListeners",
    value: function removeAllListeners(eventName) {
      if (!eventName) {
        this.events = {};
      } else if (this.events[eventName]) {
        delete this.events[eventName];
      }
    }
  }, {
    key: "removeListener",
    value: function removeListener(eventName, listener) {
      var listeners = this.listeners(eventName);
      if (listeners) {
        this.events[eventName] = listeners.filter(function(l) {
          return l !== listener;
        });
      }
    }
  }, {
    key: "on",
    value: function on(eventName, listener) {
      this.addListener(eventName, listener);
    }
  }, {
    key: "off",
    value: function off(eventName, listener) {
      this.removeListener(eventName, listener);
    }
  }, {
    key: "handleEvent",
    value: function handleEvent(event) {
      var listeners = this.listeners(event.type);
      if (listeners && listeners.length) {
        listeners.forEach(function(fn) {
          fn.apply(event, event.args);
        });
      }
      this.data[event.type] = event.args;
    }
  }, {
    key: "onceListener",
    value: function onceListener(eventName, listener) {
      var _this3 = this;
      var onceListener2 = function onceListener3() {
        _this3.removeListener(eventName, onceListener3);
        return listener.apply(void 0, arguments);
      };
      return onceListener2;
    }
  }]);
  return Channel2;
}();
var esm_default2 = Channel;

// .yarn/__virtual__/@storybook-addons-virtual-d63ef90304/0/cache/@storybook-addons-npm-6.5.14-89cab29f89-99d06641ba.zip/node_modules/@storybook/addons/dist/esm/storybook-channel-mock.js
function mockChannel() {
  var transport = {
    setHandler: function setHandler() {
    },
    send: function send() {
    }
  };
  return new esm_default2({
    transport
  });
}

// .yarn/__virtual__/@storybook-addons-virtual-d63ef90304/0/cache/@storybook-addons-npm-6.5.14-89cab29f89-99d06641ba.zip/node_modules/@storybook/addons/dist/esm/types.js
var types;
(function(types2) {
  types2["TAB"] = "tab";
  types2["PANEL"] = "panel";
  types2["TOOL"] = "tool";
  types2["TOOLEXTRA"] = "toolextra";
  types2["PREVIEW"] = "preview";
  types2["NOTES_ELEMENT"] = "notes-element";
})(types || (types = {}));

// .yarn/__virtual__/@storybook-addons-virtual-d63ef90304/0/cache/@storybook-addons-npm-6.5.14-89cab29f89-99d06641ba.zip/node_modules/@storybook/addons/dist/esm/index.js
function _defineProperties5(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass5(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties5(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties5(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _classCallCheck5(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
var AddonStore = _createClass5(function AddonStore2() {
  var _this = this;
  _classCallCheck5(this, AddonStore2);
  this.loaders = {};
  this.elements = {};
  this.config = {};
  this.channel = void 0;
  this.serverChannel = void 0;
  this.promise = void 0;
  this.resolve = void 0;
  this.getChannel = function() {
    if (!_this.channel) {
      _this.setChannel(mockChannel());
    }
    return _this.channel;
  };
  this.getServerChannel = function() {
    if (!_this.serverChannel) {
      throw new Error("Accessing non-existent serverChannel");
    }
    return _this.serverChannel;
  };
  this.ready = function() {
    return _this.promise;
  };
  this.hasChannel = function() {
    return !!_this.channel;
  };
  this.hasServerChannel = function() {
    return !!_this.serverChannel;
  };
  this.setChannel = function(channel) {
    _this.channel = channel;
    _this.resolve();
  };
  this.setServerChannel = function(channel) {
    _this.serverChannel = channel;
  };
  this.getElements = function(type) {
    if (!_this.elements[type]) {
      _this.elements[type] = {};
    }
    return _this.elements[type];
  };
  this.addPanel = function(name, options) {
    _this.add(name, Object.assign({
      type: types.PANEL
    }, options));
  };
  this.add = function(name, addon) {
    var type = addon.type;
    var collection = _this.getElements(type);
    collection[name] = Object.assign({
      id: name
    }, addon);
  };
  this.setConfig = function(value) {
    Object.assign(_this.config, value);
  };
  this.getConfig = function() {
    return _this.config;
  };
  this.register = function(name, registerCallback) {
    if (_this.loaders[name]) {
      logger.warn("".concat(name, " was loaded twice, this could have bad side-effects"));
    }
    _this.loaders[name] = registerCallback;
  };
  this.loadAddons = function(api) {
    Object.values(_this.loaders).forEach(function(value) {
      return value(api);
    });
  };
  this.promise = new Promise(function(res) {
    _this.resolve = function() {
      return res(_this.getChannel());
    };
  });
});
var KEY = "__STORYBOOK_ADDONS";
function getAddonsStore() {
  if (!import_global2.default[KEY]) {
    import_global2.default[KEY] = new AddonStore();
  }
  return import_global2.default[KEY];
}
var addons = getAddonsStore();

// .yarn/__virtual__/@storybook-addons-virtual-d63ef90304/0/cache/@storybook-addons-npm-6.5.14-89cab29f89-99d06641ba.zip/node_modules/@storybook/addons/dist/esm/hooks.js
var import_es_array_iterator8 = __toESM(require_es_array_iterator());
var import_es_string_iterator8 = __toESM(require_es_string_iterator());
var import_es_regexp_exec8 = __toESM(require_es_regexp_exec());
var import_global3 = __toESM(require_window());
function _toConsumableArray5(arr) {
  return _arrayWithoutHoles5(arr) || _iterableToArray5(arr) || _unsupportedIterableToArray7(arr) || _nonIterableSpread5();
}
function _nonIterableSpread5() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray7(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray7(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray7(o, minLen);
}
function _iterableToArray5(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles5(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray7(arr);
}
function _arrayLikeToArray7(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _classCallCheck6(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties6(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass6(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties6(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties6(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
var globalWindow = import_global3.default.window;
var HooksContext = function() {
  function HooksContext2() {
    var _this = this;
    _classCallCheck6(this, HooksContext2);
    this.hookListsMap = void 0;
    this.mountedDecorators = void 0;
    this.prevMountedDecorators = void 0;
    this.currentHooks = void 0;
    this.nextHookIndex = void 0;
    this.currentPhase = void 0;
    this.currentEffects = void 0;
    this.prevEffects = void 0;
    this.currentDecoratorName = void 0;
    this.hasUpdates = void 0;
    this.currentContext = void 0;
    this.renderListener = function(storyId) {
      if (storyId !== _this.currentContext.id)
        return;
      _this.triggerEffects();
      _this.currentContext = null;
      _this.removeRenderListeners();
    };
    this.init();
  }
  _createClass6(HooksContext2, [{
    key: "init",
    value: function init() {
      this.hookListsMap = /* @__PURE__ */ new WeakMap();
      this.mountedDecorators = /* @__PURE__ */ new Set();
      this.prevMountedDecorators = this.mountedDecorators;
      this.currentHooks = [];
      this.nextHookIndex = 0;
      this.currentPhase = "NONE";
      this.currentEffects = [];
      this.prevEffects = [];
      this.currentDecoratorName = null;
      this.hasUpdates = false;
      this.currentContext = null;
    }
  }, {
    key: "clean",
    value: function clean() {
      this.prevEffects.forEach(function(effect) {
        if (effect.destroy) {
          effect.destroy();
        }
      });
      this.init();
      this.removeRenderListeners();
    }
  }, {
    key: "getNextHook",
    value: function getNextHook() {
      var hook = this.currentHooks[this.nextHookIndex];
      this.nextHookIndex += 1;
      return hook;
    }
  }, {
    key: "triggerEffects",
    value: function triggerEffects() {
      var _this2 = this;
      this.prevEffects.forEach(function(effect) {
        if (!_this2.currentEffects.includes(effect) && effect.destroy) {
          effect.destroy();
        }
      });
      this.currentEffects.forEach(function(effect) {
        if (!_this2.prevEffects.includes(effect)) {
          effect.destroy = effect.create();
        }
      });
      this.prevEffects = this.currentEffects;
      this.currentEffects = [];
    }
  }, {
    key: "addRenderListeners",
    value: function addRenderListeners() {
      this.removeRenderListeners();
      var channel = addons.getChannel();
      channel.on(STORY_RENDERED, this.renderListener);
    }
  }, {
    key: "removeRenderListeners",
    value: function removeRenderListeners() {
      var channel = addons.getChannel();
      channel.removeListener(STORY_RENDERED, this.renderListener);
    }
  }]);
  return HooksContext2;
}();
function hookify(fn) {
  return function() {
    var _ref = typeof (arguments.length <= 0 ? void 0 : arguments[0]) === "function" ? arguments.length <= 1 ? void 0 : arguments[1] : arguments.length <= 0 ? void 0 : arguments[0], hooks = _ref.hooks;
    var prevPhase = hooks.currentPhase;
    var prevHooks = hooks.currentHooks;
    var prevNextHookIndex = hooks.nextHookIndex;
    var prevDecoratorName = hooks.currentDecoratorName;
    hooks.currentDecoratorName = fn.name;
    if (hooks.prevMountedDecorators.has(fn)) {
      hooks.currentPhase = "UPDATE";
      hooks.currentHooks = hooks.hookListsMap.get(fn) || [];
    } else {
      hooks.currentPhase = "MOUNT";
      hooks.currentHooks = [];
      hooks.hookListsMap.set(fn, hooks.currentHooks);
      hooks.prevMountedDecorators.add(fn);
    }
    hooks.nextHookIndex = 0;
    var prevContext = globalWindow.STORYBOOK_HOOKS_CONTEXT;
    globalWindow.STORYBOOK_HOOKS_CONTEXT = hooks;
    var result = fn.apply(void 0, arguments);
    globalWindow.STORYBOOK_HOOKS_CONTEXT = prevContext;
    if (hooks.currentPhase === "UPDATE" && hooks.getNextHook() != null) {
      throw new Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
    }
    hooks.currentPhase = prevPhase;
    hooks.currentHooks = prevHooks;
    hooks.nextHookIndex = prevNextHookIndex;
    hooks.currentDecoratorName = prevDecoratorName;
    return result;
  };
}
var numberOfRenders = 0;
var RENDER_LIMIT = 25;
var applyHooks = function applyHooks2(applyDecorators) {
  return function(storyFn, decorators) {
    var decorated = applyDecorators(hookify(storyFn), decorators.map(function(decorator) {
      return hookify(decorator);
    }));
    return function(context) {
      var _ref2 = context, hooks = _ref2.hooks;
      hooks.prevMountedDecorators = hooks.mountedDecorators;
      hooks.mountedDecorators = new Set([storyFn].concat(_toConsumableArray5(decorators)));
      hooks.currentContext = context;
      hooks.hasUpdates = false;
      var result = decorated(context);
      numberOfRenders = 1;
      while (hooks.hasUpdates) {
        hooks.hasUpdates = false;
        hooks.currentEffects = [];
        result = decorated(context);
        numberOfRenders += 1;
        if (numberOfRenders > RENDER_LIMIT) {
          throw new Error("Too many re-renders. Storybook limits the number of renders to prevent an infinite loop.");
        }
      }
      hooks.addRenderListeners();
      return result;
    };
  };
};

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/decorators.js
var _excluded3 = ["componentId", "title", "kind", "id", "name", "story", "parameters", "initialArgs", "argTypes"];
function _objectWithoutProperties3(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose3(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose3(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function decorateStory(storyFn, decorator, bindWithContext) {
  var boundStoryFunction = bindWithContext(storyFn);
  return function(context) {
    return decorator(boundStoryFunction, context);
  };
}
function sanitizeStoryContextUpdate() {
  var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var componentId = _ref.componentId, title = _ref.title, kind = _ref.kind, id = _ref.id, name = _ref.name, story = _ref.story, parameters = _ref.parameters, initialArgs = _ref.initialArgs, argTypes = _ref.argTypes, update = _objectWithoutProperties3(_ref, _excluded3);
  return update;
}
function defaultDecorateStory(storyFn, decorators) {
  var contextStore = {};
  var bindWithContext = function bindWithContext2(decoratedStoryFn) {
    return function(update) {
      contextStore.value = Object.assign({}, contextStore.value, sanitizeStoryContextUpdate(update));
      return decoratedStoryFn(contextStore.value);
    };
  };
  var decoratedWithContextStore = decorators.reduce(function(story, decorator) {
    return decorateStory(story, decorator, bindWithContext);
  }, storyFn);
  return function(context) {
    contextStore.value = context;
    return decoratedWithContextStore(context);
  };
}

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/csf/prepareStory.js
var _templateObject6;
function _slicedToArray6(arr, i) {
  return _arrayWithHoles6(arr) || _iterableToArrayLimit6(arr, i) || _unsupportedIterableToArray8(arr, i) || _nonIterableRest6();
}
function _nonIterableRest6() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit6(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles6(arr) {
  if (Array.isArray(arr))
    return arr;
}
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info2 = gen[key](arg);
    var value = info2.value;
  } catch (error2) {
    reject(error2);
    return;
  }
  if (info2.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator(fn) {
  return function() {
    var self = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}
function _toConsumableArray6(arr) {
  return _arrayWithoutHoles6(arr) || _iterableToArray6(arr) || _unsupportedIterableToArray8(arr) || _nonIterableSpread6();
}
function _nonIterableSpread6() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray8(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray8(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray8(o, minLen);
}
function _iterableToArray6(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles6(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray8(arr);
}
function _arrayLikeToArray8(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _taggedTemplateLiteral6(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var argTypeDefaultValueWarning = (0, import_util_deprecate4.default)(function() {
}, esm_default(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral6(["\n  `argType.defaultValue` is deprecated and will be removed in Storybook 7.0.\n\n  https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#no-longer-inferring-default-values-of-args"], ["\n  \\`argType.defaultValue\\` is deprecated and will be removed in Storybook 7.0.\n\n  https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#no-longer-inferring-default-values-of-args"]))));
function prepareStory(storyAnnotations, componentAnnotations, projectAnnotations) {
  var _global$FEATURES;
  var id = storyAnnotations.id, name = storyAnnotations.name;
  var title = componentAnnotations.title;
  var parameters = combineParameters(projectAnnotations.parameters, componentAnnotations.parameters, storyAnnotations.parameters);
  var decorators = [].concat(_toConsumableArray6(storyAnnotations.decorators || []), _toConsumableArray6(componentAnnotations.decorators || []), _toConsumableArray6(projectAnnotations.decorators || []));
  var _projectAnnotations$a = projectAnnotations.applyDecorators, applyDecorators = _projectAnnotations$a === void 0 ? defaultDecorateStory : _projectAnnotations$a, _projectAnnotations$a2 = projectAnnotations.argTypesEnhancers, argTypesEnhancers = _projectAnnotations$a2 === void 0 ? [] : _projectAnnotations$a2, _projectAnnotations$a3 = projectAnnotations.argsEnhancers, argsEnhancers = _projectAnnotations$a3 === void 0 ? [] : _projectAnnotations$a3;
  var loaders = [].concat(_toConsumableArray6(projectAnnotations.loaders || []), _toConsumableArray6(componentAnnotations.loaders || []), _toConsumableArray6(storyAnnotations.loaders || []));
  var render = storyAnnotations.userStoryFn || storyAnnotations.render || componentAnnotations.render || projectAnnotations.render;
  var passedArgTypes = combineParameters(projectAnnotations.argTypes, componentAnnotations.argTypes, storyAnnotations.argTypes);
  var _parameters$passArgsF = parameters.passArgsFirst, passArgsFirst = _parameters$passArgsF === void 0 ? true : _parameters$passArgsF;
  parameters.__isArgsStory = passArgsFirst && render.length > 0;
  var passedArgs = Object.assign({}, projectAnnotations.args, componentAnnotations.args, storyAnnotations.args);
  var contextForEnhancers = {
    componentId: componentAnnotations.id,
    title,
    kind: title,
    id,
    name,
    story: name,
    component: componentAnnotations.component,
    subcomponents: componentAnnotations.subcomponents,
    parameters,
    initialArgs: passedArgs,
    argTypes: passedArgTypes
  };
  contextForEnhancers.argTypes = argTypesEnhancers.reduce(function(accumulatedArgTypes, enhancer) {
    return enhancer(Object.assign({}, contextForEnhancers, {
      argTypes: accumulatedArgTypes
    }));
  }, contextForEnhancers.argTypes);
  var defaultArgs = getValuesFromArgTypes(contextForEnhancers.argTypes);
  if (Object.keys(defaultArgs).length > 0) {
    argTypeDefaultValueWarning();
  }
  var initialArgsBeforeEnhancers = Object.assign({}, defaultArgs, passedArgs);
  contextForEnhancers.initialArgs = argsEnhancers.reduce(function(accumulatedArgs, enhancer) {
    return Object.assign({}, accumulatedArgs, enhancer(Object.assign({}, contextForEnhancers, {
      initialArgs: accumulatedArgs
    })));
  }, initialArgsBeforeEnhancers);
  if (!((_global$FEATURES = import_global4.default.FEATURES) !== null && _global$FEATURES !== void 0 && _global$FEATURES.breakingChangesV7)) {
    contextForEnhancers.parameters = Object.assign({}, contextForEnhancers.parameters, {
      __id: id,
      globals: projectAnnotations.globals,
      globalTypes: projectAnnotations.globalTypes,
      args: contextForEnhancers.initialArgs,
      argTypes: contextForEnhancers.argTypes
    });
  }
  var applyLoaders = function() {
    var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(context) {
      var loadResults, loaded;
      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return Promise.all(loaders.map(function(loader) {
                return loader(context);
              }));
            case 2:
              loadResults = _context.sent;
              loaded = Object.assign.apply(Object, [{}].concat(_toConsumableArray6(loadResults)));
              return _context.abrupt("return", Object.assign({}, context, {
                loaded
              }));
            case 5:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));
    return function applyLoaders2(_x) {
      return _ref.apply(this, arguments);
    };
  }();
  var undecoratedStoryFn = function undecoratedStoryFn2(context) {
    var mappedArgs = Object.entries(context.args).reduce(function(acc, _ref2) {
      var _context$argTypes$key;
      var _ref3 = _slicedToArray6(_ref2, 2), key = _ref3[0], val = _ref3[1];
      var mapping = (_context$argTypes$key = context.argTypes[key]) === null || _context$argTypes$key === void 0 ? void 0 : _context$argTypes$key.mapping;
      acc[key] = mapping && val in mapping ? mapping[val] : val;
      return acc;
    }, {});
    var includedArgs = Object.entries(mappedArgs).reduce(function(acc, _ref4) {
      var _ref5 = _slicedToArray6(_ref4, 2), key = _ref5[0], val = _ref5[1];
      var argType = context.argTypes[key] || {};
      if ((0, import_csf4.includeConditionalArg)(argType, mappedArgs, context.globals))
        acc[key] = val;
      return acc;
    }, {});
    var includedContext = Object.assign({}, context, {
      args: includedArgs
    });
    var _context$parameters$p = context.parameters.passArgsFirst, renderTimePassArgsFirst = _context$parameters$p === void 0 ? true : _context$parameters$p;
    return renderTimePassArgsFirst ? render(includedContext.args, includedContext) : render(includedContext);
  };
  var decoratedStoryFn = applyHooks(applyDecorators)(undecoratedStoryFn, decorators);
  var unboundStoryFn = function unboundStoryFn2(context) {
    var _global$FEATURES2;
    var finalContext = context;
    if ((_global$FEATURES2 = import_global4.default.FEATURES) !== null && _global$FEATURES2 !== void 0 && _global$FEATURES2.argTypeTargetsV7) {
      var argsByTarget = groupArgsByTarget(Object.assign({
        args: context.args
      }, context));
      finalContext = Object.assign({}, context, {
        allArgs: context.args,
        argsByTarget,
        args: argsByTarget[NO_TARGET_NAME] || {}
      });
    }
    return decoratedStoryFn(finalContext);
  };
  var playFunction = storyAnnotations.play;
  return Object.freeze(Object.assign({}, contextForEnhancers, {
    originalStoryFn: render,
    undecoratedStoryFn,
    unboundStoryFn,
    applyLoaders,
    playFunction
  }));
}

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/csf/normalizeProjectAnnotations.js
var import_es_array_iterator12 = __toESM(require_es_array_iterator());
var import_es_string_iterator12 = __toESM(require_es_string_iterator());
var import_es_regexp_exec13 = __toESM(require_es_regexp_exec());

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/inferArgTypes.js
var import_es_array_iterator11 = __toESM(require_es_array_iterator());
var import_es_string_iterator11 = __toESM(require_es_string_iterator());
var import_mapValues2 = __toESM(require_mapValues());
var _templateObject7;
function _taggedTemplateLiteral7(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _typeof2(obj) {
  "@babel/helpers - typeof";
  return _typeof2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof2(obj);
}
var inferType = function inferType2(value, name, visited) {
  var type = _typeof2(value);
  switch (type) {
    case "boolean":
    case "string":
    case "number":
    case "function":
    case "symbol":
      return {
        name: type
      };
    default:
      break;
  }
  if (value) {
    if (visited.has(value)) {
      logger.warn(esm_default(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral7(["\n        We've detected a cycle in arg '", "'. Args should be JSON-serializable.\n\n        Consider using the mapping feature or fully custom args:\n        - Mapping: https://storybook.js.org/docs/react/writing-stories/args#mapping-to-complex-arg-values\n        - Custom args: https://storybook.js.org/docs/react/essentials/controls#fully-custom-args\n      "])), name));
      return {
        name: "other",
        value: "cyclic object"
      };
    }
    visited.add(value);
    if (Array.isArray(value)) {
      var childType = value.length > 0 ? inferType2(value[0], name, new Set(visited)) : {
        name: "other",
        value: "unknown"
      };
      return {
        name: "array",
        value: childType
      };
    }
    var fieldTypes = (0, import_mapValues2.default)(value, function(field) {
      return inferType2(field, name, new Set(visited));
    });
    return {
      name: "object",
      value: fieldTypes
    };
  }
  return {
    name: "object",
    value: {}
  };
};
var inferArgTypes = function inferArgTypes2(context) {
  var id = context.id, _context$argTypes = context.argTypes, userArgTypes = _context$argTypes === void 0 ? {} : _context$argTypes, _context$initialArgs = context.initialArgs, initialArgs = _context$initialArgs === void 0 ? {} : _context$initialArgs;
  var argTypes = (0, import_mapValues2.default)(initialArgs, function(arg, key) {
    return {
      name: key,
      type: inferType(arg, "".concat(id, ".").concat(key), /* @__PURE__ */ new Set())
    };
  });
  var userArgTypesNames = (0, import_mapValues2.default)(userArgTypes, function(argType, key) {
    return {
      name: key
    };
  });
  return combineParameters(argTypes, userArgTypesNames, userArgTypes);
};
inferArgTypes.secondPass = true;

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/inferControls.js
var import_es_regexp_exec12 = __toESM(require_es_regexp_exec());
var import_mapValues3 = __toESM(require_mapValues());

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/filterArgTypes.js
var import_es_regexp_exec11 = __toESM(require_es_regexp_exec());
var import_pickBy = __toESM(require_pickBy());
var matches = function matches2(name, descriptor) {
  return Array.isArray(descriptor) ? descriptor.includes(name) : name.match(descriptor);
};
var filterArgTypes = function filterArgTypes2(argTypes, include, exclude) {
  if (!include && !exclude) {
    return argTypes;
  }
  return argTypes && (0, import_pickBy.default)(argTypes, function(argType, key) {
    var name = argType.name || key;
    return (!include || matches(name, include)) && (!exclude || !matches(name, exclude));
  });
};

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/inferControls.js
var inferControl = function inferControl2(argType, name, matchers) {
  var type = argType.type, options = argType.options;
  if (!type && !options) {
    return void 0;
  }
  if (matchers.color && matchers.color.test(name)) {
    var controlType = argType.type.name;
    if (controlType === "string") {
      return {
        control: {
          type: "color"
        }
      };
    }
    logger.warn('Addon controls: Control of type color only supports string, received "'.concat(controlType, '" instead'));
  }
  if (matchers.date && matchers.date.test(name)) {
    return {
      control: {
        type: "date"
      }
    };
  }
  switch (type.name) {
    case "array":
      return {
        control: {
          type: "object"
        }
      };
    case "boolean":
      return {
        control: {
          type: "boolean"
        }
      };
    case "string":
      return {
        control: {
          type: "text"
        }
      };
    case "number":
      return {
        control: {
          type: "number"
        }
      };
    case "enum": {
      var _ref = type, value = _ref.value;
      return {
        control: {
          type: (value === null || value === void 0 ? void 0 : value.length) <= 5 ? "radio" : "select"
        },
        options: value
      };
    }
    case "function":
    case "symbol":
      return null;
    default:
      return {
        control: {
          type: options ? "select" : "object"
        }
      };
  }
};
var inferControls = function inferControls2(context) {
  var argTypes = context.argTypes, _context$parameters = context.parameters, __isArgsStory = _context$parameters.__isArgsStory, _context$parameters$c = _context$parameters.controls;
  _context$parameters$c = _context$parameters$c === void 0 ? {} : _context$parameters$c;
  var _context$parameters$c2 = _context$parameters$c.include, include = _context$parameters$c2 === void 0 ? null : _context$parameters$c2, _context$parameters$c3 = _context$parameters$c.exclude, exclude = _context$parameters$c3 === void 0 ? null : _context$parameters$c3, _context$parameters$c4 = _context$parameters$c.matchers, matchers = _context$parameters$c4 === void 0 ? {} : _context$parameters$c4;
  if (!__isArgsStory)
    return argTypes;
  var filteredArgTypes = filterArgTypes(argTypes, include, exclude);
  var withControls = (0, import_mapValues3.default)(filteredArgTypes, function(argType, name) {
    return (argType === null || argType === void 0 ? void 0 : argType.type) && inferControl(argType, name, matchers);
  });
  return combineParameters(withControls, filteredArgTypes);
};
inferControls.secondPass = true;

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/csf/normalizeProjectAnnotations.js
var _excluded4 = ["argTypes", "globalTypes", "argTypesEnhancers"];
function _toConsumableArray7(arr) {
  return _arrayWithoutHoles7(arr) || _iterableToArray7(arr) || _unsupportedIterableToArray9(arr) || _nonIterableSpread7();
}
function _nonIterableSpread7() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray9(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray9(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray9(o, minLen);
}
function _iterableToArray7(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles7(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray9(arr);
}
function _arrayLikeToArray9(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _objectWithoutProperties4(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose4(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose4(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function normalizeProjectAnnotations(_ref) {
  var argTypes = _ref.argTypes, globalTypes = _ref.globalTypes, argTypesEnhancers = _ref.argTypesEnhancers, annotations = _objectWithoutProperties4(_ref, _excluded4);
  return Object.assign({}, argTypes && {
    argTypes: normalizeInputTypes(argTypes)
  }, globalTypes && {
    globalTypes: normalizeInputTypes(globalTypes)
  }, {
    argTypesEnhancers: [].concat(_toConsumableArray7(argTypesEnhancers || []), [
      inferArgTypes,
      inferControls
    ])
  }, annotations);
}

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/csf/composeConfigs.js
var import_es_array_iterator13 = __toESM(require_es_array_iterator());
var import_es_string_iterator13 = __toESM(require_es_string_iterator());
var import_es_regexp_exec14 = __toESM(require_es_regexp_exec());
function _toConsumableArray8(arr) {
  return _arrayWithoutHoles8(arr) || _iterableToArray8(arr) || _unsupportedIterableToArray10(arr) || _nonIterableSpread8();
}
function _nonIterableSpread8() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray10(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray10(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray10(o, minLen);
}
function _iterableToArray8(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles8(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray10(arr);
}
function _arrayLikeToArray10(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function getField(moduleExportList, field) {
  return moduleExportList.map(function(xs) {
    return xs[field];
  }).filter(Boolean);
}
function getArrayField(moduleExportList, field) {
  return getField(moduleExportList, field).reduce(function(a, b) {
    return [].concat(_toConsumableArray8(a), _toConsumableArray8(b));
  }, []);
}
function getObjectField(moduleExportList, field) {
  return Object.assign.apply(Object, [{}].concat(_toConsumableArray8(getField(moduleExportList, field))));
}
function getSingletonField(moduleExportList, field) {
  return getField(moduleExportList, field).pop();
}
function composeConfigs(moduleExportList) {
  var allArgTypeEnhancers = getArrayField(moduleExportList, "argTypesEnhancers");
  return {
    parameters: combineParameters.apply(void 0, _toConsumableArray8(getField(moduleExportList, "parameters"))),
    decorators: getArrayField(moduleExportList, "decorators"),
    args: getObjectField(moduleExportList, "args"),
    argsEnhancers: getArrayField(moduleExportList, "argsEnhancers"),
    argTypes: getObjectField(moduleExportList, "argTypes"),
    argTypesEnhancers: [].concat(_toConsumableArray8(allArgTypeEnhancers.filter(function(e) {
      return !e.secondPass;
    })), _toConsumableArray8(allArgTypeEnhancers.filter(function(e) {
      return e.secondPass;
    }))),
    globals: getObjectField(moduleExportList, "globals"),
    globalTypes: getObjectField(moduleExportList, "globalTypes"),
    loaders: getArrayField(moduleExportList, "loaders"),
    render: getSingletonField(moduleExportList, "render"),
    renderToDOM: getSingletonField(moduleExportList, "renderToDOM"),
    applyDecorators: getSingletonField(moduleExportList, "applyDecorators")
  };
}

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/csf/testing-utils/index.js
var import_es_array_iterator14 = __toESM(require_es_array_iterator());
var import_es_string_iterator14 = __toESM(require_es_string_iterator());
var import_es_regexp_exec15 = __toESM(require_es_regexp_exec());
var import_csf5 = __toESM(require_dist());

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/StoryStore.js
function _defineProperty2(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _slicedToArray7(arr, i) {
  return _arrayWithHoles7(arr) || _iterableToArrayLimit7(arr, i) || _unsupportedIterableToArray11(arr, i) || _nonIterableRest7();
}
function _nonIterableRest7() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray11(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray11(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray11(o, minLen);
}
function _arrayLikeToArray11(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit7(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles7(arr) {
  if (Array.isArray(arr))
    return arr;
}
function asyncGeneratorStep2(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info2 = gen[key](arg);
    var value = info2.value;
  } catch (error2) {
    reject(error2);
    return;
  }
  if (info2.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator2(fn) {
  return function() {
    var self = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep2(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep2(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}
function _classCallCheck7(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties7(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass7(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties7(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties7(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
var CSF_CACHE_SIZE = 1e3;
var STORY_CACHE_SIZE = 1e4;
var StoryStore = function() {
  function StoryStore2() {
    var _this = this;
    _classCallCheck7(this, StoryStore2);
    this.storyIndex = void 0;
    this.importFn = void 0;
    this.projectAnnotations = void 0;
    this.globals = void 0;
    this.args = void 0;
    this.hooks = void 0;
    this.cachedCSFFiles = void 0;
    this.processCSFFileWithCache = void 0;
    this.prepareStoryWithCache = void 0;
    this.initializationPromise = void 0;
    this.resolveInitializationPromise = void 0;
    this.getStoriesJsonData = function() {
      var value = _this.getSetStoriesPayload();
      var allowedParameters = ["fileName", "docsOnly", "framework", "__id", "__isArgsStory"];
      var stories = (0, import_mapValues4.default)(value.stories, function(story) {
        var _global$FEATURES;
        return Object.assign({}, (0, import_pick.default)(story, ["id", "name", "title"]), {
          importPath: _this.storyIndex.stories[story.id].importPath
        }, !((_global$FEATURES = import_global5.default.FEATURES) !== null && _global$FEATURES !== void 0 && _global$FEATURES.breakingChangesV7) && {
          kind: story.title,
          story: story.name,
          parameters: Object.assign({}, (0, import_pick.default)(story.parameters, allowedParameters), {
            fileName: _this.storyIndex.stories[story.id].importPath
          })
        });
      });
      return {
        v: 3,
        stories
      };
    };
    this.globals = new GlobalsStore();
    this.args = new ArgsStore();
    this.hooks = {};
    this.processCSFFileWithCache = (0, import_memoizerific.default)(CSF_CACHE_SIZE)(processCSFFile);
    this.prepareStoryWithCache = (0, import_memoizerific.default)(STORY_CACHE_SIZE)(prepareStory);
    this.initializationPromise = new import_synchronous_promise.SynchronousPromise(function(resolve) {
      _this.resolveInitializationPromise = resolve;
    });
  }
  _createClass7(StoryStore2, [{
    key: "setProjectAnnotations",
    value: function setProjectAnnotations(projectAnnotations) {
      this.projectAnnotations = normalizeProjectAnnotations(projectAnnotations);
      var globals = projectAnnotations.globals, globalTypes = projectAnnotations.globalTypes;
      this.globals.set({
        globals,
        globalTypes
      });
    }
  }, {
    key: "initialize",
    value: function initialize(_ref) {
      var storyIndex = _ref.storyIndex, importFn = _ref.importFn, _ref$cache = _ref.cache, cache = _ref$cache === void 0 ? false : _ref$cache;
      this.storyIndex = new StoryIndexStore(storyIndex);
      this.importFn = importFn;
      this.resolveInitializationPromise();
      return cache ? this.cacheAllCSFFiles() : import_synchronous_promise.SynchronousPromise.resolve();
    }
  }, {
    key: "onStoriesChanged",
    value: function() {
      var _onStoriesChanged = _asyncToGenerator2(regeneratorRuntime.mark(function _callee(_ref2) {
        var importFn, storyIndex;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                importFn = _ref2.importFn, storyIndex = _ref2.storyIndex;
                if (importFn)
                  this.importFn = importFn;
                if (storyIndex)
                  this.storyIndex.stories = storyIndex.stories;
                if (!this.cachedCSFFiles) {
                  _context.next = 6;
                  break;
                }
                _context.next = 6;
                return this.cacheAllCSFFiles();
              case 6:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
      function onStoriesChanged(_x) {
        return _onStoriesChanged.apply(this, arguments);
      }
      return onStoriesChanged;
    }()
  }, {
    key: "loadCSFFileByStoryId",
    value: function loadCSFFileByStoryId(storyId) {
      var _this2 = this;
      var _this$storyIndex$stor = this.storyIndex.storyIdToEntry(storyId), importPath = _this$storyIndex$stor.importPath, title = _this$storyIndex$stor.title;
      return this.importFn(importPath).then(function(moduleExports) {
        return _this2.processCSFFileWithCache(moduleExports, importPath, title);
      });
    }
  }, {
    key: "loadAllCSFFiles",
    value: function loadAllCSFFiles() {
      var _this3 = this;
      var importPaths = {};
      Object.entries(this.storyIndex.stories).forEach(function(_ref3) {
        var _ref4 = _slicedToArray7(_ref3, 2), storyId = _ref4[0], importPath = _ref4[1].importPath;
        importPaths[importPath] = storyId;
      });
      var csfFilePromiseList = Object.entries(importPaths).map(function(_ref5) {
        var _ref6 = _slicedToArray7(_ref5, 2), importPath = _ref6[0], storyId = _ref6[1];
        return _this3.loadCSFFileByStoryId(storyId).then(function(csfFile) {
          return {
            importPath,
            csfFile
          };
        });
      });
      return import_synchronous_promise.SynchronousPromise.all(csfFilePromiseList).then(function(list) {
        return list.reduce(function(acc, _ref7) {
          var importPath = _ref7.importPath, csfFile = _ref7.csfFile;
          acc[importPath] = csfFile;
          return acc;
        }, {});
      });
    }
  }, {
    key: "cacheAllCSFFiles",
    value: function cacheAllCSFFiles() {
      var _this4 = this;
      return this.initializationPromise.then(function() {
        return _this4.loadAllCSFFiles().then(function(csfFiles) {
          _this4.cachedCSFFiles = csfFiles;
        });
      });
    }
  }, {
    key: "loadStory",
    value: function() {
      var _loadStory = _asyncToGenerator2(regeneratorRuntime.mark(function _callee2(_ref8) {
        var storyId, csfFile;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                storyId = _ref8.storyId;
                _context2.next = 3;
                return this.initializationPromise;
              case 3:
                _context2.next = 5;
                return this.loadCSFFileByStoryId(storyId);
              case 5:
                csfFile = _context2.sent;
                return _context2.abrupt("return", this.storyFromCSFFile({
                  storyId,
                  csfFile
                }));
              case 7:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));
      function loadStory(_x2) {
        return _loadStory.apply(this, arguments);
      }
      return loadStory;
    }()
  }, {
    key: "storyFromCSFFile",
    value: function storyFromCSFFile(_ref9) {
      var storyId = _ref9.storyId, csfFile = _ref9.csfFile;
      var storyAnnotations = csfFile.stories[storyId];
      if (!storyAnnotations) {
        throw new Error("Didn't find '".concat(storyId, "' in CSF file, this is unexpected"));
      }
      var componentAnnotations = csfFile.meta;
      var story = this.prepareStoryWithCache(storyAnnotations, componentAnnotations, this.projectAnnotations);
      this.args.setInitial(story);
      this.hooks[story.id] = this.hooks[story.id] || new HooksContext();
      return story;
    }
  }, {
    key: "componentStoriesFromCSFFile",
    value: function componentStoriesFromCSFFile(_ref10) {
      var _this5 = this;
      var csfFile = _ref10.csfFile;
      return Object.keys(this.storyIndex.stories).filter(function(storyId) {
        return !!csfFile.stories[storyId];
      }).map(function(storyId) {
        return _this5.storyFromCSFFile({
          storyId,
          csfFile
        });
      });
    }
  }, {
    key: "getStoryContext",
    value: function getStoryContext(story) {
      return Object.assign({}, story, {
        args: this.args.get(story.id),
        globals: this.globals.get(),
        hooks: this.hooks[story.id]
      });
    }
  }, {
    key: "cleanupStory",
    value: function cleanupStory(story) {
      this.hooks[story.id].clean();
    }
  }, {
    key: "extract",
    value: function extract() {
      var _this6 = this;
      var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {
        includeDocsOnly: false
      };
      if (!this.cachedCSFFiles) {
        throw new Error("Cannot call extract() unless you call cacheAllCSFFiles() first.");
      }
      return Object.entries(this.storyIndex.stories).reduce(function(acc, _ref11) {
        var _ref12 = _slicedToArray7(_ref11, 2), storyId = _ref12[0], importPath = _ref12[1].importPath;
        var csfFile = _this6.cachedCSFFiles[importPath];
        var story = _this6.storyFromCSFFile({
          storyId,
          csfFile
        });
        if (!options.includeDocsOnly && story.parameters.docsOnly) {
          return acc;
        }
        acc[storyId] = Object.entries(story).reduce(function(storyAcc, _ref13) {
          var _ref14 = _slicedToArray7(_ref13, 2), key = _ref14[0], value = _ref14[1];
          if (typeof value === "function") {
            return storyAcc;
          }
          if (Array.isArray(value)) {
            return Object.assign(storyAcc, _defineProperty2({}, key, value.slice().sort()));
          }
          return Object.assign(storyAcc, _defineProperty2({}, key, value));
        }, {
          args: story.initialArgs
        });
        return acc;
      }, {});
    }
  }, {
    key: "getSetStoriesPayload",
    value: function getSetStoriesPayload() {
      var stories = this.extract({
        includeDocsOnly: true
      });
      var kindParameters = Object.values(stories).reduce(function(acc, _ref15) {
        var title = _ref15.title;
        acc[title] = {};
        return acc;
      }, {});
      return {
        v: 2,
        globals: this.globals.get(),
        globalParameters: {},
        kindParameters,
        stories
      };
    }
  }, {
    key: "raw",
    value: function raw() {
      var _this7 = this;
      return Object.values(this.extract()).map(function(_ref16) {
        var id = _ref16.id;
        return _this7.fromId(id);
      });
    }
  }, {
    key: "fromId",
    value: function fromId(storyId) {
      var _this8 = this;
      if (!this.cachedCSFFiles) {
        throw new Error("Cannot call fromId/raw() unless you call cacheAllCSFFiles() first.");
      }
      var importPath;
      try {
        var _this$storyIndex$stor2 = this.storyIndex.storyIdToEntry(storyId);
        importPath = _this$storyIndex$stor2.importPath;
      } catch (err) {
        return null;
      }
      var csfFile = this.cachedCSFFiles[importPath];
      var story = this.storyFromCSFFile({
        storyId,
        csfFile
      });
      return Object.assign({}, story, {
        storyFn: function storyFn(update) {
          var context = Object.assign({}, _this8.getStoryContext(story), {
            viewMode: "story"
          });
          return story.unboundStoryFn(Object.assign({}, context, update));
        }
      });
    }
  }]);
  return StoryStore2;
}();

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/autoTitle.js
var import_es_array_iterator16 = __toESM(require_es_array_iterator());
var import_es_string_iterator16 = __toESM(require_es_string_iterator());
var import_es_regexp_exec17 = __toESM(require_es_regexp_exec());
var import_slash = __toESM(require_slash());

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/sortStories.js
var import_stable = __toESM(require_stable());

// .yarn/__virtual__/@storybook-store-virtual-3802ecc20b/0/cache/@storybook-store-npm-6.5.14-45f30c8ad3-7330a2492c.zip/node_modules/@storybook/store/dist/esm/storySort.js
var import_es_regexp_exec18 = __toESM(require_es_regexp_exec());

// .yarn/__virtual__/@storybook-preview-web-virtual-0a71c9150f/0/cache/@storybook-preview-web-npm-6.5.14-e34935fd73-ef4d2222fe.zip/node_modules/@storybook/preview-web/dist/esm/Preview.js
var import_es_regexp_exec19 = __toESM(require_es_regexp_exec());
var import_runtime4 = __toESM(require_runtime());
var import_es_array_iterator17 = __toESM(require_es_array_iterator());
var import_es_string_iterator17 = __toESM(require_es_string_iterator());
var import_global7 = __toESM(require_window());
var import_synchronous_promise2 = __toESM(require_synchronous_promise());

// .yarn/__virtual__/@storybook-preview-web-virtual-0a71c9150f/0/cache/@storybook-preview-web-npm-6.5.14-e34935fd73-ef4d2222fe.zip/node_modules/@storybook/preview-web/dist/esm/StoryRender.js
var import_runtime3 = __toESM(require_runtime());
var import_global6 = __toESM(require_window());
function asyncGeneratorStep3(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info2 = gen[key](arg);
    var value = info2.value;
  } catch (error2) {
    reject(error2);
    return;
  }
  if (info2.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator3(fn) {
  return function() {
    var self = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep3(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep3(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}
function _classCallCheck8(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties8(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass8(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties8(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties8(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
var AbortController = import_global6.default.AbortController;
function createController() {
  if (AbortController)
    return new AbortController();
  return {
    signal: {
      aborted: false
    },
    abort: function abort() {
      this.signal.aborted = true;
    }
  };
}
var PREPARE_ABORTED = new Error("prepareAborted");
var StoryRender = function() {
  function StoryRender2(channel, store, renderToScreen, callbacks, id, viewMode, story) {
    _classCallCheck8(this, StoryRender2);
    this.channel = channel;
    this.store = store;
    this.renderToScreen = renderToScreen;
    this.callbacks = callbacks;
    this.id = id;
    this.viewMode = viewMode;
    this.story = void 0;
    this.phase = void 0;
    this.abortController = void 0;
    this.canvasElement = void 0;
    this.notYetRendered = true;
    this.disableKeyListeners = false;
    this.abortController = createController();
    if (story) {
      this.story = story;
      this.phase = "preparing";
    }
  }
  _createClass8(StoryRender2, [{
    key: "runPhase",
    value: function() {
      var _runPhase = _asyncToGenerator3(regeneratorRuntime.mark(function _callee(signal, phase, phaseFn) {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                this.phase = phase;
                this.channel.emit(STORY_RENDER_PHASE_CHANGED, {
                  newPhase: this.phase,
                  storyId: this.id
                });
                if (!phaseFn) {
                  _context.next = 5;
                  break;
                }
                _context.next = 5;
                return phaseFn();
              case 5:
                if (signal.aborted) {
                  this.phase = "aborted";
                  this.channel.emit(STORY_RENDER_PHASE_CHANGED, {
                    newPhase: this.phase,
                    storyId: this.id
                  });
                }
              case 6:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
      function runPhase(_x, _x2, _x3) {
        return _runPhase.apply(this, arguments);
      }
      return runPhase;
    }()
  }, {
    key: "prepare",
    value: function() {
      var _prepare = _asyncToGenerator3(regeneratorRuntime.mark(function _callee3() {
        var _this = this;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this.runPhase(this.abortController.signal, "preparing", _asyncToGenerator3(regeneratorRuntime.mark(function _callee2() {
                  return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while (1) {
                      switch (_context2.prev = _context2.next) {
                        case 0:
                          _context2.next = 2;
                          return _this.store.loadStory({
                            storyId: _this.id
                          });
                        case 2:
                          _this.story = _context2.sent;
                        case 3:
                        case "end":
                          return _context2.stop();
                      }
                    }
                  }, _callee2);
                })));
              case 2:
                if (!this.abortController.signal.aborted) {
                  _context3.next = 5;
                  break;
                }
                this.store.cleanupStory(this.story);
                throw PREPARE_ABORTED;
              case 5:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));
      function prepare() {
        return _prepare.apply(this, arguments);
      }
      return prepare;
    }()
  }, {
    key: "isEqual",
    value: function isEqual(other) {
      return other && this.id === other.id && this.story && this.story === other.story;
    }
  }, {
    key: "isPreparing",
    value: function isPreparing() {
      return ["preparing"].includes(this.phase);
    }
  }, {
    key: "isPending",
    value: function isPending() {
      return ["rendering", "playing"].includes(this.phase);
    }
  }, {
    key: "context",
    value: function context() {
      return this.store.getStoryContext(this.story);
    }
  }, {
    key: "renderToElement",
    value: function() {
      var _renderToElement = _asyncToGenerator3(regeneratorRuntime.mark(function _callee4(canvasElement) {
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                this.canvasElement = canvasElement;
                return _context4.abrupt("return", this.render({
                  initial: true,
                  forceRemount: true
                }));
              case 2:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));
      function renderToElement(_x4) {
        return _renderToElement.apply(this, arguments);
      }
      return renderToElement;
    }()
  }, {
    key: "render",
    value: function() {
      var _render = _asyncToGenerator3(regeneratorRuntime.mark(function _callee9() {
        var _this2 = this;
        var _ref2, _ref2$initial, initial, _ref2$forceRemount, forceRemount, _this$story, id, componentId, title, name, applyLoaders, unboundStoryFn, playFunction, abortSignal, loadedContext, renderStoryContext, _renderContext, _args9 = arguments;
        return regeneratorRuntime.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _ref2 = _args9.length > 0 && _args9[0] !== void 0 ? _args9[0] : {}, _ref2$initial = _ref2.initial, initial = _ref2$initial === void 0 ? false : _ref2$initial, _ref2$forceRemount = _ref2.forceRemount, forceRemount = _ref2$forceRemount === void 0 ? false : _ref2$forceRemount;
                if (this.story) {
                  _context9.next = 3;
                  break;
                }
                throw new Error("cannot render when not prepared");
              case 3:
                _this$story = this.story, id = _this$story.id, componentId = _this$story.componentId, title = _this$story.title, name = _this$story.name, applyLoaders = _this$story.applyLoaders, unboundStoryFn = _this$story.unboundStoryFn, playFunction = _this$story.playFunction;
                if (forceRemount && !initial) {
                  this.cancelRender();
                  this.abortController = createController();
                }
                abortSignal = this.abortController.signal;
                _context9.prev = 6;
                _context9.next = 9;
                return this.runPhase(abortSignal, "loading", _asyncToGenerator3(regeneratorRuntime.mark(function _callee5() {
                  return regeneratorRuntime.wrap(function _callee5$(_context5) {
                    while (1) {
                      switch (_context5.prev = _context5.next) {
                        case 0:
                          _context5.next = 2;
                          return applyLoaders(Object.assign({}, _this2.context(), {
                            viewMode: _this2.viewMode
                          }));
                        case 2:
                          loadedContext = _context5.sent;
                        case 3:
                        case "end":
                          return _context5.stop();
                      }
                    }
                  }, _callee5);
                })));
              case 9:
                if (!abortSignal.aborted) {
                  _context9.next = 11;
                  break;
                }
                return _context9.abrupt("return");
              case 11:
                renderStoryContext = Object.assign({}, loadedContext, this.context(), {
                  abortSignal,
                  canvasElement: this.canvasElement
                });
                _renderContext = Object.assign({
                  componentId,
                  title,
                  kind: title,
                  id,
                  name,
                  story: name
                }, this.callbacks, {
                  forceRemount: forceRemount || this.notYetRendered,
                  storyContext: renderStoryContext,
                  storyFn: function storyFn() {
                    return unboundStoryFn(renderStoryContext);
                  },
                  unboundStoryFn
                });
                _context9.next = 15;
                return this.runPhase(abortSignal, "rendering", _asyncToGenerator3(regeneratorRuntime.mark(function _callee6() {
                  return regeneratorRuntime.wrap(function _callee6$(_context6) {
                    while (1) {
                      switch (_context6.prev = _context6.next) {
                        case 0:
                          return _context6.abrupt("return", _this2.renderToScreen(_renderContext, _this2.canvasElement));
                        case 1:
                        case "end":
                          return _context6.stop();
                      }
                    }
                  }, _callee6);
                })));
              case 15:
                this.notYetRendered = false;
                if (!abortSignal.aborted) {
                  _context9.next = 18;
                  break;
                }
                return _context9.abrupt("return");
              case 18:
                if (!(forceRemount && playFunction)) {
                  _context9.next = 27;
                  break;
                }
                this.disableKeyListeners = true;
                _context9.next = 22;
                return this.runPhase(abortSignal, "playing", _asyncToGenerator3(regeneratorRuntime.mark(function _callee7() {
                  return regeneratorRuntime.wrap(function _callee7$(_context7) {
                    while (1) {
                      switch (_context7.prev = _context7.next) {
                        case 0:
                          return _context7.abrupt("return", playFunction(_renderContext.storyContext));
                        case 1:
                        case "end":
                          return _context7.stop();
                      }
                    }
                  }, _callee7);
                })));
              case 22:
                _context9.next = 24;
                return this.runPhase(abortSignal, "played");
              case 24:
                this.disableKeyListeners = false;
                if (!abortSignal.aborted) {
                  _context9.next = 27;
                  break;
                }
                return _context9.abrupt("return");
              case 27:
                _context9.next = 29;
                return this.runPhase(abortSignal, "completed", _asyncToGenerator3(regeneratorRuntime.mark(function _callee8() {
                  return regeneratorRuntime.wrap(function _callee8$(_context8) {
                    while (1) {
                      switch (_context8.prev = _context8.next) {
                        case 0:
                          return _context8.abrupt("return", _this2.channel.emit(STORY_RENDERED, id));
                        case 1:
                        case "end":
                          return _context8.stop();
                      }
                    }
                  }, _callee8);
                })));
              case 29:
                _context9.next = 34;
                break;
              case 31:
                _context9.prev = 31;
                _context9.t0 = _context9["catch"](6);
                this.callbacks.showException(_context9.t0);
              case 34:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9, this, [[6, 31]]);
      }));
      function render() {
        return _render.apply(this, arguments);
      }
      return render;
    }()
  }, {
    key: "rerender",
    value: function() {
      var _rerender = _asyncToGenerator3(regeneratorRuntime.mark(function _callee10() {
        return regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                return _context10.abrupt("return", this.render());
              case 1:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));
      function rerender() {
        return _rerender.apply(this, arguments);
      }
      return rerender;
    }()
  }, {
    key: "remount",
    value: function() {
      var _remount = _asyncToGenerator3(regeneratorRuntime.mark(function _callee11() {
        return regeneratorRuntime.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                return _context11.abrupt("return", this.render({
                  forceRemount: true
                }));
              case 1:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11, this);
      }));
      function remount() {
        return _remount.apply(this, arguments);
      }
      return remount;
    }()
  }, {
    key: "cancelRender",
    value: function cancelRender() {
      this.abortController.abort();
    }
  }, {
    key: "teardown",
    value: function() {
      var _teardown = _asyncToGenerator3(regeneratorRuntime.mark(function _callee12() {
        var options, i, _args12 = arguments;
        return regeneratorRuntime.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                options = _args12.length > 0 && _args12[0] !== void 0 ? _args12[0] : {};
                this.cancelRender();
                if (this.story)
                  this.store.cleanupStory(this.story);
                i = 0;
              case 4:
                if (!(i < 3)) {
                  _context12.next = 12;
                  break;
                }
                if (this.isPending()) {
                  _context12.next = 7;
                  break;
                }
                return _context12.abrupt("return");
              case 7:
                _context12.next = 9;
                return new Promise(function(resolve) {
                  return setTimeout(resolve, 0);
                });
              case 9:
                i += 1;
                _context12.next = 4;
                break;
              case 12:
                import_global6.default.window.location.reload();
                _context12.next = 15;
                return new Promise(function() {
                });
              case 15:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee12, this);
      }));
      function teardown() {
        return _teardown.apply(this, arguments);
      }
      return teardown;
    }()
  }]);
  return StoryRender2;
}();
StoryRender.displayName = "StoryRender";

// .yarn/__virtual__/@storybook-preview-web-virtual-0a71c9150f/0/cache/@storybook-preview-web-npm-6.5.14-e34935fd73-ef4d2222fe.zip/node_modules/@storybook/preview-web/dist/esm/Preview.js
var _templateObject8;
var _templateObject23;
function _toConsumableArray9(arr) {
  return _arrayWithoutHoles9(arr) || _iterableToArray9(arr) || _unsupportedIterableToArray12(arr) || _nonIterableSpread9();
}
function _nonIterableSpread9() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray12(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray12(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray12(o, minLen);
}
function _iterableToArray9(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles9(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray12(arr);
}
function _arrayLikeToArray12(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function asyncGeneratorStep4(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info2 = gen[key](arg);
    var value = info2.value;
  } catch (error2) {
    reject(error2);
    return;
  }
  if (info2.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator4(fn) {
  return function() {
    var self = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep4(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep4(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}
function _taggedTemplateLiteral8(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _classCallCheck9(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties9(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass9(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties9(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties9(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
var fetch = import_global7.default.fetch;
var STORY_INDEX_PATH = "./stories.json";
var Preview = function() {
  function Preview2() {
    var _global$FEATURES;
    _classCallCheck9(this, Preview2);
    this.channel = void 0;
    this.serverChannel = void 0;
    this.storyStore = void 0;
    this.getStoryIndex = void 0;
    this.importFn = void 0;
    this.renderToDOM = void 0;
    this.storyRenders = [];
    this.previewEntryError = void 0;
    this.channel = addons.getChannel();
    if ((_global$FEATURES = import_global7.default.FEATURES) !== null && _global$FEATURES !== void 0 && _global$FEATURES.storyStoreV7 && addons.hasServerChannel()) {
      this.serverChannel = addons.getServerChannel();
    }
    this.storyStore = new StoryStore();
  }
  _createClass9(Preview2, [{
    key: "initialize",
    value: function initialize(_ref) {
      var _this = this;
      var getStoryIndex = _ref.getStoryIndex, importFn = _ref.importFn, getProjectAnnotations = _ref.getProjectAnnotations;
      this.getStoryIndex = getStoryIndex;
      this.importFn = importFn;
      this.setupListeners();
      return this.getProjectAnnotationsOrRenderError(getProjectAnnotations).then(function(projectAnnotations) {
        return _this.initializeWithProjectAnnotations(projectAnnotations);
      });
    }
  }, {
    key: "setupListeners",
    value: function setupListeners() {
      var _this$serverChannel;
      (_this$serverChannel = this.serverChannel) === null || _this$serverChannel === void 0 ? void 0 : _this$serverChannel.on(STORY_INDEX_INVALIDATED, this.onStoryIndexChanged.bind(this));
      this.channel.on(UPDATE_GLOBALS, this.onUpdateGlobals.bind(this));
      this.channel.on(UPDATE_STORY_ARGS, this.onUpdateArgs.bind(this));
      this.channel.on(RESET_STORY_ARGS, this.onResetArgs.bind(this));
      this.channel.on(FORCE_RE_RENDER, this.onForceReRender.bind(this));
      this.channel.on(FORCE_REMOUNT, this.onForceRemount.bind(this));
    }
  }, {
    key: "getProjectAnnotationsOrRenderError",
    value: function getProjectAnnotationsOrRenderError(getProjectAnnotations) {
      var _this2 = this;
      return import_synchronous_promise2.SynchronousPromise.resolve().then(getProjectAnnotations).then(function(projectAnnotations) {
        _this2.renderToDOM = projectAnnotations.renderToDOM;
        if (!_this2.renderToDOM) {
          throw new Error(esm_default(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral8(["\n            Expected your framework's preset to export a `renderToDOM` field.\n\n            Perhaps it needs to be upgraded for Storybook 6.4?\n\n            More info: https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#mainjs-framework-field          \n          "], ["\n            Expected your framework's preset to export a \\`renderToDOM\\` field.\n\n            Perhaps it needs to be upgraded for Storybook 6.4?\n\n            More info: https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#mainjs-framework-field          \n          "]))));
        }
        return projectAnnotations;
      }).catch(function(err) {
        _this2.renderPreviewEntryError("Error reading preview.js:", err);
        throw err;
      });
    }
  }, {
    key: "initializeWithProjectAnnotations",
    value: function initializeWithProjectAnnotations(projectAnnotations) {
      var _global$FEATURES2, _this3 = this;
      this.storyStore.setProjectAnnotations(projectAnnotations);
      this.setInitialGlobals();
      var storyIndexPromise;
      if ((_global$FEATURES2 = import_global7.default.FEATURES) !== null && _global$FEATURES2 !== void 0 && _global$FEATURES2.storyStoreV7) {
        storyIndexPromise = this.getStoryIndexFromServer();
      } else {
        if (!this.getStoryIndex) {
          throw new Error("No `getStoryIndex` passed defined in v6 mode");
        }
        storyIndexPromise = import_synchronous_promise2.SynchronousPromise.resolve().then(this.getStoryIndex);
      }
      return storyIndexPromise.then(function(storyIndex) {
        return _this3.initializeWithStoryIndex(storyIndex);
      }).catch(function(err) {
        _this3.renderPreviewEntryError("Error loading story index:", err);
        throw err;
      });
    }
  }, {
    key: "setInitialGlobals",
    value: function() {
      var _setInitialGlobals = _asyncToGenerator4(regeneratorRuntime.mark(function _callee() {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                this.emitGlobals();
              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
      function setInitialGlobals() {
        return _setInitialGlobals.apply(this, arguments);
      }
      return setInitialGlobals;
    }()
  }, {
    key: "emitGlobals",
    value: function emitGlobals() {
      this.channel.emit(SET_GLOBALS, {
        globals: this.storyStore.globals.get() || {},
        globalTypes: this.storyStore.projectAnnotations.globalTypes || {}
      });
    }
  }, {
    key: "getStoryIndexFromServer",
    value: function() {
      var _getStoryIndexFromServer = _asyncToGenerator4(regeneratorRuntime.mark(function _callee2() {
        var result;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return fetch(STORY_INDEX_PATH);
              case 2:
                result = _context2.sent;
                if (!(result.status === 200)) {
                  _context2.next = 5;
                  break;
                }
                return _context2.abrupt("return", result.json());
              case 5:
                _context2.t0 = Error;
                _context2.next = 8;
                return result.text();
              case 8:
                _context2.t1 = _context2.sent;
                throw new _context2.t0(_context2.t1);
              case 10:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));
      function getStoryIndexFromServer() {
        return _getStoryIndexFromServer.apply(this, arguments);
      }
      return getStoryIndexFromServer;
    }()
  }, {
    key: "initializeWithStoryIndex",
    value: function initializeWithStoryIndex(storyIndex) {
      var _global$FEATURES3;
      return this.storyStore.initialize({
        storyIndex,
        importFn: this.importFn,
        cache: !((_global$FEATURES3 = import_global7.default.FEATURES) !== null && _global$FEATURES3 !== void 0 && _global$FEATURES3.storyStoreV7)
      });
    }
  }, {
    key: "onGetProjectAnnotationsChanged",
    value: function() {
      var _onGetProjectAnnotationsChanged = _asyncToGenerator4(regeneratorRuntime.mark(function _callee3(_ref2) {
        var getProjectAnnotations, projectAnnotations;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                getProjectAnnotations = _ref2.getProjectAnnotations;
                delete this.previewEntryError;
                _context3.next = 4;
                return this.getProjectAnnotationsOrRenderError(getProjectAnnotations);
              case 4:
                projectAnnotations = _context3.sent;
                if (this.storyStore.projectAnnotations) {
                  _context3.next = 9;
                  break;
                }
                _context3.next = 8;
                return this.initializeWithProjectAnnotations(projectAnnotations);
              case 8:
                return _context3.abrupt("return");
              case 9:
                _context3.next = 11;
                return this.storyStore.setProjectAnnotations(projectAnnotations);
              case 11:
                this.emitGlobals();
              case 12:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));
      function onGetProjectAnnotationsChanged(_x) {
        return _onGetProjectAnnotationsChanged.apply(this, arguments);
      }
      return onGetProjectAnnotationsChanged;
    }()
  }, {
    key: "onStoryIndexChanged",
    value: function() {
      var _onStoryIndexChanged = _asyncToGenerator4(regeneratorRuntime.mark(function _callee4() {
        var storyIndex;
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                delete this.previewEntryError;
                if (this.storyStore.projectAnnotations) {
                  _context4.next = 3;
                  break;
                }
                return _context4.abrupt("return");
              case 3:
                _context4.prev = 3;
                _context4.next = 6;
                return this.getStoryIndexFromServer();
              case 6:
                storyIndex = _context4.sent;
                if (this.storyStore.storyIndex) {
                  _context4.next = 10;
                  break;
                }
                _context4.next = 10;
                return this.initializeWithStoryIndex(storyIndex);
              case 10:
                _context4.next = 12;
                return this.onStoriesChanged({
                  storyIndex
                });
              case 12:
                _context4.next = 18;
                break;
              case 14:
                _context4.prev = 14;
                _context4.t0 = _context4["catch"](3);
                this.renderPreviewEntryError("Error loading story index:", _context4.t0);
                throw _context4.t0;
              case 18:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this, [[3, 14]]);
      }));
      function onStoryIndexChanged() {
        return _onStoryIndexChanged.apply(this, arguments);
      }
      return onStoryIndexChanged;
    }()
  }, {
    key: "onStoriesChanged",
    value: function() {
      var _onStoriesChanged = _asyncToGenerator4(regeneratorRuntime.mark(function _callee5(_ref3) {
        var importFn, storyIndex;
        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                importFn = _ref3.importFn, storyIndex = _ref3.storyIndex;
                _context5.next = 3;
                return this.storyStore.onStoriesChanged({
                  importFn,
                  storyIndex
                });
              case 3:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));
      function onStoriesChanged(_x2) {
        return _onStoriesChanged.apply(this, arguments);
      }
      return onStoriesChanged;
    }()
  }, {
    key: "onUpdateGlobals",
    value: function() {
      var _onUpdateGlobals = _asyncToGenerator4(regeneratorRuntime.mark(function _callee6(_ref4) {
        var globals;
        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                globals = _ref4.globals;
                this.storyStore.globals.update(globals);
                _context6.next = 4;
                return Promise.all(this.storyRenders.map(function(r) {
                  return r.rerender();
                }));
              case 4:
                this.channel.emit(GLOBALS_UPDATED, {
                  globals: this.storyStore.globals.get(),
                  initialGlobals: this.storyStore.globals.initialGlobals
                });
              case 5:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));
      function onUpdateGlobals(_x3) {
        return _onUpdateGlobals.apply(this, arguments);
      }
      return onUpdateGlobals;
    }()
  }, {
    key: "onUpdateArgs",
    value: function() {
      var _onUpdateArgs = _asyncToGenerator4(regeneratorRuntime.mark(function _callee7(_ref5) {
        var storyId, updatedArgs;
        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                storyId = _ref5.storyId, updatedArgs = _ref5.updatedArgs;
                this.storyStore.args.update(storyId, updatedArgs);
                _context7.next = 4;
                return Promise.all(this.storyRenders.filter(function(r) {
                  return r.id === storyId;
                }).map(function(r) {
                  return r.rerender();
                }));
              case 4:
                this.channel.emit(STORY_ARGS_UPDATED, {
                  storyId,
                  args: this.storyStore.args.get(storyId)
                });
              case 5:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));
      function onUpdateArgs(_x4) {
        return _onUpdateArgs.apply(this, arguments);
      }
      return onUpdateArgs;
    }()
  }, {
    key: "onResetArgs",
    value: function() {
      var _onResetArgs = _asyncToGenerator4(regeneratorRuntime.mark(function _callee8(_ref6) {
        var storyId, argNames, render, story, argNamesToReset, updatedArgs;
        return regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                storyId = _ref6.storyId, argNames = _ref6.argNames;
                render = this.storyRenders.find(function(r) {
                  return r.id === storyId;
                });
                _context8.t0 = render === null || render === void 0 ? void 0 : render.story;
                if (_context8.t0) {
                  _context8.next = 7;
                  break;
                }
                _context8.next = 6;
                return this.storyStore.loadStory({
                  storyId
                });
              case 6:
                _context8.t0 = _context8.sent;
              case 7:
                story = _context8.t0;
                argNamesToReset = argNames || _toConsumableArray9(new Set([].concat(_toConsumableArray9(Object.keys(story.initialArgs)), _toConsumableArray9(Object.keys(this.storyStore.args.get(storyId))))));
                updatedArgs = argNamesToReset.reduce(function(acc, argName) {
                  acc[argName] = story.initialArgs[argName];
                  return acc;
                }, {});
                _context8.next = 12;
                return this.onUpdateArgs({
                  storyId,
                  updatedArgs
                });
              case 12:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));
      function onResetArgs(_x5) {
        return _onResetArgs.apply(this, arguments);
      }
      return onResetArgs;
    }()
  }, {
    key: "onForceReRender",
    value: function() {
      var _onForceReRender = _asyncToGenerator4(regeneratorRuntime.mark(function _callee9() {
        return regeneratorRuntime.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.next = 2;
                return Promise.all(this.storyRenders.map(function(r) {
                  return r.rerender();
                }));
              case 2:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));
      function onForceReRender() {
        return _onForceReRender.apply(this, arguments);
      }
      return onForceReRender;
    }()
  }, {
    key: "onForceRemount",
    value: function() {
      var _onForceRemount = _asyncToGenerator4(regeneratorRuntime.mark(function _callee10(_ref7) {
        var storyId;
        return regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                storyId = _ref7.storyId;
                _context10.next = 3;
                return Promise.all(this.storyRenders.filter(function(r) {
                  return r.id === storyId;
                }).map(function(r) {
                  return r.remount();
                }));
              case 3:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));
      function onForceRemount(_x6) {
        return _onForceRemount.apply(this, arguments);
      }
      return onForceRemount;
    }()
  }, {
    key: "renderStoryToElement",
    value: function renderStoryToElement(story, element) {
      var _this4 = this;
      var render = new StoryRender(this.channel, this.storyStore, this.renderToDOM, this.inlineStoryCallbacks(story.id), story.id, "docs", story);
      render.renderToElement(element);
      this.storyRenders.push(render);
      return _asyncToGenerator4(regeneratorRuntime.mark(function _callee11() {
        return regeneratorRuntime.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                _context11.next = 2;
                return _this4.teardownRender(render);
              case 2:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11);
      }));
    }
  }, {
    key: "teardownRender",
    value: function() {
      var _teardownRender = _asyncToGenerator4(regeneratorRuntime.mark(function _callee12(render) {
        var _ref9, viewModeChanged, _args12 = arguments;
        return regeneratorRuntime.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                _ref9 = _args12.length > 1 && _args12[1] !== void 0 ? _args12[1] : {}, viewModeChanged = _ref9.viewModeChanged;
                this.storyRenders = this.storyRenders.filter(function(r) {
                  return r !== render;
                });
                _context12.next = 4;
                return render === null || render === void 0 ? void 0 : render.teardown({
                  viewModeChanged
                });
              case 4:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee12, this);
      }));
      function teardownRender(_x7) {
        return _teardownRender.apply(this, arguments);
      }
      return teardownRender;
    }()
  }, {
    key: "extract",
    value: function() {
      var _extract = _asyncToGenerator4(regeneratorRuntime.mark(function _callee13(options) {
        var _global$FEATURES4;
        return regeneratorRuntime.wrap(function _callee13$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                if (!this.previewEntryError) {
                  _context13.next = 2;
                  break;
                }
                throw this.previewEntryError;
              case 2:
                if (this.storyStore.projectAnnotations) {
                  _context13.next = 4;
                  break;
                }
                throw new Error(esm_default(_templateObject23 || (_templateObject23 = _taggedTemplateLiteral8(["Failed to initialize Storybook.\n      \n      Do you have an error in your `preview.js`? Check your Storybook's browser console for errors."], ["Failed to initialize Storybook.\n      \n      Do you have an error in your \\`preview.js\\`? Check your Storybook's browser console for errors."]))));
              case 4:
                if (!((_global$FEATURES4 = import_global7.default.FEATURES) !== null && _global$FEATURES4 !== void 0 && _global$FEATURES4.storyStoreV7)) {
                  _context13.next = 7;
                  break;
                }
                _context13.next = 7;
                return this.storyStore.cacheAllCSFFiles();
              case 7:
                return _context13.abrupt("return", this.storyStore.extract(options));
              case 8:
              case "end":
                return _context13.stop();
            }
          }
        }, _callee13, this);
      }));
      function extract(_x8) {
        return _extract.apply(this, arguments);
      }
      return extract;
    }()
  }, {
    key: "inlineStoryCallbacks",
    value: function inlineStoryCallbacks(storyId) {
      return {
        showMain: function showMain() {
        },
        showError: function showError(err) {
          return logger.error("Error rendering docs story (".concat(storyId, ")"), err);
        },
        showException: function showException(err) {
          return logger.error("Error rendering docs story (".concat(storyId, ")"), err);
        }
      };
    }
  }, {
    key: "renderPreviewEntryError",
    value: function renderPreviewEntryError(reason, err) {
      this.previewEntryError = err;
      logger.error(reason);
      logger.error(err);
      this.channel.emit(CONFIG_ERROR, err);
    }
  }]);
  return Preview2;
}();

// .yarn/__virtual__/@storybook-preview-web-virtual-0a71c9150f/0/cache/@storybook-preview-web-npm-6.5.14-e34935fd73-ef4d2222fe.zip/node_modules/@storybook/preview-web/dist/esm/PreviewWeb.js
var import_runtime6 = __toESM(require_runtime());
var import_es_regexp_exec23 = __toESM(require_es_regexp_exec());
var import_es_array_iterator21 = __toESM(require_es_array_iterator());
var import_es_string_iterator21 = __toESM(require_es_string_iterator());
var import_util_deprecate6 = __toESM(require_browser());
var import_global11 = __toESM(require_window());

// .yarn/__virtual__/@storybook-preview-web-virtual-0a71c9150f/0/cache/@storybook-preview-web-npm-6.5.14-e34935fd73-ef4d2222fe.zip/node_modules/@storybook/preview-web/dist/esm/UrlStore.js
var import_es_array_iterator19 = __toESM(require_es_array_iterator());
var import_es_string_iterator19 = __toESM(require_es_string_iterator());
var import_es_regexp_exec21 = __toESM(require_es_regexp_exec());
var import_global8 = __toESM(require_window());
var import_qs2 = __toESM(require_lib());
var import_util_deprecate5 = __toESM(require_browser());

// .yarn/__virtual__/@storybook-preview-web-virtual-0a71c9150f/0/cache/@storybook-preview-web-npm-6.5.14-e34935fd73-ef4d2222fe.zip/node_modules/@storybook/preview-web/dist/esm/parseArgsParam.js
var import_es_array_iterator18 = __toESM(require_es_array_iterator());
var import_es_string_iterator18 = __toESM(require_es_string_iterator());
var import_es_regexp_exec20 = __toESM(require_es_regexp_exec());
var import_qs = __toESM(require_lib());
var import_isPlainObject3 = __toESM(require_isPlainObject());
var _templateObject9;
function _taggedTemplateLiteral9(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _defineProperty3(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _slicedToArray8(arr, i) {
  return _arrayWithHoles8(arr) || _iterableToArrayLimit8(arr, i) || _unsupportedIterableToArray13(arr, i) || _nonIterableRest8();
}
function _nonIterableRest8() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray13(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray13(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray13(o, minLen);
}
function _arrayLikeToArray13(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit8(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles8(arr) {
  if (Array.isArray(arr))
    return arr;
}
var VALIDATION_REGEXP = /^[a-zA-Z0-9 _-]*$/;
var NUMBER_REGEXP = /^-?[0-9]+(\.[0-9]+)?$/;
var HEX_REGEXP = /^#([a-f0-9]{3,4}|[a-f0-9]{6}|[a-f0-9]{8})$/i;
var COLOR_REGEXP = /^(rgba?|hsla?)\(([0-9]{1,3}),\s?([0-9]{1,3})%?,\s?([0-9]{1,3})%?,?\s?([0-9](\.[0-9]{1,2})?)?\)$/i;
var validateArgs = function validateArgs2() {
  var key = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  var value = arguments.length > 1 ? arguments[1] : void 0;
  if (key === null)
    return false;
  if (key === "" || !VALIDATION_REGEXP.test(key))
    return false;
  if (value === null || value === void 0)
    return true;
  if (value instanceof Date)
    return true;
  if (typeof value === "number" || typeof value === "boolean")
    return true;
  if (typeof value === "string") {
    return VALIDATION_REGEXP.test(value) || NUMBER_REGEXP.test(value) || HEX_REGEXP.test(value) || COLOR_REGEXP.test(value);
  }
  if (Array.isArray(value))
    return value.every(function(v) {
      return validateArgs2(key, v);
    });
  if ((0, import_isPlainObject3.default)(value))
    return Object.entries(value).every(function(_ref) {
      var _ref2 = _slicedToArray8(_ref, 2), k = _ref2[0], v = _ref2[1];
      return validateArgs2(k, v);
    });
  return false;
};
var QS_OPTIONS = {
  delimiter: ";",
  allowDots: true,
  allowSparse: true,
  decoder: function(_decoder) {
    function decoder(_x, _x2, _x3, _x4) {
      return _decoder.apply(this, arguments);
    }
    decoder.toString = function() {
      return _decoder.toString();
    };
    return decoder;
  }(function(str, defaultDecoder, charset, type) {
    if (type === "value" && str.startsWith("!")) {
      if (str === "!undefined")
        return void 0;
      if (str === "!null")
        return null;
      if (str.startsWith("!date(") && str.endsWith(")"))
        return new Date(str.slice(6, -1));
      if (str.startsWith("!hex(") && str.endsWith(")"))
        return "#".concat(str.slice(5, -1));
      var color = str.slice(1).match(COLOR_REGEXP);
      if (color) {
        if (str.startsWith("!rgba"))
          return "".concat(color[1], "(").concat(color[2], ", ").concat(color[3], ", ").concat(color[4], ", ").concat(color[5], ")");
        if (str.startsWith("!hsla"))
          return "".concat(color[1], "(").concat(color[2], ", ").concat(color[3], "%, ").concat(color[4], "%, ").concat(color[5], ")");
        return str.startsWith("!rgb") ? "".concat(color[1], "(").concat(color[2], ", ").concat(color[3], ", ").concat(color[4], ")") : "".concat(color[1], "(").concat(color[2], ", ").concat(color[3], "%, ").concat(color[4], "%)");
      }
    }
    if (type === "value" && NUMBER_REGEXP.test(str))
      return Number(str);
    return defaultDecoder(str, defaultDecoder, charset);
  })
};
var parseArgsParam = function parseArgsParam2(argsString) {
  var parts = argsString.split(";").map(function(part) {
    return part.replace("=", "~").replace(":", "=");
  });
  return Object.entries(import_qs.default.parse(parts.join(";"), QS_OPTIONS)).reduce(function(acc, _ref3) {
    var _ref4 = _slicedToArray8(_ref3, 2), key = _ref4[0], value = _ref4[1];
    if (validateArgs(key, value))
      return Object.assign(acc, _defineProperty3({}, key, value));
    once.warn(esm_default(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral9(["\n      Omitted potentially unsafe URL args.\n\n      More info: https://storybook.js.org/docs/react/writing-stories/args#setting-args-through-the-url\n    "]))));
    return acc;
  }, {});
};

// .yarn/__virtual__/@storybook-preview-web-virtual-0a71c9150f/0/cache/@storybook-preview-web-npm-6.5.14-e34935fd73-ef4d2222fe.zip/node_modules/@storybook/preview-web/dist/esm/UrlStore.js
var _excluded5 = ["path", "selectedKind", "selectedStory"];
function _classCallCheck10(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties10(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass10(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties10(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties10(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _typeof3(obj) {
  "@babel/helpers - typeof";
  return _typeof3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof3(obj);
}
function _objectWithoutProperties5(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose5(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose5(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var history = import_global8.default.history;
var document = import_global8.default.document;
function pathToId(path) {
  var match = (path || "").match(/^\/story\/(.+)/);
  if (!match) {
    throw new Error("Invalid path '".concat(path, "',  must start with '/story/'"));
  }
  return match[1];
}
var getQueryString = function getQueryString2(_ref) {
  var selection = _ref.selection, extraParams = _ref.extraParams;
  var _document$location$se = document.location.search, search = _document$location$se === void 0 ? "" : _document$location$se;
  var _qs$parse = import_qs2.default.parse(search, {
    ignoreQueryPrefix: true
  }), path = _qs$parse.path, selectedKind = _qs$parse.selectedKind, selectedStory = _qs$parse.selectedStory, rest = _objectWithoutProperties5(_qs$parse, _excluded5);
  return import_qs2.default.stringify(Object.assign({}, rest, extraParams, selection && {
    id: selection.storyId,
    viewMode: selection.viewMode
  }), {
    encode: false,
    addQueryPrefix: true
  });
};
var setPath = function setPath2(selection) {
  if (!selection)
    return;
  var query = getQueryString({
    selection
  });
  var _document$location$ha = document.location.hash, hash = _document$location$ha === void 0 ? "" : _document$location$ha;
  document.title = selection.storyId;
  history.replaceState({}, "", "".concat(document.location.pathname).concat(query).concat(hash));
};
var isObject = function isObject2(val) {
  return val != null && _typeof3(val) === "object" && Array.isArray(val) === false;
};
var getFirstString = function getFirstString2(v) {
  if (typeof v === "string") {
    return v;
  }
  if (Array.isArray(v)) {
    return getFirstString2(v[0]);
  }
  if (isObject(v)) {
    return getFirstString2(Object.values(v));
  }
  return void 0;
};
var deprecatedLegacyQuery = (0, import_util_deprecate5.default)(function() {
  return 0;
}, "URL formats with `selectedKind` and `selectedName` query parameters are deprecated.\nUse `id=$storyId` instead.\nSee https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#new-url-structure");
var getSelectionSpecifierFromPath = function getSelectionSpecifierFromPath2() {
  var query = import_qs2.default.parse(document.location.search, {
    ignoreQueryPrefix: true
  });
  var args = typeof query.args === "string" ? parseArgsParam(query.args) : void 0;
  var globals = typeof query.globals === "string" ? parseArgsParam(query.globals) : void 0;
  var viewMode = getFirstString(query.viewMode);
  if (typeof viewMode !== "string" || !viewMode.match(/docs|story/)) {
    viewMode = "story";
  }
  var path = getFirstString(query.path);
  var storyId = path ? pathToId(path) : getFirstString(query.id);
  if (storyId) {
    return {
      storySpecifier: storyId,
      args,
      globals,
      viewMode
    };
  }
  var title = getFirstString(query.selectedKind);
  var name = getFirstString(query.selectedStory);
  if (title && name) {
    deprecatedLegacyQuery();
    return {
      storySpecifier: {
        title,
        name
      },
      args,
      globals,
      viewMode
    };
  }
  return null;
};
var UrlStore = function() {
  function UrlStore2() {
    _classCallCheck10(this, UrlStore2);
    this.selectionSpecifier = void 0;
    this.selection = void 0;
    this.selectionSpecifier = getSelectionSpecifierFromPath();
  }
  _createClass10(UrlStore2, [{
    key: "setSelection",
    value: function setSelection(selection) {
      this.selection = selection;
      setPath(this.selection);
    }
  }, {
    key: "setQueryParams",
    value: function setQueryParams(queryParams) {
      var query = getQueryString({
        extraParams: queryParams
      });
      var _document$location$ha2 = document.location.hash, hash = _document$location$ha2 === void 0 ? "" : _document$location$ha2;
      history.replaceState({}, "", "".concat(document.location.pathname).concat(query).concat(hash));
    }
  }]);
  return UrlStore2;
}();

// .yarn/__virtual__/@storybook-preview-web-virtual-0a71c9150f/0/cache/@storybook-preview-web-npm-6.5.14-e34935fd73-ef4d2222fe.zip/node_modules/@storybook/preview-web/dist/esm/WebView.js
var import_es_array_iterator20 = __toESM(require_es_array_iterator());
var import_es_string_iterator20 = __toESM(require_es_string_iterator());
var import_es_regexp_exec22 = __toESM(require_es_regexp_exec());
var import_global9 = __toESM(require_window());
var import_ansi_to_html = __toESM(require_ansi_to_html());
var import_qs3 = __toESM(require_lib());
var _templateObject10;
function _slicedToArray9(arr, i) {
  return _arrayWithHoles9(arr) || _iterableToArrayLimit9(arr, i) || _unsupportedIterableToArray14(arr, i) || _nonIterableRest9();
}
function _nonIterableRest9() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray14(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray14(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray14(o, minLen);
}
function _arrayLikeToArray14(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit9(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles9(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _taggedTemplateLiteral10(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _classCallCheck11(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties11(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass11(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties11(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties11(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
var document2 = import_global9.default.document;
var PREPARING_DELAY = 100;
var layoutClassMap = {
  centered: "sb-main-centered",
  fullscreen: "sb-main-fullscreen",
  padded: "sb-main-padded"
};
var Mode;
(function(Mode2) {
  Mode2["MAIN"] = "MAIN";
  Mode2["NOPREVIEW"] = "NOPREVIEW";
  Mode2["PREPARING_STORY"] = "PREPARING_STORY";
  Mode2["PREPARING_DOCS"] = "PREPARING_DOCS";
  Mode2["ERROR"] = "ERROR";
})(Mode || (Mode = {}));
var classes = {
  PREPARING_STORY: "sb-show-preparing-story",
  PREPARING_DOCS: "sb-show-preparing-docs",
  MAIN: "sb-show-main",
  NOPREVIEW: "sb-show-nopreview",
  ERROR: "sb-show-errordisplay"
};
var ansiConverter = new import_ansi_to_html.default({
  escapeXML: true
});
var WebView = function() {
  function WebView2() {
    _classCallCheck11(this, WebView2);
    this.currentLayoutClass = void 0;
    this.testing = false;
    this.preparingTimeout = null;
    var _qs$parse = import_qs3.default.parse(document2.location.search, {
      ignoreQueryPrefix: true
    }), __SPECIAL_TEST_PARAMETER__ = _qs$parse.__SPECIAL_TEST_PARAMETER__;
    switch (__SPECIAL_TEST_PARAMETER__) {
      case "preparing-story": {
        this.showPreparingStory();
        this.testing = true;
        break;
      }
      case "preparing-docs": {
        this.showPreparingDocs();
        this.testing = true;
        break;
      }
      default:
    }
  }
  _createClass11(WebView2, [{
    key: "prepareForStory",
    value: function prepareForStory(story) {
      this.showStory();
      this.applyLayout(story.parameters.layout);
      document2.documentElement.scrollTop = 0;
      document2.documentElement.scrollLeft = 0;
      return this.storyRoot();
    }
  }, {
    key: "storyRoot",
    value: function storyRoot() {
      return document2.getElementById("root");
    }
  }, {
    key: "prepareForDocs",
    value: function prepareForDocs() {
      this.showMain();
      this.showDocs();
      this.applyLayout("fullscreen");
      return this.docsRoot();
    }
  }, {
    key: "docsRoot",
    value: function docsRoot() {
      return document2.getElementById("docs-root");
    }
  }, {
    key: "applyLayout",
    value: function applyLayout() {
      var layout = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "padded";
      if (layout === "none") {
        document2.body.classList.remove(this.currentLayoutClass);
        this.currentLayoutClass = null;
        return;
      }
      this.checkIfLayoutExists(layout);
      var layoutClass = layoutClassMap[layout];
      document2.body.classList.remove(this.currentLayoutClass);
      document2.body.classList.add(layoutClass);
      this.currentLayoutClass = layoutClass;
    }
  }, {
    key: "checkIfLayoutExists",
    value: function checkIfLayoutExists(layout) {
      if (!layoutClassMap[layout]) {
        logger.warn(esm_default(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral10(["The desired layout: ", " is not a valid option.\n         The possible options are: ", ", none."])), layout, Object.keys(layoutClassMap).join(", ")));
      }
    }
  }, {
    key: "showMode",
    value: function showMode(mode) {
      clearTimeout(this.preparingTimeout);
      Object.keys(Mode).forEach(function(otherMode) {
        if (otherMode === mode) {
          document2.body.classList.add(classes[otherMode]);
        } else {
          document2.body.classList.remove(classes[otherMode]);
        }
      });
    }
  }, {
    key: "showErrorDisplay",
    value: function showErrorDisplay(_ref) {
      var _ref$message = _ref.message, message = _ref$message === void 0 ? "" : _ref$message, _ref$stack = _ref.stack, stack = _ref$stack === void 0 ? "" : _ref$stack;
      var header = message;
      var detail = stack;
      var parts = message.split("\n");
      if (parts.length > 1) {
        var _parts = _slicedToArray9(parts, 1);
        header = _parts[0];
        detail = parts.slice(1).join("\n");
      }
      document2.getElementById("error-message").innerHTML = ansiConverter.toHtml(header);
      document2.getElementById("error-stack").innerHTML = ansiConverter.toHtml(detail);
      this.showMode(Mode.ERROR);
    }
  }, {
    key: "showNoPreview",
    value: function showNoPreview() {
      var _this$storyRoot, _this$docsRoot;
      if (this.testing)
        return;
      this.showMode(Mode.NOPREVIEW);
      (_this$storyRoot = this.storyRoot()) === null || _this$storyRoot === void 0 ? void 0 : _this$storyRoot.setAttribute("hidden", "true");
      (_this$docsRoot = this.docsRoot()) === null || _this$docsRoot === void 0 ? void 0 : _this$docsRoot.setAttribute("hidden", "true");
    }
  }, {
    key: "showPreparingStory",
    value: function showPreparingStory() {
      var _this = this;
      var _ref2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref2$immediate = _ref2.immediate, immediate = _ref2$immediate === void 0 ? false : _ref2$immediate;
      clearTimeout(this.preparingTimeout);
      if (immediate) {
        this.showMode(Mode.PREPARING_STORY);
      } else {
        this.preparingTimeout = setTimeout(function() {
          return _this.showMode(Mode.PREPARING_STORY);
        }, PREPARING_DELAY);
      }
    }
  }, {
    key: "showPreparingDocs",
    value: function showPreparingDocs() {
      var _this2 = this;
      clearTimeout(this.preparingTimeout);
      this.preparingTimeout = setTimeout(function() {
        return _this2.showMode(Mode.PREPARING_DOCS);
      }, PREPARING_DELAY);
    }
  }, {
    key: "showMain",
    value: function showMain() {
      this.showMode(Mode.MAIN);
    }
  }, {
    key: "showDocs",
    value: function showDocs() {
      this.storyRoot().setAttribute("hidden", "true");
      this.docsRoot().removeAttribute("hidden");
    }
  }, {
    key: "showStory",
    value: function showStory() {
      this.docsRoot().setAttribute("hidden", "true");
      this.storyRoot().removeAttribute("hidden");
    }
  }, {
    key: "showStoryDuringRender",
    value: function showStoryDuringRender() {
      document2.body.classList.add(classes.MAIN);
    }
  }]);
  return WebView2;
}();

// .yarn/__virtual__/@storybook-preview-web-virtual-0a71c9150f/0/cache/@storybook-preview-web-npm-6.5.14-e34935fd73-ef4d2222fe.zip/node_modules/@storybook/preview-web/dist/esm/DocsRender.js
var import_runtime5 = __toESM(require_runtime());
var import_global10 = __toESM(require_window());
function asyncGeneratorStep5(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info2 = gen[key](arg);
    var value = info2.value;
  } catch (error2) {
    reject(error2);
    return;
  }
  if (info2.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator5(fn) {
  return function() {
    var self = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep5(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep5(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}
function _classCallCheck12(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties12(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass12(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties12(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties12(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
var DocsRender = function() {
  function DocsRender2(channel, store, id, story) {
    _classCallCheck12(this, DocsRender2);
    this.channel = channel;
    this.store = store;
    this.id = id;
    this.story = story;
    this.canvasElement = void 0;
    this.context = void 0;
    this.disableKeyListeners = false;
  }
  _createClass12(DocsRender2, [{
    key: "isPreparing",
    value: function isPreparing() {
      return false;
    }
  }, {
    key: "renderToElement",
    value: function() {
      var _renderToElement = _asyncToGenerator5(regeneratorRuntime.mark(function _callee(canvasElement, renderStoryToElement) {
        var _this = this, _global$FEATURES;
        var _this$story, id, title, name, csfFile;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                this.canvasElement = canvasElement;
                _this$story = this.story, id = _this$story.id, title = _this$story.title, name = _this$story.name;
                _context.next = 4;
                return this.store.loadCSFFileByStoryId(this.id);
              case 4:
                csfFile = _context.sent;
                this.context = Object.assign({
                  id,
                  title,
                  name,
                  storyById: function storyById(storyId) {
                    return _this.store.storyFromCSFFile({
                      storyId,
                      csfFile
                    });
                  },
                  componentStories: function componentStories() {
                    return _this.store.componentStoriesFromCSFFile({
                      csfFile
                    });
                  },
                  loadStory: function loadStory(storyId) {
                    return _this.store.loadStory({
                      storyId
                    });
                  },
                  renderStoryToElement,
                  getStoryContext: function getStoryContext(renderedStory) {
                    return Object.assign({}, _this.store.getStoryContext(renderedStory), {
                      viewMode: "docs"
                    });
                  }
                }, !((_global$FEATURES = import_global10.default.FEATURES) !== null && _global$FEATURES !== void 0 && _global$FEATURES.breakingChangesV7) && this.store.getStoryContext(this.story));
                return _context.abrupt("return", this.render());
              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
      function renderToElement(_x, _x2) {
        return _renderToElement.apply(this, arguments);
      }
      return renderToElement;
    }()
  }, {
    key: "render",
    value: function() {
      var _render = _asyncToGenerator5(regeneratorRuntime.mark(function _callee2() {
        var _this2 = this;
        var renderer;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!(!this.story || !this.context || !this.canvasElement)) {
                  _context2.next = 2;
                  break;
                }
                throw new Error("DocsRender not ready to render");
              case 2:
                _context2.next = 4;
                return import("./renderDocs-EM4EYONU.js");
              case 4:
                renderer = _context2.sent;
                renderer.renderDocs(this.story, this.context, this.canvasElement, function() {
                  return _this2.channel.emit(DOCS_RENDERED, _this2.id);
                });
              case 6:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));
      function render() {
        return _render.apply(this, arguments);
      }
      return render;
    }()
  }, {
    key: "rerender",
    value: function() {
      var _rerender = _asyncToGenerator5(regeneratorRuntime.mark(function _callee3(isGlobals) {
        var _global$FEATURES2;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                if (!(!((_global$FEATURES2 = import_global10.default.FEATURES) !== null && _global$FEATURES2 !== void 0 && _global$FEATURES2.modernInlineRender) || isGlobals)) {
                  _context3.next = 3;
                  break;
                }
                _context3.next = 3;
                return this.render();
              case 3:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));
      function rerender(_x3) {
        return _rerender.apply(this, arguments);
      }
      return rerender;
    }()
  }, {
    key: "teardown",
    value: function() {
      var _teardown = _asyncToGenerator5(regeneratorRuntime.mark(function _callee4() {
        var _ref, viewModeChanged, renderer, _args4 = arguments;
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _ref = _args4.length > 0 && _args4[0] !== void 0 ? _args4[0] : {}, viewModeChanged = _ref.viewModeChanged;
                if (!(!viewModeChanged || !this.canvasElement)) {
                  _context4.next = 3;
                  break;
                }
                return _context4.abrupt("return");
              case 3:
                _context4.next = 5;
                return import("./renderDocs-EM4EYONU.js");
              case 5:
                renderer = _context4.sent;
                renderer.unmountDocs(this.canvasElement);
              case 7:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));
      function teardown() {
        return _teardown.apply(this, arguments);
      }
      return teardown;
    }()
  }], [{
    key: "fromStoryRender",
    value: function fromStoryRender(storyRender) {
      var channel = storyRender.channel, store = storyRender.store, id = storyRender.id, story = storyRender.story;
      return new DocsRender2(channel, store, id, story);
    }
  }]);
  return DocsRender2;
}();
DocsRender.displayName = "DocsRender";

// .yarn/__virtual__/@storybook-preview-web-virtual-0a71c9150f/0/cache/@storybook-preview-web-npm-6.5.14-e34935fd73-ef4d2222fe.zip/node_modules/@storybook/preview-web/dist/esm/PreviewWeb.js
function _typeof4(obj) {
  "@babel/helpers - typeof";
  return _typeof4 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof4(obj);
}
var _templateObject11;
var _templateObject24;
var _templateObject32;
var _templateObject42;
function asyncGeneratorStep6(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info2 = gen[key](arg);
    var value = info2.value;
  } catch (error2) {
    reject(error2);
    return;
  }
  if (info2.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator6(fn) {
  return function() {
    var self = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep6(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep6(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}
function _taggedTemplateLiteral11(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _classCallCheck13(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties13(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass13(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties13(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties13(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _get() {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    _get = Reflect.get;
  } else {
    _get = function _get2(target, property, receiver) {
      var base = _superPropBase(target, property);
      if (!base)
        return;
      var desc = Object.getOwnPropertyDescriptor(base, property);
      if (desc.get) {
        return desc.get.call(arguments.length < 3 ? target : receiver);
      }
      return desc.value;
    };
  }
  return _get.apply(this, arguments);
}
function _superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = _getPrototypeOf(object);
    if (object === null)
      break;
  }
  return object;
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass)
    _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf(o, p);
}
function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn(this, result);
  };
}
function _possibleConstructorReturn(self, call) {
  if (call && (_typeof4(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf(o);
}
var globalWindow2 = import_global11.default.window;
function focusInInput(event) {
  var target = event.target;
  return /input|textarea/i.test(target.tagName) || target.getAttribute("contenteditable") !== null;
}
var PreviewWeb = function(_Preview) {
  _inherits(PreviewWeb2, _Preview);
  var _super = _createSuper(PreviewWeb2);
  function PreviewWeb2() {
    var _this;
    var urlStore = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : new UrlStore();
    var webview = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : new WebView();
    _classCallCheck13(this, PreviewWeb2);
    _this = _super.call(this);
    _this.urlStore = void 0;
    _this.view = void 0;
    _this.previewEntryError = void 0;
    _this.currentSelection = void 0;
    _this.currentRender = void 0;
    _this.view = webview;
    _this.urlStore = urlStore;
    _this.storyStore.getSelection = (0, import_util_deprecate6.default)(function() {
      return _this.urlStore.selection;
    }, esm_default(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral11(["\n        `__STORYBOOK_STORY_STORE__.getSelection()` is deprecated and will be removed in 7.0.\n  \n        To get the current selection, use the `useStoryContext()` hook from `@storybook/addons`.\n      "], ["\n        \\`__STORYBOOK_STORY_STORE__.getSelection()\\` is deprecated and will be removed in 7.0.\n  \n        To get the current selection, use the \\`useStoryContext()\\` hook from \\`@storybook/addons\\`.\n      "]))));
    return _this;
  }
  _createClass13(PreviewWeb2, [{
    key: "setupListeners",
    value: function setupListeners() {
      _get(_getPrototypeOf(PreviewWeb2.prototype), "setupListeners", this).call(this);
      globalWindow2.onkeydown = this.onKeydown.bind(this);
      this.channel.on(SET_CURRENT_STORY, this.onSetCurrentStory.bind(this));
      this.channel.on(UPDATE_QUERY_PARAMS, this.onUpdateQueryParams.bind(this));
      this.channel.on(PRELOAD_STORIES, this.onPreloadStories.bind(this));
    }
  }, {
    key: "initializeWithProjectAnnotations",
    value: function initializeWithProjectAnnotations(projectAnnotations) {
      var _this2 = this;
      return _get(_getPrototypeOf(PreviewWeb2.prototype), "initializeWithProjectAnnotations", this).call(this, projectAnnotations).then(function() {
        return _this2.setInitialGlobals();
      });
    }
  }, {
    key: "setInitialGlobals",
    value: function() {
      var _setInitialGlobals = _asyncToGenerator6(regeneratorRuntime.mark(function _callee() {
        var _ref, globals;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _ref = this.urlStore.selectionSpecifier || {}, globals = _ref.globals;
                if (globals) {
                  this.storyStore.globals.updateFromPersisted(globals);
                }
                this.emitGlobals();
              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
      function setInitialGlobals() {
        return _setInitialGlobals.apply(this, arguments);
      }
      return setInitialGlobals;
    }()
  }, {
    key: "initializeWithStoryIndex",
    value: function initializeWithStoryIndex(storyIndex) {
      var _this3 = this;
      return _get(_getPrototypeOf(PreviewWeb2.prototype), "initializeWithStoryIndex", this).call(this, storyIndex).then(function() {
        var _global$FEATURES;
        if (!((_global$FEATURES = import_global11.default.FEATURES) !== null && _global$FEATURES !== void 0 && _global$FEATURES.storyStoreV7)) {
          _this3.channel.emit(SET_STORIES, _this3.storyStore.getSetStoriesPayload());
        }
        return _this3.selectSpecifiedStory();
      });
    }
  }, {
    key: "selectSpecifiedStory",
    value: function() {
      var _selectSpecifiedStory = _asyncToGenerator6(regeneratorRuntime.mark(function _callee2() {
        var _this$urlStore$select, storySpecifier, viewMode, args, storyId;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (this.urlStore.selectionSpecifier) {
                  _context2.next = 3;
                  break;
                }
                this.renderMissingStory();
                return _context2.abrupt("return");
              case 3:
                _this$urlStore$select = this.urlStore.selectionSpecifier, storySpecifier = _this$urlStore$select.storySpecifier, viewMode = _this$urlStore$select.viewMode, args = _this$urlStore$select.args;
                storyId = this.storyStore.storyIndex.storyIdFromSpecifier(storySpecifier);
                if (storyId) {
                  _context2.next = 8;
                  break;
                }
                if (storySpecifier === "*") {
                  this.renderStoryLoadingException(storySpecifier, new Error(esm_default(_templateObject24 || (_templateObject24 = _taggedTemplateLiteral11(["\n            Couldn't find any stories in your Storybook.\n            - Please check your stories field of your main.js config.\n            - Also check the browser console and terminal for error messages.\n          "])))));
                } else {
                  this.renderStoryLoadingException(storySpecifier, new Error(esm_default(_templateObject32 || (_templateObject32 = _taggedTemplateLiteral11(["\n            Couldn't find story matching '", "'.\n            - Are you sure a story with that id exists?\n            - Please check your stories field of your main.js config.\n            - Also check the browser console and terminal for error messages.\n          "])), storySpecifier)));
                }
                return _context2.abrupt("return");
              case 8:
                this.urlStore.setSelection({
                  storyId,
                  viewMode
                });
                this.channel.emit(STORY_SPECIFIED, this.urlStore.selection);
                this.channel.emit(CURRENT_STORY_WAS_SET, this.urlStore.selection);
                _context2.next = 13;
                return this.renderSelection({
                  persistedArgs: args
                });
              case 13:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));
      function selectSpecifiedStory() {
        return _selectSpecifiedStory.apply(this, arguments);
      }
      return selectSpecifiedStory;
    }()
  }, {
    key: "onGetProjectAnnotationsChanged",
    value: function() {
      var _onGetProjectAnnotationsChanged = _asyncToGenerator6(regeneratorRuntime.mark(function _callee3(_ref2) {
        var getProjectAnnotations;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                getProjectAnnotations = _ref2.getProjectAnnotations;
                _context3.next = 3;
                return _get(_getPrototypeOf(PreviewWeb2.prototype), "onGetProjectAnnotationsChanged", this).call(this, {
                  getProjectAnnotations
                });
              case 3:
                this.renderSelection();
              case 4:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));
      function onGetProjectAnnotationsChanged(_x) {
        return _onGetProjectAnnotationsChanged.apply(this, arguments);
      }
      return onGetProjectAnnotationsChanged;
    }()
  }, {
    key: "onStoriesChanged",
    value: function() {
      var _onStoriesChanged = _asyncToGenerator6(regeneratorRuntime.mark(function _callee4(_ref3) {
        var _global$FEATURES2;
        var importFn, storyIndex;
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                importFn = _ref3.importFn, storyIndex = _ref3.storyIndex;
                _get(_getPrototypeOf(PreviewWeb2.prototype), "onStoriesChanged", this).call(this, {
                  importFn,
                  storyIndex
                });
                if ((_global$FEATURES2 = import_global11.default.FEATURES) !== null && _global$FEATURES2 !== void 0 && _global$FEATURES2.storyStoreV7) {
                  _context4.next = 9;
                  break;
                }
                _context4.t0 = this.channel;
                _context4.t1 = SET_STORIES;
                _context4.next = 7;
                return this.storyStore.getSetStoriesPayload();
              case 7:
                _context4.t2 = _context4.sent;
                _context4.t0.emit.call(_context4.t0, _context4.t1, _context4.t2);
              case 9:
                if (!this.urlStore.selection) {
                  _context4.next = 14;
                  break;
                }
                _context4.next = 12;
                return this.renderSelection();
              case 12:
                _context4.next = 16;
                break;
              case 14:
                _context4.next = 16;
                return this.selectSpecifiedStory();
              case 16:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));
      function onStoriesChanged(_x2) {
        return _onStoriesChanged.apply(this, arguments);
      }
      return onStoriesChanged;
    }()
  }, {
    key: "onKeydown",
    value: function onKeydown(event) {
      var _this$currentRender;
      if (!((_this$currentRender = this.currentRender) !== null && _this$currentRender !== void 0 && _this$currentRender.disableKeyListeners) && !focusInInput(event)) {
        var altKey = event.altKey, ctrlKey = event.ctrlKey, metaKey = event.metaKey, shiftKey = event.shiftKey, key = event.key, code = event.code, keyCode = event.keyCode;
        this.channel.emit(PREVIEW_KEYDOWN, {
          event: {
            altKey,
            ctrlKey,
            metaKey,
            shiftKey,
            key,
            code,
            keyCode
          }
        });
      }
    }
  }, {
    key: "onSetCurrentStory",
    value: function onSetCurrentStory(selection) {
      this.urlStore.setSelection(Object.assign({
        viewMode: "story"
      }, selection));
      this.channel.emit(CURRENT_STORY_WAS_SET, this.urlStore.selection);
      this.renderSelection();
    }
  }, {
    key: "onUpdateQueryParams",
    value: function onUpdateQueryParams(queryParams) {
      this.urlStore.setQueryParams(queryParams);
    }
  }, {
    key: "onUpdateGlobals",
    value: function() {
      var _onUpdateGlobals = _asyncToGenerator6(regeneratorRuntime.mark(function _callee5(_ref4) {
        var globals;
        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                globals = _ref4.globals;
                _get(_getPrototypeOf(PreviewWeb2.prototype), "onUpdateGlobals", this).call(this, {
                  globals
                });
                if (!(this.currentRender instanceof DocsRender)) {
                  _context5.next = 5;
                  break;
                }
                _context5.next = 5;
                return this.currentRender.rerender(true);
              case 5:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));
      function onUpdateGlobals(_x3) {
        return _onUpdateGlobals.apply(this, arguments);
      }
      return onUpdateGlobals;
    }()
  }, {
    key: "onUpdateArgs",
    value: function() {
      var _onUpdateArgs = _asyncToGenerator6(regeneratorRuntime.mark(function _callee6(_ref5) {
        var storyId, updatedArgs;
        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                storyId = _ref5.storyId, updatedArgs = _ref5.updatedArgs;
                _get(_getPrototypeOf(PreviewWeb2.prototype), "onUpdateArgs", this).call(this, {
                  storyId,
                  updatedArgs
                });
                if (!(this.currentRender instanceof DocsRender)) {
                  _context6.next = 5;
                  break;
                }
                _context6.next = 5;
                return this.currentRender.rerender(false);
              case 5:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));
      function onUpdateArgs(_x4) {
        return _onUpdateArgs.apply(this, arguments);
      }
      return onUpdateArgs;
    }()
  }, {
    key: "onPreloadStories",
    value: function() {
      var _onPreloadStories = _asyncToGenerator6(regeneratorRuntime.mark(function _callee7(ids) {
        var _this4 = this;
        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.next = 2;
                return Promise.all(ids.map(function(id) {
                  return _this4.storyStore.loadStory({
                    storyId: id
                  });
                }));
              case 2:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7);
      }));
      function onPreloadStories(_x5) {
        return _onPreloadStories.apply(this, arguments);
      }
      return onPreloadStories;
    }()
  }, {
    key: "renderSelection",
    value: function() {
      var _renderSelection = _asyncToGenerator6(regeneratorRuntime.mark(function _callee8() {
        var _this$currentSelectio, _this$currentSelectio2, _lastRender, _this5 = this, _global$FEATURES3;
        var _ref6, persistedArgs, selection, storyId, storyIdChanged, viewModeChanged, lastSelection, lastRender, storyRender, implementationChanged, _storyRender$context, parameters, initialArgs, argTypes, args, _args8 = arguments;
        return regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                _ref6 = _args8.length > 0 && _args8[0] !== void 0 ? _args8[0] : {}, persistedArgs = _ref6.persistedArgs;
                selection = this.urlStore.selection;
                if (selection) {
                  _context8.next = 4;
                  break;
                }
                throw new Error("Cannot render story as no selection was made");
              case 4:
                storyId = selection.storyId;
                storyIdChanged = ((_this$currentSelectio = this.currentSelection) === null || _this$currentSelectio === void 0 ? void 0 : _this$currentSelectio.storyId) !== storyId;
                viewModeChanged = ((_this$currentSelectio2 = this.currentSelection) === null || _this$currentSelectio2 === void 0 ? void 0 : _this$currentSelectio2.viewMode) !== selection.viewMode;
                if (selection.viewMode === "story") {
                  this.view.showPreparingStory({
                    immediate: viewModeChanged
                  });
                } else {
                  this.view.showPreparingDocs();
                }
                lastSelection = this.currentSelection;
                lastRender = this.currentRender;
                if (!((_lastRender = lastRender) !== null && _lastRender !== void 0 && _lastRender.isPreparing())) {
                  _context8.next = 14;
                  break;
                }
                _context8.next = 13;
                return this.teardownRender(lastRender);
              case 13:
                lastRender = null;
              case 14:
                storyRender = new StoryRender(this.channel, this.storyStore, function() {
                  _this5.view.showStoryDuringRender();
                  return _this5.renderToDOM.apply(_this5, arguments);
                }, this.mainStoryCallbacks(storyId), storyId, "story");
                this.currentSelection = selection;
                this.currentRender = storyRender;
                _context8.prev = 17;
                _context8.next = 20;
                return storyRender.prepare();
              case 20:
                _context8.next = 29;
                break;
              case 22:
                _context8.prev = 22;
                _context8.t0 = _context8["catch"](17);
                if (!(_context8.t0 !== PREPARE_ABORTED)) {
                  _context8.next = 28;
                  break;
                }
                _context8.next = 27;
                return this.teardownRender(lastRender);
              case 27:
                this.renderStoryLoadingException(storyId, _context8.t0);
              case 28:
                return _context8.abrupt("return");
              case 29:
                implementationChanged = !storyIdChanged && !storyRender.isEqual(lastRender);
                if (persistedArgs)
                  this.storyStore.args.updateFromPersisted(storyRender.story, persistedArgs);
                _storyRender$context = storyRender.context(), parameters = _storyRender$context.parameters, initialArgs = _storyRender$context.initialArgs, argTypes = _storyRender$context.argTypes, args = _storyRender$context.args;
                if (!(lastRender && !storyIdChanged && !implementationChanged && !viewModeChanged)) {
                  _context8.next = 37;
                  break;
                }
                this.currentRender = lastRender;
                this.channel.emit(STORY_UNCHANGED, storyId);
                this.view.showMain();
                return _context8.abrupt("return");
              case 37:
                _context8.next = 39;
                return this.teardownRender(lastRender, {
                  viewModeChanged
                });
              case 39:
                if (lastSelection && (storyIdChanged || viewModeChanged)) {
                  this.channel.emit(STORY_CHANGED, storyId);
                }
                if ((_global$FEATURES3 = import_global11.default.FEATURES) !== null && _global$FEATURES3 !== void 0 && _global$FEATURES3.storyStoreV7) {
                  this.channel.emit(STORY_PREPARED, {
                    id: storyId,
                    parameters,
                    initialArgs,
                    argTypes,
                    args
                  });
                }
                if (implementationChanged || persistedArgs) {
                  this.channel.emit(STORY_ARGS_UPDATED, {
                    storyId,
                    args
                  });
                }
                if (selection.viewMode === "docs" || parameters.docsOnly) {
                  this.currentRender = DocsRender.fromStoryRender(storyRender);
                  this.currentRender.renderToElement(this.view.prepareForDocs(), this.renderStoryToElement.bind(this));
                } else {
                  this.storyRenders.push(storyRender);
                  this.currentRender.renderToElement(this.view.prepareForStory(storyRender.story));
                }
              case 43:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, this, [[17, 22]]);
      }));
      function renderSelection() {
        return _renderSelection.apply(this, arguments);
      }
      return renderSelection;
    }()
  }, {
    key: "renderStoryToElement",
    value: function renderStoryToElement(story, element) {
      var _this6 = this;
      var render = new StoryRender(this.channel, this.storyStore, this.renderToDOM, this.inlineStoryCallbacks(story.id), story.id, "docs", story);
      render.renderToElement(element);
      this.storyRenders.push(render);
      return _asyncToGenerator6(regeneratorRuntime.mark(function _callee9() {
        return regeneratorRuntime.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.next = 2;
                return _this6.teardownRender(render);
              case 2:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9);
      }));
    }
  }, {
    key: "teardownRender",
    value: function() {
      var _teardownRender = _asyncToGenerator6(regeneratorRuntime.mark(function _callee10(render) {
        var _ref8, viewModeChanged, _args10 = arguments;
        return regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _ref8 = _args10.length > 1 && _args10[1] !== void 0 ? _args10[1] : {}, viewModeChanged = _ref8.viewModeChanged;
                this.storyRenders = this.storyRenders.filter(function(r) {
                  return r !== render;
                });
                _context10.next = 4;
                return render === null || render === void 0 ? void 0 : render.teardown({
                  viewModeChanged
                });
              case 4:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));
      function teardownRender(_x6) {
        return _teardownRender.apply(this, arguments);
      }
      return teardownRender;
    }()
  }, {
    key: "extract",
    value: function() {
      var _extract = _asyncToGenerator6(regeneratorRuntime.mark(function _callee11(options) {
        var _global$FEATURES4;
        return regeneratorRuntime.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                if (!this.previewEntryError) {
                  _context11.next = 2;
                  break;
                }
                throw this.previewEntryError;
              case 2:
                if (this.storyStore.projectAnnotations) {
                  _context11.next = 4;
                  break;
                }
                throw new Error(esm_default(_templateObject42 || (_templateObject42 = _taggedTemplateLiteral11(["Failed to initialize Storybook.\n      \n      Do you have an error in your `preview.js`? Check your Storybook's browser console for errors."], ["Failed to initialize Storybook.\n      \n      Do you have an error in your \\`preview.js\\`? Check your Storybook's browser console for errors."]))));
              case 4:
                if (!((_global$FEATURES4 = import_global11.default.FEATURES) !== null && _global$FEATURES4 !== void 0 && _global$FEATURES4.storyStoreV7)) {
                  _context11.next = 7;
                  break;
                }
                _context11.next = 7;
                return this.storyStore.cacheAllCSFFiles();
              case 7:
                return _context11.abrupt("return", this.storyStore.extract(options));
              case 8:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11, this);
      }));
      function extract(_x7) {
        return _extract.apply(this, arguments);
      }
      return extract;
    }()
  }, {
    key: "mainStoryCallbacks",
    value: function mainStoryCallbacks(storyId) {
      var _this7 = this;
      return {
        showMain: function showMain() {
          return _this7.view.showMain();
        },
        showError: function showError(err) {
          return _this7.renderError(storyId, err);
        },
        showException: function showException(err) {
          return _this7.renderException(storyId, err);
        }
      };
    }
  }, {
    key: "inlineStoryCallbacks",
    value: function inlineStoryCallbacks(storyId) {
      return {
        showMain: function showMain() {
        },
        showError: function showError(err) {
          return logger.error("Error rendering docs story (".concat(storyId, ")"), err);
        },
        showException: function showException(err) {
          return logger.error("Error rendering docs story (".concat(storyId, ")"), err);
        }
      };
    }
  }, {
    key: "renderPreviewEntryError",
    value: function renderPreviewEntryError(reason, err) {
      _get(_getPrototypeOf(PreviewWeb2.prototype), "renderPreviewEntryError", this).call(this, reason, err);
      this.view.showErrorDisplay(err);
    }
  }, {
    key: "renderMissingStory",
    value: function renderMissingStory() {
      this.view.showNoPreview();
      this.channel.emit(STORY_MISSING);
    }
  }, {
    key: "renderStoryLoadingException",
    value: function renderStoryLoadingException(storySpecifier, err) {
      logger.error("Unable to load story '".concat(storySpecifier, "':"));
      logger.error(err);
      this.view.showErrorDisplay(err);
      this.channel.emit(STORY_MISSING, storySpecifier);
    }
  }, {
    key: "renderException",
    value: function renderException(storyId, err) {
      this.channel.emit(STORY_THREW_EXCEPTION, err);
      this.channel.emit(STORY_RENDER_PHASE_CHANGED, {
        newPhase: "errored",
        storyId
      });
      if (err !== IGNORED_EXCEPTION) {
        this.view.showErrorDisplay(err);
        logger.error("Error rendering story '".concat(storyId, "':"));
        logger.error(err);
      }
    }
  }, {
    key: "renderError",
    value: function renderError(storyId, _ref9) {
      var title = _ref9.title, description = _ref9.description;
      logger.error("Error rendering story ".concat(title, ": ").concat(description));
      this.channel.emit(STORY_ERRORED, {
        title,
        description
      });
      this.channel.emit(STORY_RENDER_PHASE_CHANGED, {
        newPhase: "errored",
        storyId
      });
      this.view.showErrorDisplay({
        message: title,
        stack: description
      });
    }
  }]);
  return PreviewWeb2;
}(Preview);

// .yarn/__virtual__/@storybook-preview-web-virtual-0a71c9150f/0/cache/@storybook-preview-web-npm-6.5.14-e34935fd73-ef4d2222fe.zip/node_modules/@storybook/preview-web/dist/esm/simulate-pageload.js
var import_es_string_iterator22 = __toESM(require_es_string_iterator());
var import_global12 = __toESM(require_window());
var document3 = import_global12.default.document;
var runScriptTypes = [
  "application/javascript",
  "application/ecmascript",
  "application/x-ecmascript",
  "application/x-javascript",
  "text/ecmascript",
  "text/javascript",
  "text/javascript1.0",
  "text/javascript1.1",
  "text/javascript1.2",
  "text/javascript1.3",
  "text/javascript1.4",
  "text/javascript1.5",
  "text/jscript",
  "text/livescript",
  "text/x-ecmascript",
  "text/x-javascript",
  "module"
];
var SCRIPT = "script";
var SCRIPTS_ROOT_ID = "scripts-root";
function simulateDOMContentLoaded() {
  var DOMContentLoadedEvent = document3.createEvent("Event");
  DOMContentLoadedEvent.initEvent("DOMContentLoaded", true, true);
  document3.dispatchEvent(DOMContentLoadedEvent);
}
function insertScript($script, callback, $scriptRoot) {
  var scriptEl = document3.createElement("script");
  scriptEl.type = $script.type === "module" ? "module" : "text/javascript";
  if ($script.src) {
    scriptEl.onload = callback;
    scriptEl.onerror = callback;
    scriptEl.src = $script.src;
  } else {
    scriptEl.textContent = $script.innerText;
  }
  if ($scriptRoot)
    $scriptRoot.appendChild(scriptEl);
  else
    document3.head.appendChild(scriptEl);
  $script.parentNode.removeChild($script);
  if (!$script.src)
    callback();
}
function insertScriptsSequentially(scriptsToExecute, callback) {
  var index = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
  scriptsToExecute[index](function() {
    index++;
    if (index === scriptsToExecute.length) {
      callback();
    } else {
      insertScriptsSequentially(scriptsToExecute, callback, index);
    }
  });
}
function simulatePageLoad($container) {
  var $scriptsRoot = document3.getElementById(SCRIPTS_ROOT_ID);
  if (!$scriptsRoot) {
    $scriptsRoot = document3.createElement("div");
    $scriptsRoot.id = SCRIPTS_ROOT_ID;
    document3.body.appendChild($scriptsRoot);
  } else {
    $scriptsRoot.innerHTML = "";
  }
  var $scripts = Array.from($container.querySelectorAll(SCRIPT));
  if ($scripts.length) {
    var scriptsToExecute = [];
    $scripts.forEach(function($script) {
      var typeAttr = $script.getAttribute("type");
      if (!typeAttr || runScriptTypes.includes(typeAttr)) {
        scriptsToExecute.push(function(callback) {
          return insertScript($script, callback, $scriptsRoot);
        });
      }
    });
    if (scriptsToExecute.length) {
      insertScriptsSequentially(scriptsToExecute, simulateDOMContentLoaded, void 0);
    }
  } else {
    simulateDOMContentLoaded();
  }
}
export {
  Preview,
  PreviewWeb,
  composeConfigs,
  simulateDOMContentLoaded,
  simulatePageLoad
};
//# sourceMappingURL=@storybook_preview-web.js.map
